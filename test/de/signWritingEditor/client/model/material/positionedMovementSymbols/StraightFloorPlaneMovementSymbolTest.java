package de.signWritingEditor.client.model.material.positionedMovementSymbols;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import de.signWritingEditor.shared.model.domainValue.Symbol;
import de.signWritingEditor.shared.model.material.MovementBaseSymbol;
import de.signWritingEditor.shared.model.material.PositionedMovementSymbol;
import de.signWritingEditor.shared.model.material.SymbolFactory;

public class StraightFloorPlaneMovementSymbolTest implements PositionedMovementSymbolTestInterface {

	/**
	 * StraightFloorPlaneMovementSymbols SymbolId 02 Group 05
	 */
	private PositionedMovementSymbol singleStraightMovementFloorPlaneSmall;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneSmallEmptyArrowhead;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneSmallSchemaArrowhead;

	private PositionedMovementSymbol singleStraightMovementFloorPlaneMedium;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneMediumEmptyArrowhead;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneMediumSchemaArrowhead;

	private PositionedMovementSymbol singleStraightMovementFloorPlaneLarge;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneLargeEmptyArrowhead;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneLargeSchemaArrowhead;

	private PositionedMovementSymbol singleStraightMovementFloorPlaneLargest;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneLargestEmptyArrowhead;
	private PositionedMovementSymbol singleStraightMovementFloorPlaneLargestSchemaArrowhead;

	private PositionedMovementSymbol singleWristFlexFloorPlane;
	private PositionedMovementSymbol singleWristFlexFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol singleWristFlexFloorPlaneSchemaArrowhead;

	private PositionedMovementSymbol doubleWristFlexFloorPlane;
	private PositionedMovementSymbol doubleWristFlexFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol doubleWristFlexFloorPlaneSchemaArrowhead;

	private PositionedMovementSymbol tripleWristFlexFloorPlane;
	private PositionedMovementSymbol tripleWristFlexFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol tripleWristFlexFloorPlaneSchemaArrowhead;

	private PositionedMovementSymbol doubleAlternatingWristFlexFloorPlane;
	private PositionedMovementSymbol doubleAlternatingWristFlexFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol doubleAlternatingWristFlexFloorPlaneSchemaArrowhead;
	private PositionedMovementSymbol doubleAlternatingWristFlexFloorPlaneMirrored;
	private PositionedMovementSymbol doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored;
	private PositionedMovementSymbol doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored;

	private PositionedMovementSymbol tripleAlternatingWristFlexFloorPlane;
	private PositionedMovementSymbol tripleAlternatingWristFlexFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol tripleAlternatingWristFlexFloorPlaneSchemaArrowhead;
	private PositionedMovementSymbol tripleAlternatingWristFlexFloorPlaneMirrored;
	private PositionedMovementSymbol tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored;
	private PositionedMovementSymbol tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored;

	private PositionedMovementSymbol doubleStraightMovementFloorPlane;
	private PositionedMovementSymbol doubleStraightMovementFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol doubleStraightMovementFloorPlaneSchemaArrowhead;

	private PositionedMovementSymbol tripleStraightMovementFloorPlane;
	private PositionedMovementSymbol tripleStraightMovementFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol tripleStraightMovementFloorPlaneSchemaArrowhead;

	private PositionedMovementSymbol doubleAlternatingMovementFloorPlane;
	private PositionedMovementSymbol doubleAlternatingMovementFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol doubleAlternatingMovementFloorPlaneSchemaArrowhead;
	private PositionedMovementSymbol doubleAlternatingMovementFloorPlaneMirrored;
	private PositionedMovementSymbol doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored;
	private PositionedMovementSymbol doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored;

	private PositionedMovementSymbol tripleAlternatingMovementFloorPlane;
	private PositionedMovementSymbol tripleAlternatingMovementFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol tripleAlternatingMovementFloorPlaneSchemaArrowhead;
	private PositionedMovementSymbol tripleAlternatingMovementFloorPlaneMirrored;
	private PositionedMovementSymbol tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored;
	private PositionedMovementSymbol tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored;

	private PositionedMovementSymbol crossMovementFloorPlane;
	private PositionedMovementSymbol crossMovementFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol crossMovementFloorPlaneSchemaArrowhead;
	private PositionedMovementSymbol crossMovementFloorPlaneMirrored;
	private PositionedMovementSymbol crossMovementFloorPlaneEmptyArrowheadMirrored;
	private PositionedMovementSymbol crossMovementFloorPlaneSchemaArrowheadMirrored;

	private PositionedMovementSymbol bendFloorPlane;
	private PositionedMovementSymbol bendFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol bendFloorPlaneSchemaArrowhead;
	private PositionedMovementSymbol bendFloorPlaneMirrored;
	private PositionedMovementSymbol bendFloorPlaneEmptyArrowheadMirrored;
	private PositionedMovementSymbol bendFloorPlaneSchemaArrowheadMirrored;

	private PositionedMovementSymbol cornerFloorPlaneSmall;
	private PositionedMovementSymbol cornerFloorPlaneSmallEmptyArrowhead;
	private PositionedMovementSymbol cornerFloorPlaneSmallSchemaArrowhead;
	private PositionedMovementSymbol cornerFloorPlaneSmallMirrored;
	private PositionedMovementSymbol cornerFloorPlaneSmallEmptyArrowheadMirrored;
	private PositionedMovementSymbol cornerFloorPlaneSmallSchemaArrowheadMirrored;

	private PositionedMovementSymbol cornerFloorPlaneMedium;
	private PositionedMovementSymbol cornerFloorPlaneMediumEmptyArrowhead;
	private PositionedMovementSymbol cornerFloorPlaneMediumSchemaArrowhead;
	private PositionedMovementSymbol cornerFloorPlaneMediumMirrored;
	private PositionedMovementSymbol cornerFloorPlaneMediumEmptyArrowheadMirrored;
	private PositionedMovementSymbol cornerFloorPlaneMediumSchemaArrowheadMirrored;

	private PositionedMovementSymbol cornerFloorPlaneLarge;
	private PositionedMovementSymbol cornerFloorPlaneLargeEmptyArrowhead;
	private PositionedMovementSymbol cornerFloorPlaneLargeSchemaArrowhead;
	private PositionedMovementSymbol cornerFloorPlaneLargeMirrored;
	private PositionedMovementSymbol cornerFloorPlaneLargeEmptyArrowheadMirrored;
	private PositionedMovementSymbol cornerFloorPlaneLargeSchemaArrowheadMirrored;

	private PositionedMovementSymbol checkFloorPlane;
	private PositionedMovementSymbol checkFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol checkFloorPlaneSchemaArrowhead;
	private PositionedMovementSymbol checkFloorPlaneMirrored;
	private PositionedMovementSymbol checkFloorPlaneEmptyArrowheadMirrored;
	private PositionedMovementSymbol checkFloorPlaneSchemaArrowheadMirrored;

	private PositionedMovementSymbol boxFloorPlaneSmall;
	private PositionedMovementSymbol boxFloorPlaneSmallEmptyArrowhead;
	private PositionedMovementSymbol boxFloorPlaneSmallSchemaArrowhead;
	private PositionedMovementSymbol boxFloorPlaneSmallMirrored;
	private PositionedMovementSymbol boxFloorPlaneSmallEmptyArrowheadMirrored;
	private PositionedMovementSymbol boxFloorPlaneSmallSchemaArrowheadMirrored;

	private PositionedMovementSymbol boxFloorPlaneMedium;
	private PositionedMovementSymbol boxFloorPlaneMediumEmptyArrowhead;
	private PositionedMovementSymbol boxFloorPlaneMediumSchemaArrowhead;
	private PositionedMovementSymbol boxFloorPlaneMediumMirrored;
	private PositionedMovementSymbol boxFloorPlaneMediumEmptyArrowheadMirrored;
	private PositionedMovementSymbol boxFloorPlaneMediumSchemaArrowheadMirrored;

	private PositionedMovementSymbol boxFloorPlaneLarge;
	private PositionedMovementSymbol boxFloorPlaneLargeEmptyArrowhead;
	private PositionedMovementSymbol boxFloorPlaneLargeSchemaArrowhead;
	private PositionedMovementSymbol boxFloorPlaneLargeMirrored;
	private PositionedMovementSymbol boxFloorPlaneLargeEmptyArrowheadMirrored;
	private PositionedMovementSymbol boxFloorPlaneLargeSchemaArrowheadMirrored;

	private PositionedMovementSymbol zigzagFloorPlaneSmall;
	private PositionedMovementSymbol zigzagFloorPlaneSmallEmptyArrowhead;
	private PositionedMovementSymbol zigzagFloorPlaneSmallSchemaArrowhead;
	private PositionedMovementSymbol zigzagFloorPlaneSmallMirrored;
	private PositionedMovementSymbol zigzagFloorPlaneSmallEmptyArrowheadMirrored;
	private PositionedMovementSymbol zigzagFloorPlaneSmallSchemaArrowheadMirrored;

	private PositionedMovementSymbol zigzagFloorPlaneMedium;
	private PositionedMovementSymbol zigzagFloorPlaneMediumEmptyArrowhead;
	private PositionedMovementSymbol zigzagFloorPlaneMediumSchemaArrowhead;
	private PositionedMovementSymbol zigzagFloorPlaneMediumMirrored;
	private PositionedMovementSymbol zigzagFloorPlaneMediumEmptyArrowheadMirrored;
	private PositionedMovementSymbol zigzagFloorPlaneMediumSchemaArrowheadMirrored;

	private PositionedMovementSymbol zigzagFloorPlaneLarge;
	private PositionedMovementSymbol zigzagFloorPlaneLargeEmptyArrowhead;
	private PositionedMovementSymbol zigzagFloorPlaneLargeSchemaArrowhead;
	private PositionedMovementSymbol zigzagFloorPlaneLargeMirrored;
	private PositionedMovementSymbol zigzagFloorPlaneLargeEmptyArrowheadMirrored;
	private PositionedMovementSymbol zigzagFloorPlaneLargeSchemaArrowheadMirrored;

	private PositionedMovementSymbol peaksFloorPlaneSmall;
	private PositionedMovementSymbol peaksFloorPlaneSmallEmptyArrowhead;
	private PositionedMovementSymbol peaksFloorPlaneSmallSchemaArrowhead;
	private PositionedMovementSymbol peaksFloorPlaneSmallMirrored;
	private PositionedMovementSymbol peaksFloorPlaneSmallEmptyArrowheadMirrored;
	private PositionedMovementSymbol peaksFloorPlaneSmallSchemaArrowheadMirrored;

	private PositionedMovementSymbol peaksFloorPlaneMedium;
	private PositionedMovementSymbol peaksFloorPlaneMediumEmptyArrowhead;
	private PositionedMovementSymbol peaksFloorPlaneMediumSchemaArrowhead;
	private PositionedMovementSymbol peaksFloorPlaneMediumMirrored;
	private PositionedMovementSymbol peaksFloorPlaneMediumEmptyArrowheadMirrored;
	private PositionedMovementSymbol peaksFloorPlaneMediumSchemaArrowheadMirrored;

	private PositionedMovementSymbol peaksFloorPlaneLarge;
	private PositionedMovementSymbol peaksFloorPlaneLargeEmptyArrowhead;
	private PositionedMovementSymbol peaksFloorPlaneLargeSchemaArrowhead;
	private PositionedMovementSymbol peaksFloorPlaneLargeMirrored;
	private PositionedMovementSymbol peaksFloorPlaneLargeEmptyArrowheadMirrored;
	private PositionedMovementSymbol peaksFloorPlaneLargeSchemaArrowheadMirrored;

	private PositionedMovementSymbol travelRotationSingleWallPlaneFilledArrow;
	private PositionedMovementSymbol travelRotationSingleWallPlaneFilledArrowEmptyArrowhead;
	private PositionedMovementSymbol travelRotationSingleWallPlaneFilledArrowSchemaArrowhead;
	private PositionedMovementSymbol travelRotationSingleWallPlaneFilledArrowMirrored;
	private PositionedMovementSymbol travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored;
	private PositionedMovementSymbol travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored;

	private PositionedMovementSymbol travelRotationDoubleWallPlaneFilledArrow;
	private PositionedMovementSymbol travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead;
	private PositionedMovementSymbol travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead;
	private PositionedMovementSymbol travelRotationDoubleWallPlaneFilledArrowMirrored;
	private PositionedMovementSymbol travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored;
	private PositionedMovementSymbol travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored;

	private PositionedMovementSymbol travelRotationAlternatingWallPlaneFilledArrow;
	private PositionedMovementSymbol travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead;
	private PositionedMovementSymbol travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead;
	private PositionedMovementSymbol travelRotationAlternatingWallPlaneFilledArrowMirrored;
	private PositionedMovementSymbol travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored;
	private PositionedMovementSymbol travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored;

	private PositionedMovementSymbol travelRotationSingleFloorPlaneFilledArrow;
	private PositionedMovementSymbol travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead;
	private PositionedMovementSymbol travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead;
	private PositionedMovementSymbol travelRotationSingleFloorPlaneFilledArrowMirrored;
	private PositionedMovementSymbol travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored;
	private PositionedMovementSymbol travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored;

	private PositionedMovementSymbol travelRotationDoubleFloorPlaneFilledArrow;
	private PositionedMovementSymbol travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead;
	private PositionedMovementSymbol travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead;
	private PositionedMovementSymbol travelRotationDoubleFloorPlaneFilledArrowMirrored;
	private PositionedMovementSymbol travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored;
	private PositionedMovementSymbol travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored;

	private PositionedMovementSymbol travelRotationAlternatingFloorPlaneFilledArrow;
	private PositionedMovementSymbol travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead;
	private PositionedMovementSymbol travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead;
	private PositionedMovementSymbol travelRotationAlternatingFloorPlaneFilledArrowMirrored;
	private PositionedMovementSymbol travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored;
	private PositionedMovementSymbol travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored;

	private PositionedMovementSymbol travelShakingFloorPlane;
	private PositionedMovementSymbol travelShakingFloorPlaneEmptyArrowhead;
	private PositionedMovementSymbol travelShakingFloorPlaneSchemaArrowhead;

	private SymbolFactory symbolFactory;

	@Override
	public void setUp(SymbolFactory symbolFactory) {

		this.symbolFactory = symbolFactory;

		singleStraightMovementFloorPlaneSmall = new PositionedMovementSymbol(
				MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_SMALL.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_SMALL.getIswaSymbol().getBaseSymbol()));

		Symbol singleStraightMovementFloorPlaneSmallEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-01-02-01");
		singleStraightMovementFloorPlaneSmallEmptyArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneSmallEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneSmallEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol singleStraightMovementFloorPlaneSmallSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-01-03-01");
		singleStraightMovementFloorPlaneSmallSchemaArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneSmallSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneSmallSchemaArrowheadSymbol.getBaseSymbol()));

		singleStraightMovementFloorPlaneMedium = new PositionedMovementSymbol(
				MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_MEDIUM.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_MEDIUM
						.getIswaSymbol().getBaseSymbol()));
		Symbol singleStraightMovementFloorPlaneMediumEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-02-02-01");
		singleStraightMovementFloorPlaneMediumEmptyArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneMediumEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneMediumEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol singleStraightMovementFloorPlaneMediumSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-02-03-01");
		singleStraightMovementFloorPlaneMediumSchemaArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneMediumSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneMediumSchemaArrowheadSymbol.getBaseSymbol()));

		singleStraightMovementFloorPlaneLarge = new PositionedMovementSymbol(
				MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGE.getIswaSymbol().getBaseSymbol()));
		Symbol singleStraightMovementFloorPlaneLargeEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-03-02-01");
		singleStraightMovementFloorPlaneLargeEmptyArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneLargeEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneLargeEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol singleStraightMovementFloorPlaneLargeSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-03-03-01");
		singleStraightMovementFloorPlaneLargeSchemaArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneLargeSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneLargeSchemaArrowheadSymbol.getBaseSymbol()));

		singleStraightMovementFloorPlaneLargest = new PositionedMovementSymbol(
				MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGEST.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(MovementBaseSymbol.SINGLE_STRAIGHT_MOVEMENT_FLOOR_PLANE_LARGEST
						.getIswaSymbol().getBaseSymbol()));
		Symbol singleStraightMovementFloorPlaneLargestEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-04-02-01");
		singleStraightMovementFloorPlaneLargestEmptyArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneLargestEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneLargestEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol singleStraightMovementFloorPlaneLargestSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-001-04-03-01");
		singleStraightMovementFloorPlaneLargestSchemaArrowhead = new PositionedMovementSymbol(
				singleStraightMovementFloorPlaneLargestSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						singleStraightMovementFloorPlaneLargestSchemaArrowheadSymbol.getBaseSymbol()));

		singleWristFlexFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.SINGLE_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.SINGLE_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol singleWristFlexFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-001-05-02-01");
		singleWristFlexFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				singleWristFlexFloorPlaneEmptyArrowheadSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(singleWristFlexFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol singleWristFlexFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-001-05-03-01");
		singleWristFlexFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				singleWristFlexFloorPlaneSchemaArrowheadSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(singleWristFlexFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));

		doubleStraightMovementFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.DOUBLE_STRAIGHT_MOVEMENT_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.DOUBLE_STRAIGHT_MOVEMENT_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol doubleStraightMovementFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-002-01-02-01");
		doubleStraightMovementFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				doubleStraightMovementFloorPlaneEmptyArrowheadSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						doubleStraightMovementFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol doubleStraightMovementFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-002-01-03-01");
		doubleStraightMovementFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				doubleStraightMovementFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleStraightMovementFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));

		doubleWristFlexFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.DOUBLE_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.DOUBLE_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol doubleWristFlexFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-002-02-02-01");
		doubleWristFlexFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				doubleWristFlexFloorPlaneEmptyArrowheadSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(doubleWristFlexFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol doubleWristFlexFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-002-02-03-01");
		doubleWristFlexFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				doubleWristFlexFloorPlaneSchemaArrowheadSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(doubleWristFlexFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));

		doubleAlternatingMovementFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.DOUBLE_ALTERNATING_MOVEMENT_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.DOUBLE_ALTERNATING_MOVEMENT_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol doubleAlternatingMovementFloorPlaneEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-003-01-02-01");
		doubleAlternatingMovementFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				doubleAlternatingMovementFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingMovementFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol doubleAlternatingMovementFloorPlaneSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-003-01-03-01");
		doubleAlternatingMovementFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				doubleAlternatingMovementFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingMovementFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol doubleAlternatingMovementFloorPlaneMirroredSymbol = symbolFactory.createSymbol("02-05-003-01-01-09");
		doubleAlternatingMovementFloorPlaneMirrored = new PositionedMovementSymbol(
				doubleAlternatingMovementFloorPlaneMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(doubleAlternatingMovementFloorPlaneMirroredSymbol.getBaseSymbol()));
		Symbol doubleAlternatingMovementFloorPlaneEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-003-01-02-09");
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored = new PositionedMovementSymbol(
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingMovementFloorPlaneEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol doubleAlternatingMovementFloorPlaneSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-003-01-03-09");
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored = new PositionedMovementSymbol(
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingMovementFloorPlaneSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		doubleAlternatingWristFlexFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.DOUBLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.DOUBLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol doubleAlternatingWristFlexFloorPlaneEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-003-02-02-01");
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingWristFlexFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol doubleAlternatingWristFlexFloorPlaneSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-003-02-03-01");
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingWristFlexFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol doubleAlternatingWristFlexFloorPlaneMirroredSymbol = symbolFactory.createSymbol("02-05-003-02-01-09");
		doubleAlternatingWristFlexFloorPlaneMirrored = new PositionedMovementSymbol(
				doubleAlternatingWristFlexFloorPlaneMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingWristFlexFloorPlaneMirroredSymbol.getBaseSymbol()));
		Symbol doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-003-02-02-09");
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored = new PositionedMovementSymbol(
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-003-02-03-09");
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored = new PositionedMovementSymbol(
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		crossMovementFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.CROSS_MOVEMENT_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.CROSS_MOVEMENT_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol crossMovementFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-004-01-02-01");
		crossMovementFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				crossMovementFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(crossMovementFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol crossMovementFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-004-01-03-01");
		crossMovementFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				crossMovementFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(crossMovementFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol crossMovementFloorPlaneMirroredSymbol = symbolFactory.createSymbol("02-05-004-01-01-09");
		crossMovementFloorPlaneMirrored = new PositionedMovementSymbol(crossMovementFloorPlaneMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(crossMovementFloorPlaneMirroredSymbol.getBaseSymbol()));
		Symbol crossMovementFloorPlaneEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-004-01-02-09");
		crossMovementFloorPlaneEmptyArrowheadMirrored = new PositionedMovementSymbol(
				crossMovementFloorPlaneEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						crossMovementFloorPlaneEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol crossMovementFloorPlaneSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-004-01-03-09");
		crossMovementFloorPlaneSchemaArrowheadMirrored = new PositionedMovementSymbol(
				crossMovementFloorPlaneSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						crossMovementFloorPlaneSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		tripleStraightMovementFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.TRIPLE_STRAIGHT_MOVEMENT_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.TRIPLE_STRAIGHT_MOVEMENT_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol tripleStraightMovementFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-005-01-02-01");
		tripleStraightMovementFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				tripleStraightMovementFloorPlaneEmptyArrowheadSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						tripleStraightMovementFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol tripleStraightMovementFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-005-01-03-01");
		tripleStraightMovementFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				tripleStraightMovementFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleStraightMovementFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));

		tripleWristFlexFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.TRIPLE_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.TRIPLE_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol tripleWristFlexFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-005-02-02-01");
		tripleWristFlexFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				tripleWristFlexFloorPlaneEmptyArrowheadSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(tripleWristFlexFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol tripleWristFlexFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-005-02-03-01");
		tripleWristFlexFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				tripleWristFlexFloorPlaneSchemaArrowheadSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(tripleWristFlexFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));

		tripleAlternatingMovementFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.TRIPLE_ALTERNATING_MOVEMENT_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.TRIPLE_ALTERNATING_MOVEMENT_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol tripleAlternatingMovementFloorPlaneEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-006-01-02-01");
		tripleAlternatingMovementFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				tripleAlternatingMovementFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingMovementFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol tripleAlternatingMovementFloorPlaneSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-006-01-03-01");
		tripleAlternatingMovementFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				tripleAlternatingMovementFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingMovementFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol tripleAlternatingMovementFloorPlaneMirroredSymbol = symbolFactory.createSymbol("02-05-006-01-01-09");
		tripleAlternatingMovementFloorPlaneMirrored = new PositionedMovementSymbol(
				tripleAlternatingMovementFloorPlaneMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(tripleAlternatingMovementFloorPlaneMirroredSymbol.getBaseSymbol()));
		Symbol tripleAlternatingMovementFloorPlaneEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-006-01-02-09");
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored = new PositionedMovementSymbol(
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingMovementFloorPlaneEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol tripleAlternatingMovementFloorPlaneSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-006-01-03-09");
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored = new PositionedMovementSymbol(
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingMovementFloorPlaneSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		tripleAlternatingWristFlexFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.TRIPLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.TRIPLE_ALTERNATING_WRIST_FLEX_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol tripleAlternatingWristFlexFloorPlaneEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-006-02-02-01");
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingWristFlexFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol tripleAlternatingWristFlexFloorPlaneSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-006-02-03-01");
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingWristFlexFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol tripleAlternatingWristFlexFloorPlaneMirroredSymbol = symbolFactory.createSymbol("02-05-006-02-01-09");
		tripleAlternatingWristFlexFloorPlaneMirrored = new PositionedMovementSymbol(
				tripleAlternatingWristFlexFloorPlaneMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingWristFlexFloorPlaneMirroredSymbol.getBaseSymbol()));
		Symbol tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-006-02-02-09");
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored = new PositionedMovementSymbol(
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-006-02-03-09");
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored = new PositionedMovementSymbol(
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		bendFloorPlane = new PositionedMovementSymbol(MovementBaseSymbol.BENT_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.BENT_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol bendFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-007-01-02-01");
		bendFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(bendFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(bendFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol bendFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-007-01-03-01");
		bendFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(bendFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(bendFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol bendFloorPlaneMirroredSymbol = symbolFactory.createSymbol("02-05-007-01-01-09");
		bendFloorPlaneMirrored = new PositionedMovementSymbol(bendFloorPlaneMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(bendFloorPlaneMirroredSymbol.getBaseSymbol()));
		Symbol bendFloorPlaneEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-007-01-02-09");
		bendFloorPlaneEmptyArrowheadMirrored = new PositionedMovementSymbol(bendFloorPlaneEmptyArrowheadMirroredSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(bendFloorPlaneEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol bendFloorPlaneSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-007-01-03-09");
		bendFloorPlaneSchemaArrowheadMirrored = new PositionedMovementSymbol(
				bendFloorPlaneSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(bendFloorPlaneSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		cornerFloorPlaneSmall = new PositionedMovementSymbol(
				MovementBaseSymbol.CORNER_FLOOR_PLANE_SMALL.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.CORNER_FLOOR_PLANE_SMALL.getIswaSymbol().getBaseSymbol()));
		Symbol cornerFloorPlaneSmallEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-008-01-02-01");
		cornerFloorPlaneSmallEmptyArrowhead = new PositionedMovementSymbol(cornerFloorPlaneSmallEmptyArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneSmallEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneSmallSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-008-01-03-01");
		cornerFloorPlaneSmallSchemaArrowhead = new PositionedMovementSymbol(cornerFloorPlaneSmallSchemaArrowheadSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneSmallSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneSmallMirroredSymbol = symbolFactory.createSymbol("02-05-008-01-01-09");
		cornerFloorPlaneSmallMirrored = new PositionedMovementSymbol(cornerFloorPlaneSmallMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneSmallMirroredSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneSmallEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-008-01-02-09");
		cornerFloorPlaneSmallEmptyArrowheadMirrored = new PositionedMovementSymbol(
				cornerFloorPlaneSmallEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(cornerFloorPlaneSmallEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneSmallSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-008-01-03-09");
		cornerFloorPlaneSmallSchemaArrowheadMirrored = new PositionedMovementSymbol(
				cornerFloorPlaneSmallSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						cornerFloorPlaneSmallSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		cornerFloorPlaneMedium = new PositionedMovementSymbol(
				MovementBaseSymbol.CORNER_FLOOR_PLANE_MEDIUM.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.CORNER_FLOOR_PLANE_MEDIUM.getIswaSymbol().getBaseSymbol()));
		Symbol cornerFloorPlaneMediumEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-008-02-02-01");
		cornerFloorPlaneMediumEmptyArrowhead = new PositionedMovementSymbol(cornerFloorPlaneMediumEmptyArrowheadSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneMediumEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneMediumSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-008-02-03-01");
		cornerFloorPlaneMediumSchemaArrowhead = new PositionedMovementSymbol(
				cornerFloorPlaneMediumSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneMediumSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneMediumMirroredSymbol = symbolFactory.createSymbol("02-05-008-02-01-09");
		cornerFloorPlaneMediumMirrored = new PositionedMovementSymbol(cornerFloorPlaneMediumMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneMediumMirroredSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneMediumEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-008-02-02-09");
		cornerFloorPlaneMediumEmptyArrowheadMirrored = new PositionedMovementSymbol(
				cornerFloorPlaneMediumEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						cornerFloorPlaneMediumEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneMediumSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-008-02-03-09");
		cornerFloorPlaneMediumSchemaArrowheadMirrored = new PositionedMovementSymbol(
				cornerFloorPlaneMediumSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						cornerFloorPlaneMediumSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		cornerFloorPlaneLarge = new PositionedMovementSymbol(
				MovementBaseSymbol.CORNER_FLOOR_PLANE_LARGE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.CORNER_FLOOR_PLANE_LARGE.getIswaSymbol().getBaseSymbol()));
		Symbol cornerFloorPlaneLargeEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-008-03-02-01");
		cornerFloorPlaneLargeEmptyArrowhead = new PositionedMovementSymbol(cornerFloorPlaneLargeEmptyArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneLargeEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneLargeSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-008-03-03-01");
		cornerFloorPlaneLargeSchemaArrowhead = new PositionedMovementSymbol(cornerFloorPlaneLargeSchemaArrowheadSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneLargeSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneLargeMirroredSymbol = symbolFactory.createSymbol("02-05-008-03-01-09");
		cornerFloorPlaneLargeMirrored = new PositionedMovementSymbol(cornerFloorPlaneLargeMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(cornerFloorPlaneLargeMirroredSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneLargeEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-008-03-02-09");
		cornerFloorPlaneLargeEmptyArrowheadMirrored = new PositionedMovementSymbol(
				cornerFloorPlaneLargeEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(cornerFloorPlaneLargeEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol cornerFloorPlaneLargeSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-008-03-03-09");
		cornerFloorPlaneLargeSchemaArrowheadMirrored = new PositionedMovementSymbol(
				cornerFloorPlaneLargeSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						cornerFloorPlaneLargeSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		checkFloorPlane = new PositionedMovementSymbol(MovementBaseSymbol.CHECK_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.CHECK_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol checkFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-009-01-02-01");
		checkFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(checkFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(checkFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol checkFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-009-01-03-01");
		checkFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(checkFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(checkFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol checkFloorPlaneMirroredSymbol = symbolFactory.createSymbol("02-05-009-01-01-09");
		checkFloorPlaneMirrored = new PositionedMovementSymbol(checkFloorPlaneMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(checkFloorPlaneMirroredSymbol.getBaseSymbol()));
		Symbol checkFloorPlaneEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-009-01-02-09");
		checkFloorPlaneEmptyArrowheadMirrored = new PositionedMovementSymbol(
				checkFloorPlaneEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(checkFloorPlaneEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol checkFloorPlaneSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-009-01-03-09");
		checkFloorPlaneSchemaArrowheadMirrored = new PositionedMovementSymbol(
				checkFloorPlaneSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(checkFloorPlaneSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		boxFloorPlaneSmall = new PositionedMovementSymbol(MovementBaseSymbol.BOX_FLOOR_PLANE_SMALL.getIswaSymbol(), 0,
				0, 2, symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.BOX_FLOOR_PLANE_SMALL.getIswaSymbol().getBaseSymbol()));
		Symbol boxFloorPlaneSmallEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-010-01-02-01");
		boxFloorPlaneSmallEmptyArrowhead = new PositionedMovementSymbol(boxFloorPlaneSmallEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneSmallEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneSmallSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-010-01-03-01");
		boxFloorPlaneSmallSchemaArrowhead = new PositionedMovementSymbol(boxFloorPlaneSmallSchemaArrowheadSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneSmallSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneSmallMirroredSymbol = symbolFactory.createSymbol("02-05-010-01-01-09");
		boxFloorPlaneSmallMirrored = new PositionedMovementSymbol(boxFloorPlaneSmallMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneSmallMirroredSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneSmallEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-010-01-02-09");
		boxFloorPlaneSmallEmptyArrowheadMirrored = new PositionedMovementSymbol(
				boxFloorPlaneSmallEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(boxFloorPlaneSmallEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneSmallSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-010-01-03-09");
		boxFloorPlaneSmallSchemaArrowheadMirrored = new PositionedMovementSymbol(
				boxFloorPlaneSmallSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(boxFloorPlaneSmallSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		boxFloorPlaneMedium = new PositionedMovementSymbol(MovementBaseSymbol.BOX_FLOOR_PLANE_MEDIUM.getIswaSymbol(), 0,
				0, 2, symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.BOX_FLOOR_PLANE_MEDIUM.getIswaSymbol().getBaseSymbol()));
		Symbol boxFloorPlaneMediumEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-010-02-02-01");
		boxFloorPlaneMediumEmptyArrowhead = new PositionedMovementSymbol(boxFloorPlaneMediumEmptyArrowheadSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneMediumEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneMediumSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-010-02-03-01");
		boxFloorPlaneMediumSchemaArrowhead = new PositionedMovementSymbol(boxFloorPlaneMediumSchemaArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneMediumSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneMediumMirroredSymbol = symbolFactory.createSymbol("02-05-010-02-01-09");
		boxFloorPlaneMediumMirrored = new PositionedMovementSymbol(boxFloorPlaneMediumMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneMediumMirroredSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneMediumEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-010-02-02-09");
		boxFloorPlaneMediumEmptyArrowheadMirrored = new PositionedMovementSymbol(
				boxFloorPlaneMediumEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(boxFloorPlaneMediumEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneMediumSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-010-02-03-09");
		boxFloorPlaneMediumSchemaArrowheadMirrored = new PositionedMovementSymbol(
				boxFloorPlaneMediumSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(boxFloorPlaneMediumSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		boxFloorPlaneLarge = new PositionedMovementSymbol(MovementBaseSymbol.BOX_FLOOR_PLANE_LARGE.getIswaSymbol(), 0,
				0, 2, symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.BOX_FLOOR_PLANE_LARGE.getIswaSymbol().getBaseSymbol()));
		Symbol boxFloorPlaneLargeEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-010-03-02-01");
		boxFloorPlaneLargeEmptyArrowhead = new PositionedMovementSymbol(boxFloorPlaneLargeEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneLargeEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneLargeSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-010-03-03-01");
		boxFloorPlaneLargeSchemaArrowhead = new PositionedMovementSymbol(boxFloorPlaneLargeSchemaArrowheadSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneLargeSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneLargeMirroredSymbol = symbolFactory.createSymbol("02-05-010-03-01-09");
		boxFloorPlaneLargeMirrored = new PositionedMovementSymbol(boxFloorPlaneLargeMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(boxFloorPlaneLargeMirroredSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneLargeEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-010-03-02-09");
		boxFloorPlaneLargeEmptyArrowheadMirrored = new PositionedMovementSymbol(
				boxFloorPlaneLargeEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(boxFloorPlaneLargeEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol boxFloorPlaneLargeSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-010-03-03-09");
		boxFloorPlaneLargeSchemaArrowheadMirrored = new PositionedMovementSymbol(
				boxFloorPlaneLargeSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(boxFloorPlaneLargeSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		zigzagFloorPlaneSmall = new PositionedMovementSymbol(
				MovementBaseSymbol.ZIGZAG_FLOOR_PLANE_SMALL.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.ZIGZAG_FLOOR_PLANE_SMALL.getIswaSymbol().getBaseSymbol()));
		Symbol zigzagFloorPlaneSmallEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-011-01-02-01");
		zigzagFloorPlaneSmallEmptyArrowhead = new PositionedMovementSymbol(zigzagFloorPlaneSmallEmptyArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneSmallEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneSmallSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-011-01-03-01");
		zigzagFloorPlaneSmallSchemaArrowhead = new PositionedMovementSymbol(zigzagFloorPlaneSmallSchemaArrowheadSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneSmallSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneSmallMirroredSymbol = symbolFactory.createSymbol("02-05-011-01-01-09");
		zigzagFloorPlaneSmallMirrored = new PositionedMovementSymbol(zigzagFloorPlaneSmallMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneSmallMirroredSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneSmallEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-011-01-02-09");
		zigzagFloorPlaneSmallEmptyArrowheadMirrored = new PositionedMovementSymbol(
				zigzagFloorPlaneSmallEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(zigzagFloorPlaneSmallEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneSmallSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-011-01-03-09");
		zigzagFloorPlaneSmallSchemaArrowheadMirrored = new PositionedMovementSymbol(
				zigzagFloorPlaneSmallSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						zigzagFloorPlaneSmallSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		zigzagFloorPlaneMedium = new PositionedMovementSymbol(
				MovementBaseSymbol.ZIGZAG_FLOOR_PLANE_MEDIUM.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.ZIGZAG_FLOOR_PLANE_MEDIUM.getIswaSymbol().getBaseSymbol()));
		Symbol zigzagFloorPlaneMediumEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-011-02-02-01");
		zigzagFloorPlaneMediumEmptyArrowhead = new PositionedMovementSymbol(zigzagFloorPlaneMediumEmptyArrowheadSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneMediumEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneMediumSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-011-02-03-01");
		zigzagFloorPlaneMediumSchemaArrowhead = new PositionedMovementSymbol(
				zigzagFloorPlaneMediumSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneMediumSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneMediumMirroredSymbol = symbolFactory.createSymbol("02-05-011-02-01-09");
		zigzagFloorPlaneMediumMirrored = new PositionedMovementSymbol(zigzagFloorPlaneMediumMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneMediumMirroredSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneMediumEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-011-02-02-09");
		zigzagFloorPlaneMediumEmptyArrowheadMirrored = new PositionedMovementSymbol(
				zigzagFloorPlaneMediumEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						zigzagFloorPlaneMediumEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneMediumSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-011-02-03-09");
		zigzagFloorPlaneMediumSchemaArrowheadMirrored = new PositionedMovementSymbol(
				zigzagFloorPlaneMediumSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						zigzagFloorPlaneMediumSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		zigzagFloorPlaneLarge = new PositionedMovementSymbol(
				MovementBaseSymbol.ZIGZAG_FLOOR_PLANE_LARGE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.ZIGZAG_FLOOR_PLANE_LARGE.getIswaSymbol().getBaseSymbol()));
		Symbol zigzagFloorPlaneLargeEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-011-03-02-01");
		zigzagFloorPlaneLargeEmptyArrowhead = new PositionedMovementSymbol(zigzagFloorPlaneLargeEmptyArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneLargeEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneLargeSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-011-03-03-01");
		zigzagFloorPlaneLargeSchemaArrowhead = new PositionedMovementSymbol(zigzagFloorPlaneLargeSchemaArrowheadSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneLargeSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneLargeMirroredSymbol = symbolFactory.createSymbol("02-05-011-03-01-09");
		zigzagFloorPlaneLargeMirrored = new PositionedMovementSymbol(zigzagFloorPlaneLargeMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(zigzagFloorPlaneLargeMirroredSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneLargeEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-011-03-02-09");
		zigzagFloorPlaneLargeEmptyArrowheadMirrored = new PositionedMovementSymbol(
				zigzagFloorPlaneLargeEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(zigzagFloorPlaneLargeEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol zigzagFloorPlaneLargeSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-011-03-03-09");
		zigzagFloorPlaneLargeSchemaArrowheadMirrored = new PositionedMovementSymbol(
				zigzagFloorPlaneLargeSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						zigzagFloorPlaneLargeSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		peaksFloorPlaneSmall = new PositionedMovementSymbol(MovementBaseSymbol.PEAKS_FLOOR_PLANE_SMALL.getIswaSymbol(),
				0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.PEAKS_FLOOR_PLANE_SMALL.getIswaSymbol().getBaseSymbol()));
		Symbol peaksFloorPlaneSmallEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-012-01-02-01");
		peaksFloorPlaneSmallEmptyArrowhead = new PositionedMovementSymbol(peaksFloorPlaneSmallEmptyArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneSmallEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneSmallSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-012-01-03-01");
		peaksFloorPlaneSmallSchemaArrowhead = new PositionedMovementSymbol(peaksFloorPlaneSmallSchemaArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneSmallSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneSmallMirroredSymbol = symbolFactory.createSymbol("02-05-012-01-01-09");
		peaksFloorPlaneSmallMirrored = new PositionedMovementSymbol(peaksFloorPlaneSmallMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneSmallMirroredSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneSmallEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-012-01-02-09");
		peaksFloorPlaneSmallEmptyArrowheadMirrored = new PositionedMovementSymbol(
				peaksFloorPlaneSmallEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(peaksFloorPlaneSmallEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneSmallSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-012-01-03-09");
		peaksFloorPlaneSmallSchemaArrowheadMirrored = new PositionedMovementSymbol(
				peaksFloorPlaneSmallSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(peaksFloorPlaneSmallSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		peaksFloorPlaneMedium = new PositionedMovementSymbol(
				MovementBaseSymbol.PEAKS_FLOOR_PLANE_MEDIUM.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.PEAKS_FLOOR_PLANE_MEDIUM.getIswaSymbol().getBaseSymbol()));
		Symbol peaksFloorPlaneMediumEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-012-02-02-01");
		peaksFloorPlaneMediumEmptyArrowhead = new PositionedMovementSymbol(peaksFloorPlaneMediumEmptyArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneMediumEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneMediumSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-012-02-03-01");
		peaksFloorPlaneMediumSchemaArrowhead = new PositionedMovementSymbol(peaksFloorPlaneMediumSchemaArrowheadSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneMediumSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneMediumMirroredSymbol = symbolFactory.createSymbol("02-05-012-02-01-09");
		peaksFloorPlaneMediumMirrored = new PositionedMovementSymbol(peaksFloorPlaneMediumMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneMediumMirroredSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneMediumEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-012-02-02-09");
		peaksFloorPlaneMediumEmptyArrowheadMirrored = new PositionedMovementSymbol(
				peaksFloorPlaneMediumEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(peaksFloorPlaneMediumEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneMediumSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-012-02-03-09");
		peaksFloorPlaneMediumSchemaArrowheadMirrored = new PositionedMovementSymbol(
				peaksFloorPlaneMediumSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						peaksFloorPlaneMediumSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		peaksFloorPlaneLarge = new PositionedMovementSymbol(MovementBaseSymbol.PEAKS_FLOOR_PLANE_LARGE.getIswaSymbol(),
				0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.PEAKS_FLOOR_PLANE_LARGE.getIswaSymbol().getBaseSymbol()));
		Symbol peaksFloorPlaneLargeEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-012-03-02-01");
		peaksFloorPlaneLargeEmptyArrowhead = new PositionedMovementSymbol(peaksFloorPlaneLargeEmptyArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneLargeEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneLargeSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-012-03-03-01");
		peaksFloorPlaneLargeSchemaArrowhead = new PositionedMovementSymbol(peaksFloorPlaneLargeSchemaArrowheadSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneLargeSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneLargeMirroredSymbol = symbolFactory.createSymbol("02-05-012-03-01-09");
		peaksFloorPlaneLargeMirrored = new PositionedMovementSymbol(peaksFloorPlaneLargeMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(peaksFloorPlaneLargeMirroredSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneLargeEmptyArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-012-03-02-09");
		peaksFloorPlaneLargeEmptyArrowheadMirrored = new PositionedMovementSymbol(
				peaksFloorPlaneLargeEmptyArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(peaksFloorPlaneLargeEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol peaksFloorPlaneLargeSchemaArrowheadMirroredSymbol = symbolFactory.createSymbol("02-05-012-03-03-09");
		peaksFloorPlaneLargeSchemaArrowheadMirrored = new PositionedMovementSymbol(
				peaksFloorPlaneLargeSchemaArrowheadMirroredSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(peaksFloorPlaneLargeSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		travelRotationSingleFloorPlaneFilledArrow = new PositionedMovementSymbol(
				MovementBaseSymbol.TRAVEL_ROTATION_SINGLE_FLOOR_PLANE_FILLED_ARROW.getIswaSymbol(), 0, 0, 2,
				symbolFactory
						.getAllRotationsAndFillsFor(MovementBaseSymbol.TRAVEL_ROTATION_SINGLE_FLOOR_PLANE_FILLED_ARROW
								.getIswaSymbol().getBaseSymbol()));
		Symbol travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-013-01-02-01");
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead = new PositionedMovementSymbol(
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-013-01-03-01");
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead = new PositionedMovementSymbol(
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationSingleFloorPlaneFilledArrowMirroredSymbol = symbolFactory
				.createSymbol("02-05-013-01-01-09");
		travelRotationSingleFloorPlaneFilledArrowMirrored = new PositionedMovementSymbol(
				travelRotationSingleFloorPlaneFilledArrowMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleFloorPlaneFilledArrowMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-013-01-02-09");
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-013-01-03-09");
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		travelRotationDoubleFloorPlaneFilledArrow = new PositionedMovementSymbol(
				MovementBaseSymbol.TRAVEL_ROTATION_DOUBLE_FLOOR_PLANE_FILLED_ARROW.getIswaSymbol(), 0, 0, 2,
				symbolFactory
						.getAllRotationsAndFillsFor(MovementBaseSymbol.TRAVEL_ROTATION_DOUBLE_FLOOR_PLANE_FILLED_ARROW
								.getIswaSymbol().getBaseSymbol()));
		Symbol travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-014-01-02-01");
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead = new PositionedMovementSymbol(
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-014-01-03-01");
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead = new PositionedMovementSymbol(
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleFloorPlaneFilledArrowMirroredSymbol = symbolFactory
				.createSymbol("02-05-014-01-01-09");
		travelRotationDoubleFloorPlaneFilledArrowMirrored = new PositionedMovementSymbol(
				travelRotationDoubleFloorPlaneFilledArrowMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleFloorPlaneFilledArrowMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-014-01-02-09");
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-014-01-03-09");
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		travelRotationAlternatingFloorPlaneFilledArrow = new PositionedMovementSymbol(
				MovementBaseSymbol.TRAVEL_ROTATION_ALTERNATING_FLOOR_PLANE_FILLED_ARROW.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.TRAVEL_ROTATION_ALTERNATING_FLOOR_PLANE_FILLED_ARROW.getIswaSymbol()
								.getBaseSymbol()));
		Symbol travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-015-01-02-01");
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead = new PositionedMovementSymbol(
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-015-01-03-01");
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead = new PositionedMovementSymbol(
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingFloorPlaneFilledArrowMirroredSymbol = symbolFactory
				.createSymbol("02-05-015-01-01-09");
		travelRotationAlternatingFloorPlaneFilledArrowMirrored = new PositionedMovementSymbol(
				travelRotationAlternatingFloorPlaneFilledArrowMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingFloorPlaneFilledArrowMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-015-01-02-09");
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-015-01-03-09");
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		travelRotationSingleWallPlaneFilledArrow = new PositionedMovementSymbol(
				MovementBaseSymbol.TRAVEL_ROTATION_SINGLE_WALL_PLANE_FILLED_ARROW.getIswaSymbol(), 0, 0, 2,
				symbolFactory
						.getAllRotationsAndFillsFor(MovementBaseSymbol.TRAVEL_ROTATION_SINGLE_WALL_PLANE_FILLED_ARROW
								.getIswaSymbol().getBaseSymbol()));
		Symbol travelRotationSingleWallPlaneFilledArrowEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-016-01-02-01");
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead = new PositionedMovementSymbol(
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleWallPlaneFilledArrowEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationSingleWallPlaneFilledArrowSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-016-01-03-01");
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead = new PositionedMovementSymbol(
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleWallPlaneFilledArrowSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationSingleWallPlaneFilledArrowMirroredSymbol = symbolFactory
				.createSymbol("02-05-016-01-01-09");
		travelRotationSingleWallPlaneFilledArrowMirrored = new PositionedMovementSymbol(
				travelRotationSingleWallPlaneFilledArrowMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleWallPlaneFilledArrowMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-016-01-02-09");
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-016-01-03-09");
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		travelRotationDoubleWallPlaneFilledArrow = new PositionedMovementSymbol(
				MovementBaseSymbol.TRAVEL_ROTATION_DOUBLE_WALL_PLANE_FILLED_ARROW.getIswaSymbol(), 0, 0, 2,
				symbolFactory
						.getAllRotationsAndFillsFor(MovementBaseSymbol.TRAVEL_ROTATION_DOUBLE_WALL_PLANE_FILLED_ARROW
								.getIswaSymbol().getBaseSymbol()));
		Symbol travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-017-01-02-01");
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead = new PositionedMovementSymbol(
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-017-01-03-01");
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead = new PositionedMovementSymbol(
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleWallPlaneFilledArrowMirroredSymbol = symbolFactory
				.createSymbol("02-05-017-01-01-09");
		travelRotationDoubleWallPlaneFilledArrowMirrored = new PositionedMovementSymbol(
				travelRotationDoubleWallPlaneFilledArrowMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleWallPlaneFilledArrowMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-017-01-02-09");
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-017-01-03-09");
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		travelRotationAlternatingWallPlaneFilledArrow = new PositionedMovementSymbol(
				MovementBaseSymbol.TRAVEL_ROTATION_ALTERNATING_WALL_PLANE_FILLED_ARROW.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.TRAVEL_ROTATION_ALTERNATING_WALL_PLANE_FILLED_ARROW.getIswaSymbol()
								.getBaseSymbol()));
		Symbol travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadSymbol = symbolFactory
				.createSymbol("02-05-018-01-02-01");
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead = new PositionedMovementSymbol(
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadSymbol = symbolFactory
				.createSymbol("02-05-018-01-03-01");
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead = new PositionedMovementSymbol(
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingWallPlaneFilledArrowMirroredSymbol = symbolFactory
				.createSymbol("02-05-018-01-01-09");
		travelRotationAlternatingWallPlaneFilledArrowMirrored = new PositionedMovementSymbol(
				travelRotationAlternatingWallPlaneFilledArrowMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingWallPlaneFilledArrowMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-018-01-02-09");
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirroredSymbol.getBaseSymbol()));
		Symbol travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirroredSymbol = symbolFactory
				.createSymbol("02-05-018-01-03-09");
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored = new PositionedMovementSymbol(
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirroredSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirroredSymbol.getBaseSymbol()));

		travelShakingFloorPlane = new PositionedMovementSymbol(
				MovementBaseSymbol.TRAVEL_SHAKING_FLOOR_PLANE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						MovementBaseSymbol.TRAVEL_SHAKING_FLOOR_PLANE.getIswaSymbol().getBaseSymbol()));
		Symbol travelShakingFloorPlaneEmptyArrowheadSymbol = symbolFactory.createSymbol("02-05-019-01-02-01");
		travelShakingFloorPlaneEmptyArrowhead = new PositionedMovementSymbol(
				travelShakingFloorPlaneEmptyArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(travelShakingFloorPlaneEmptyArrowheadSymbol.getBaseSymbol()));
		Symbol travelShakingFloorPlaneSchemaArrowheadSymbol = symbolFactory.createSymbol("02-05-019-01-03-01");
		travelShakingFloorPlaneSchemaArrowhead = new PositionedMovementSymbol(
				travelShakingFloorPlaneSchemaArrowheadSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(travelShakingFloorPlaneSchemaArrowheadSymbol.getBaseSymbol()));

	}

	@Override
	public void testCanIncrease() {

		assertTrue(singleStraightMovementFloorPlaneSmall.canIncrease());
		assertTrue(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canIncrease());
		assertTrue(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canIncrease());

		assertFalse(singleStraightMovementFloorPlaneMedium.canIncrease());
		assertFalse(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canIncrease());
		assertFalse(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canIncrease());

		assertFalse(singleStraightMovementFloorPlaneLarge.canIncrease());
		assertFalse(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canIncrease());
		assertFalse(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canIncrease());

		assertFalse(singleStraightMovementFloorPlaneLargest.canIncrease());
		assertFalse(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canIncrease());
		assertFalse(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canIncrease());

		assertTrue(singleWristFlexFloorPlane.canIncrease());
		assertTrue(singleWristFlexFloorPlaneEmptyArrowhead.canIncrease());
		assertTrue(singleWristFlexFloorPlaneSchemaArrowhead.canIncrease());

		assertTrue(doubleWristFlexFloorPlane.canIncrease());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canIncrease());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canIncrease());

		assertFalse(tripleWristFlexFloorPlane.canIncrease());
		assertFalse(tripleWristFlexFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(tripleWristFlexFloorPlaneSchemaArrowhead.canIncrease());

		assertFalse(doubleAlternatingWristFlexFloorPlane.canIncrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canIncrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneMirrored.canIncrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canIncrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canIncrease());

		assertFalse(tripleAlternatingWristFlexFloorPlane.canIncrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canIncrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneMirrored.canIncrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canIncrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canIncrease());

		assertTrue(doubleStraightMovementFloorPlane.canIncrease());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canIncrease());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canIncrease());

		assertFalse(tripleStraightMovementFloorPlane.canIncrease());
		assertFalse(tripleStraightMovementFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(tripleStraightMovementFloorPlaneSchemaArrowhead.canIncrease());

		assertFalse(doubleAlternatingMovementFloorPlane.canIncrease());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canIncrease());
		assertFalse(doubleAlternatingMovementFloorPlaneMirrored.canIncrease());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canIncrease());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canIncrease());

		assertFalse(tripleAlternatingMovementFloorPlane.canIncrease());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canIncrease());
		assertFalse(tripleAlternatingMovementFloorPlaneMirrored.canIncrease());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canIncrease());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canIncrease());

		assertFalse(crossMovementFloorPlane.canIncrease());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canIncrease());
		assertFalse(crossMovementFloorPlaneMirrored.canIncrease());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canIncrease());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canIncrease());

		assertFalse(bendFloorPlane.canIncrease());
		assertFalse(bendFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(bendFloorPlaneSchemaArrowhead.canIncrease());
		assertFalse(bendFloorPlaneMirrored.canIncrease());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canIncrease());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canIncrease());

		assertFalse(cornerFloorPlaneSmall.canIncrease());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canIncrease());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canIncrease());
		assertFalse(cornerFloorPlaneSmallMirrored.canIncrease());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canIncrease());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canIncrease());

		assertFalse(cornerFloorPlaneMedium.canIncrease());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canIncrease());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canIncrease());
		assertFalse(cornerFloorPlaneMediumMirrored.canIncrease());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canIncrease());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canIncrease());

		assertFalse(cornerFloorPlaneLarge.canIncrease());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canIncrease());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canIncrease());
		assertFalse(cornerFloorPlaneLargeMirrored.canIncrease());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canIncrease());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canIncrease());

		assertFalse(checkFloorPlane.canIncrease());
		assertFalse(checkFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(checkFloorPlaneSchemaArrowhead.canIncrease());
		assertFalse(checkFloorPlaneMirrored.canIncrease());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canIncrease());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canIncrease());

		assertFalse(boxFloorPlaneSmall.canIncrease());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canIncrease());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canIncrease());
		assertFalse(boxFloorPlaneSmallMirrored.canIncrease());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canIncrease());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canIncrease());

		assertFalse(boxFloorPlaneMedium.canIncrease());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canIncrease());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canIncrease());
		assertFalse(boxFloorPlaneMediumMirrored.canIncrease());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canIncrease());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canIncrease());

		assertFalse(boxFloorPlaneLarge.canIncrease());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canIncrease());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canIncrease());
		assertFalse(boxFloorPlaneLargeMirrored.canIncrease());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canIncrease());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canIncrease());

		assertFalse(zigzagFloorPlaneSmall.canIncrease());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canIncrease());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canIncrease());
		assertFalse(zigzagFloorPlaneSmallMirrored.canIncrease());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canIncrease());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canIncrease());

		assertFalse(zigzagFloorPlaneMedium.canIncrease());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canIncrease());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canIncrease());
		assertFalse(zigzagFloorPlaneMediumMirrored.canIncrease());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canIncrease());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canIncrease());

		assertFalse(zigzagFloorPlaneLarge.canIncrease());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canIncrease());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canIncrease());
		assertFalse(zigzagFloorPlaneLargeMirrored.canIncrease());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canIncrease());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canIncrease());

		assertFalse(peaksFloorPlaneSmall.canIncrease());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canIncrease());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canIncrease());
		assertFalse(peaksFloorPlaneSmallMirrored.canIncrease());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canIncrease());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canIncrease());

		assertFalse(peaksFloorPlaneMedium.canIncrease());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canIncrease());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canIncrease());
		assertFalse(peaksFloorPlaneMediumMirrored.canIncrease());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canIncrease());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canIncrease());

		assertFalse(peaksFloorPlaneLarge.canIncrease());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canIncrease());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canIncrease());
		assertFalse(peaksFloorPlaneLargeMirrored.canIncrease());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canIncrease());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canIncrease());

		assertTrue(travelRotationSingleWallPlaneFilledArrow.canIncrease());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canIncrease());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canIncrease());
		assertTrue(travelRotationSingleWallPlaneFilledArrowMirrored.canIncrease());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canIncrease());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canIncrease());

		assertFalse(travelRotationDoubleWallPlaneFilledArrow.canIncrease());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canIncrease());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canIncrease());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowMirrored.canIncrease());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canIncrease());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canIncrease());

		assertFalse(travelRotationAlternatingWallPlaneFilledArrow.canIncrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canIncrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canIncrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowMirrored.canIncrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canIncrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canIncrease());

		assertTrue(travelRotationSingleFloorPlaneFilledArrow.canIncrease());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canIncrease());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canIncrease());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowMirrored.canIncrease());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canIncrease());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canIncrease());

		assertFalse(travelRotationDoubleFloorPlaneFilledArrow.canIncrease());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canIncrease());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canIncrease());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowMirrored.canIncrease());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canIncrease());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canIncrease());

		assertFalse(travelRotationAlternatingFloorPlaneFilledArrow.canIncrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canIncrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canIncrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canIncrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canIncrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canIncrease());

		assertFalse(travelShakingFloorPlane.canIncrease());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canIncrease());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canIncrease());

	}

	@Override
	public void testIncrease() {

		singleStraightMovementFloorPlaneSmall.increase();
		assertEquals(doubleStraightMovementFloorPlane.getSymbol(), singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.increase();
		assertEquals(doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.increase();
		assertEquals(doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());

		singleWristFlexFloorPlane.increase();
		assertEquals(doubleWristFlexFloorPlane.getSymbol(), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.increase();
		assertEquals(doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.increase();
		assertEquals(doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleWristFlexFloorPlane.increase();
		assertEquals(tripleWristFlexFloorPlane.getSymbol(), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.increase();
		assertEquals(tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.increase();
		assertEquals(tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleStraightMovementFloorPlane.increase();
		assertEquals(tripleStraightMovementFloorPlane.getSymbol(), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.increase();
		assertEquals(tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.increase();
		assertEquals(tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrow.increase();
		assertEquals(travelRotationDoubleWallPlaneFilledArrow.getSymbol(),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.increase();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.increase();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.increase();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.increase();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.increase();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrow.increase();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrow.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.increase();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.increase();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.increase();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.increase();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.increase();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

	}

	@Override
	public void testCanDecrease() {

		assertFalse(singleStraightMovementFloorPlaneSmall.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canDecrease());

		assertFalse(singleStraightMovementFloorPlaneMedium.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canDecrease());

		assertFalse(singleStraightMovementFloorPlaneLarge.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canDecrease());

		assertFalse(singleStraightMovementFloorPlaneLargest.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canDecrease());
		assertFalse(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canDecrease());

		assertFalse(singleWristFlexFloorPlane.canDecrease());
		assertFalse(singleWristFlexFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(singleWristFlexFloorPlaneSchemaArrowhead.canDecrease());

		assertTrue(doubleWristFlexFloorPlane.canDecrease());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canDecrease());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canDecrease());

		assertTrue(tripleWristFlexFloorPlane.canDecrease());
		assertTrue(tripleWristFlexFloorPlaneEmptyArrowhead.canDecrease());
		assertTrue(tripleWristFlexFloorPlaneSchemaArrowhead.canDecrease());

		assertFalse(doubleAlternatingWristFlexFloorPlane.canDecrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canDecrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneMirrored.canDecrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canDecrease());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canDecrease());

		assertFalse(tripleAlternatingWristFlexFloorPlane.canDecrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canDecrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneMirrored.canDecrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canDecrease());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canDecrease());

		assertTrue(doubleStraightMovementFloorPlane.canDecrease());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canDecrease());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canDecrease());

		assertTrue(tripleStraightMovementFloorPlane.canDecrease());
		assertTrue(tripleStraightMovementFloorPlaneEmptyArrowhead.canDecrease());
		assertTrue(tripleStraightMovementFloorPlaneSchemaArrowhead.canDecrease());

		assertFalse(doubleAlternatingMovementFloorPlane.canDecrease());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canDecrease());
		assertFalse(doubleAlternatingMovementFloorPlaneMirrored.canDecrease());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canDecrease());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canDecrease());

		assertFalse(tripleAlternatingMovementFloorPlane.canDecrease());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canDecrease());
		assertFalse(tripleAlternatingMovementFloorPlaneMirrored.canDecrease());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canDecrease());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canDecrease());

		assertFalse(crossMovementFloorPlane.canDecrease());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canDecrease());
		assertFalse(crossMovementFloorPlaneMirrored.canDecrease());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canDecrease());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canDecrease());

		assertFalse(bendFloorPlane.canDecrease());
		assertFalse(bendFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(bendFloorPlaneSchemaArrowhead.canDecrease());
		assertFalse(bendFloorPlaneMirrored.canDecrease());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canDecrease());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canDecrease());

		assertFalse(cornerFloorPlaneSmall.canDecrease());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canDecrease());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canDecrease());
		assertFalse(cornerFloorPlaneSmallMirrored.canDecrease());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canDecrease());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canDecrease());

		assertFalse(cornerFloorPlaneMedium.canDecrease());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canDecrease());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canDecrease());
		assertFalse(cornerFloorPlaneMediumMirrored.canDecrease());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canDecrease());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canDecrease());

		assertFalse(cornerFloorPlaneLarge.canDecrease());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canDecrease());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canDecrease());
		assertFalse(cornerFloorPlaneLargeMirrored.canDecrease());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canDecrease());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canDecrease());

		assertFalse(checkFloorPlane.canDecrease());
		assertFalse(checkFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(checkFloorPlaneSchemaArrowhead.canDecrease());
		assertFalse(checkFloorPlaneMirrored.canDecrease());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canDecrease());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canDecrease());

		assertFalse(boxFloorPlaneSmall.canDecrease());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canDecrease());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canDecrease());
		assertFalse(boxFloorPlaneSmallMirrored.canDecrease());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canDecrease());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canDecrease());

		assertFalse(boxFloorPlaneMedium.canDecrease());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canDecrease());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canDecrease());
		assertFalse(boxFloorPlaneMediumMirrored.canDecrease());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canDecrease());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canDecrease());

		assertFalse(boxFloorPlaneLarge.canDecrease());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canDecrease());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canDecrease());
		assertFalse(boxFloorPlaneLargeMirrored.canDecrease());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canDecrease());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canDecrease());

		assertFalse(zigzagFloorPlaneSmall.canDecrease());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canDecrease());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canDecrease());
		assertFalse(zigzagFloorPlaneSmallMirrored.canDecrease());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canDecrease());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canDecrease());

		assertFalse(zigzagFloorPlaneMedium.canDecrease());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canDecrease());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canDecrease());
		assertFalse(zigzagFloorPlaneMediumMirrored.canDecrease());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canDecrease());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canDecrease());

		assertFalse(zigzagFloorPlaneLarge.canDecrease());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canDecrease());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canDecrease());
		assertFalse(zigzagFloorPlaneLargeMirrored.canDecrease());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canDecrease());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canDecrease());

		assertFalse(peaksFloorPlaneSmall.canDecrease());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canDecrease());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canDecrease());
		assertFalse(peaksFloorPlaneSmallMirrored.canDecrease());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canDecrease());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canDecrease());

		assertFalse(peaksFloorPlaneMedium.canDecrease());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canDecrease());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canDecrease());
		assertFalse(peaksFloorPlaneMediumMirrored.canDecrease());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canDecrease());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canDecrease());

		assertFalse(peaksFloorPlaneLarge.canDecrease());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canDecrease());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canDecrease());
		assertFalse(peaksFloorPlaneLargeMirrored.canDecrease());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canDecrease());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canDecrease());

		assertFalse(travelRotationSingleWallPlaneFilledArrow.canDecrease());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canDecrease());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canDecrease());
		assertFalse(travelRotationSingleWallPlaneFilledArrowMirrored.canDecrease());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canDecrease());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canDecrease());

		assertTrue(travelRotationDoubleWallPlaneFilledArrow.canDecrease());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canDecrease());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canDecrease());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowMirrored.canDecrease());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canDecrease());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canDecrease());

		assertFalse(travelRotationAlternatingWallPlaneFilledArrow.canDecrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canDecrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canDecrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowMirrored.canDecrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canDecrease());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canDecrease());

		assertFalse(travelRotationSingleFloorPlaneFilledArrow.canDecrease());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canDecrease());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canDecrease());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowMirrored.canDecrease());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canDecrease());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canDecrease());

		assertTrue(travelRotationDoubleFloorPlaneFilledArrow.canDecrease());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canDecrease());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canDecrease());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowMirrored.canDecrease());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canDecrease());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canDecrease());

		assertFalse(travelRotationAlternatingFloorPlaneFilledArrow.canDecrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canDecrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canDecrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canDecrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canDecrease());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canDecrease());

		assertFalse(travelShakingFloorPlane.canDecrease());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canDecrease());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canDecrease());

	}

	@Override
	public void testDecrease() {

		doubleWristFlexFloorPlane.decrease();
		assertEquals(singleWristFlexFloorPlane.getSymbol(), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.decrease();
		assertEquals(singleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.decrease();
		assertEquals(singleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleWristFlexFloorPlane.decrease();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-01"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.decrease();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-01"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.decrease();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-01"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleStraightMovementFloorPlane.decrease();
		assertEquals(singleStraightMovementFloorPlaneSmall.getSymbol(), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.decrease();
		assertEquals(singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.decrease();
		assertEquals(singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleStraightMovementFloorPlane.decrease();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-01"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.decrease();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-01"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.decrease();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-01"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.decrease();
		assertEquals(travelRotationSingleWallPlaneFilledArrow.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.decrease();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.decrease();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.decrease();
		assertEquals(travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.decrease();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.decrease();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.decrease();
		assertEquals(travelRotationSingleFloorPlaneFilledArrow.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.decrease();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.decrease();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.decrease();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.decrease();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.decrease();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
	}

	@Override
	public void testCanRotate() {

		assertTrue(singleStraightMovementFloorPlaneSmall.canRotate());
		assertTrue(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canRotate());
		assertTrue(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canRotate());

		assertTrue(singleStraightMovementFloorPlaneMedium.canRotate());
		assertTrue(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canRotate());
		assertTrue(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canRotate());

		assertTrue(singleStraightMovementFloorPlaneLarge.canRotate());
		assertTrue(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canRotate());
		assertTrue(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canRotate());

		assertTrue(singleStraightMovementFloorPlaneLargest.canRotate());
		assertTrue(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canRotate());
		assertTrue(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canRotate());

		assertTrue(singleWristFlexFloorPlane.canRotate());
		assertTrue(singleWristFlexFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(singleWristFlexFloorPlaneSchemaArrowhead.canRotate());

		assertTrue(doubleWristFlexFloorPlane.canRotate());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canRotate());

		assertTrue(tripleWristFlexFloorPlane.canRotate());
		assertTrue(tripleWristFlexFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(tripleWristFlexFloorPlaneSchemaArrowhead.canRotate());

		assertTrue(doubleAlternatingWristFlexFloorPlane.canRotate());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canRotate());
		assertTrue(doubleAlternatingWristFlexFloorPlaneMirrored.canRotate());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canRotate());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canRotate());

		assertTrue(tripleAlternatingWristFlexFloorPlane.canRotate());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canRotate());
		assertTrue(tripleAlternatingWristFlexFloorPlaneMirrored.canRotate());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canRotate());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canRotate());

		assertTrue(doubleStraightMovementFloorPlane.canRotate());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canRotate());

		assertTrue(tripleStraightMovementFloorPlane.canRotate());
		assertTrue(tripleStraightMovementFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(tripleStraightMovementFloorPlaneSchemaArrowhead.canRotate());

		assertTrue(doubleAlternatingMovementFloorPlane.canRotate());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canRotate());
		assertTrue(doubleAlternatingMovementFloorPlaneMirrored.canRotate());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canRotate());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canRotate());

		assertTrue(tripleAlternatingMovementFloorPlane.canRotate());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canRotate());
		assertTrue(tripleAlternatingMovementFloorPlaneMirrored.canRotate());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canRotate());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canRotate());

		assertTrue(crossMovementFloorPlane.canRotate());
		assertTrue(crossMovementFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(crossMovementFloorPlaneSchemaArrowhead.canRotate());
		assertTrue(crossMovementFloorPlaneMirrored.canRotate());
		assertTrue(crossMovementFloorPlaneEmptyArrowheadMirrored.canRotate());
		assertTrue(crossMovementFloorPlaneSchemaArrowheadMirrored.canRotate());

		assertTrue(bendFloorPlane.canRotate());
		assertTrue(bendFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(bendFloorPlaneSchemaArrowhead.canRotate());
		assertTrue(bendFloorPlaneMirrored.canRotate());
		assertTrue(bendFloorPlaneEmptyArrowheadMirrored.canRotate());
		assertTrue(bendFloorPlaneSchemaArrowheadMirrored.canRotate());

		assertTrue(cornerFloorPlaneSmall.canRotate());
		assertTrue(cornerFloorPlaneSmallEmptyArrowhead.canRotate());
		assertTrue(cornerFloorPlaneSmallSchemaArrowhead.canRotate());
		assertTrue(cornerFloorPlaneSmallMirrored.canRotate());
		assertTrue(cornerFloorPlaneSmallEmptyArrowheadMirrored.canRotate());
		assertTrue(cornerFloorPlaneSmallSchemaArrowheadMirrored.canRotate());

		assertTrue(cornerFloorPlaneMedium.canRotate());
		assertTrue(cornerFloorPlaneMediumEmptyArrowhead.canRotate());
		assertTrue(cornerFloorPlaneMediumSchemaArrowhead.canRotate());
		assertTrue(cornerFloorPlaneMediumMirrored.canRotate());
		assertTrue(cornerFloorPlaneMediumEmptyArrowheadMirrored.canRotate());
		assertTrue(cornerFloorPlaneMediumSchemaArrowheadMirrored.canRotate());

		assertTrue(cornerFloorPlaneLarge.canRotate());
		assertTrue(cornerFloorPlaneLargeEmptyArrowhead.canRotate());
		assertTrue(cornerFloorPlaneLargeSchemaArrowhead.canRotate());
		assertTrue(cornerFloorPlaneLargeMirrored.canRotate());
		assertTrue(cornerFloorPlaneLargeEmptyArrowheadMirrored.canRotate());
		assertTrue(cornerFloorPlaneLargeSchemaArrowheadMirrored.canRotate());

		assertTrue(checkFloorPlane.canRotate());
		assertTrue(checkFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(checkFloorPlaneSchemaArrowhead.canRotate());
		assertTrue(checkFloorPlaneMirrored.canRotate());
		assertTrue(checkFloorPlaneEmptyArrowheadMirrored.canRotate());
		assertTrue(checkFloorPlaneSchemaArrowheadMirrored.canRotate());

		assertTrue(boxFloorPlaneSmall.canRotate());
		assertTrue(boxFloorPlaneSmallEmptyArrowhead.canRotate());
		assertTrue(boxFloorPlaneSmallSchemaArrowhead.canRotate());
		assertTrue(boxFloorPlaneSmallMirrored.canRotate());
		assertTrue(boxFloorPlaneSmallEmptyArrowheadMirrored.canRotate());
		assertTrue(boxFloorPlaneSmallSchemaArrowheadMirrored.canRotate());

		assertTrue(boxFloorPlaneMedium.canRotate());
		assertTrue(boxFloorPlaneMediumEmptyArrowhead.canRotate());
		assertTrue(boxFloorPlaneMediumSchemaArrowhead.canRotate());
		assertTrue(boxFloorPlaneMediumMirrored.canRotate());
		assertTrue(boxFloorPlaneMediumEmptyArrowheadMirrored.canRotate());
		assertTrue(boxFloorPlaneMediumSchemaArrowheadMirrored.canRotate());

		assertTrue(boxFloorPlaneLarge.canRotate());
		assertTrue(boxFloorPlaneLargeEmptyArrowhead.canRotate());
		assertTrue(boxFloorPlaneLargeSchemaArrowhead.canRotate());
		assertTrue(boxFloorPlaneLargeMirrored.canRotate());
		assertTrue(boxFloorPlaneLargeEmptyArrowheadMirrored.canRotate());
		assertTrue(boxFloorPlaneLargeSchemaArrowheadMirrored.canRotate());

		assertTrue(zigzagFloorPlaneSmall.canRotate());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowhead.canRotate());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowhead.canRotate());
		assertTrue(zigzagFloorPlaneSmallMirrored.canRotate());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canRotate());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canRotate());

		assertTrue(zigzagFloorPlaneMedium.canRotate());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowhead.canRotate());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowhead.canRotate());
		assertTrue(zigzagFloorPlaneMediumMirrored.canRotate());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canRotate());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canRotate());

		assertTrue(zigzagFloorPlaneLarge.canRotate());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowhead.canRotate());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowhead.canRotate());
		assertTrue(zigzagFloorPlaneLargeMirrored.canRotate());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canRotate());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canRotate());

		assertTrue(peaksFloorPlaneSmall.canRotate());
		assertTrue(peaksFloorPlaneSmallEmptyArrowhead.canRotate());
		assertTrue(peaksFloorPlaneSmallSchemaArrowhead.canRotate());
		assertTrue(peaksFloorPlaneSmallMirrored.canRotate());
		assertTrue(peaksFloorPlaneSmallEmptyArrowheadMirrored.canRotate());
		assertTrue(peaksFloorPlaneSmallSchemaArrowheadMirrored.canRotate());

		assertTrue(peaksFloorPlaneMedium.canRotate());
		assertTrue(peaksFloorPlaneMediumEmptyArrowhead.canRotate());
		assertTrue(peaksFloorPlaneMediumSchemaArrowhead.canRotate());
		assertTrue(peaksFloorPlaneMediumMirrored.canRotate());
		assertTrue(peaksFloorPlaneMediumEmptyArrowheadMirrored.canRotate());
		assertTrue(peaksFloorPlaneMediumSchemaArrowheadMirrored.canRotate());

		assertTrue(peaksFloorPlaneLarge.canRotate());
		assertTrue(peaksFloorPlaneLargeEmptyArrowhead.canRotate());
		assertTrue(peaksFloorPlaneLargeSchemaArrowhead.canRotate());
		assertTrue(peaksFloorPlaneLargeMirrored.canRotate());
		assertTrue(peaksFloorPlaneLargeEmptyArrowheadMirrored.canRotate());
		assertTrue(peaksFloorPlaneLargeSchemaArrowheadMirrored.canRotate());

		assertTrue(travelRotationSingleWallPlaneFilledArrow.canRotate());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canRotate());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canRotate());
		assertTrue(travelRotationSingleWallPlaneFilledArrowMirrored.canRotate());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canRotate());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canRotate());

		assertTrue(travelRotationDoubleWallPlaneFilledArrow.canRotate());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canRotate());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canRotate());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowMirrored.canRotate());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canRotate());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canRotate());

		assertTrue(travelRotationAlternatingWallPlaneFilledArrow.canRotate());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canRotate());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canRotate());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowMirrored.canRotate());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canRotate());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canRotate());

		assertTrue(travelRotationSingleFloorPlaneFilledArrow.canRotate());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canRotate());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canRotate());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowMirrored.canRotate());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canRotate());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canRotate());

		assertTrue(travelRotationDoubleFloorPlaneFilledArrow.canRotate());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canRotate());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canRotate());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowMirrored.canRotate());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canRotate());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canRotate());

		assertTrue(travelRotationAlternatingFloorPlaneFilledArrow.canRotate());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canRotate());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canRotate());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canRotate());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canRotate());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canRotate());

		assertTrue(travelShakingFloorPlane.canRotate());
		assertTrue(travelShakingFloorPlaneEmptyArrowhead.canRotate());
		assertTrue(travelShakingFloorPlaneSchemaArrowhead.canRotate());

	}

	@Override
	public void testRotateClockwise() {

		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-08"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-07"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-06"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-05"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-04"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-03"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-02"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-01"),
				singleStraightMovementFloorPlaneSmall.getSymbol());

		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-08"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-07"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-06"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-05"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-04"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-03"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-02"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-01"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-08"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-07"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-06"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-05"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-04"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-03"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-02"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-01"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-08"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-07"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-06"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-05"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-04"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-03"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-02"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-01"),
				singleStraightMovementFloorPlaneMedium.getSymbol());

		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-08"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-07"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-06"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-05"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-04"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-03"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-02"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-01"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-08"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-07"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-06"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-05"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-04"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-03"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-02"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-01"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-08"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-07"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-06"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-05"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-04"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-03"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-02"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-01"),
				singleStraightMovementFloorPlaneLarge.getSymbol());

		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-08"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-07"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-06"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-05"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-04"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-03"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-02"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-01"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-08"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-07"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-06"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-05"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-04"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-03"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-02"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-01"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-08"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-07"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-06"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-05"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-04"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-03"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-02"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-01"),
				singleStraightMovementFloorPlaneLargest.getSymbol());

		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-08"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-07"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-06"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-05"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-04"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-03"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-02"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-01"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-08"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-07"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-06"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-05"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-04"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-03"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-02"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-01"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());

		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-08"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-07"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-06"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-05"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-04"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-03"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-02"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-01"), singleWristFlexFloorPlane.getSymbol());

		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-08"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-07"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-06"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-05"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-04"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-03"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-02"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-01"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-08"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-07"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-06"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-05"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-04"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-03"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-02"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-01"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-08"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-07"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-06"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-05"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-04"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-03"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-02"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-01"), doubleStraightMovementFloorPlane.getSymbol());

		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-08"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-07"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-06"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-05"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-04"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-03"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-02"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-01"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-08"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-07"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-06"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-05"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-04"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-03"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-02"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-01"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-08"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-07"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-06"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-05"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-04"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-03"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-02"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-01"), doubleWristFlexFloorPlane.getSymbol());

		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-08"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-07"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-06"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-05"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-04"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-03"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-02"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-01"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-08"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-07"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-06"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-05"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-04"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-03"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-02"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-01"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-08"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-07"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-06"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-05"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-04"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-03"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-02"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-01"), doubleAlternatingMovementFloorPlane.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-08"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-07"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-06"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-05"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-04"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-03"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-02"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-01"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-08"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-07"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-06"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-05"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-04"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-03"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-02"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-01"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-10"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-11"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-12"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-13"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-14"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-15"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-16"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-09"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-10"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-11"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-12"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-13"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-14"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-15"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-16"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-09"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-10"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-11"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-12"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-13"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-14"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-15"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-16"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-09"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-08"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-07"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-06"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-05"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-04"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-03"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-02"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-01"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-08"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-07"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-06"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-05"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-04"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-03"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-02"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-01"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-08"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-07"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-06"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-05"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-04"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-03"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-02"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-01"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-10"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-11"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-12"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-13"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-14"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-15"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-16"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-09"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-10"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-11"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-12"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-13"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-14"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-15"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-16"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-09"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-10"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-11"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-12"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-13"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-14"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-15"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-16"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-09"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-08"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-07"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-06"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-05"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-04"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-03"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-02"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-01"), crossMovementFloorPlane.getSymbol());

		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-08"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-07"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-06"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-05"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-04"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-03"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-02"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-01"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());

		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-08"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-07"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-06"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-05"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-04"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-03"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-02"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-01"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());

		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-10"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-11"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-12"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-13"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-14"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-15"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-16"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-09"), crossMovementFloorPlaneMirrored.getSymbol());

		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-10"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-11"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-12"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-13"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-14"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-15"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-16"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-09"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-10"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-11"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-12"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-13"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-14"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-15"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-16"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-09"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-08"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-07"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-06"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-05"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-04"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-03"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-02"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-01"), tripleStraightMovementFloorPlane.getSymbol());

		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-08"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-07"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-06"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-05"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-04"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-03"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-02"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-01"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-08"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-07"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-06"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-05"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-04"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-03"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-02"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-01"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-08"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-07"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-06"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-05"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-04"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-03"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-02"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-01"), tripleWristFlexFloorPlane.getSymbol());

		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-08"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-07"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-06"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-05"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-04"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-03"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-02"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-01"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-08"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-07"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-06"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-05"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-04"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-03"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-02"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-01"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-08"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-07"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-06"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-05"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-04"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-03"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-02"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-01"), tripleAlternatingMovementFloorPlane.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-08"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-07"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-06"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-05"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-04"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-03"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-02"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-01"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-08"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-07"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-06"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-05"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-04"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-03"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-02"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-01"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-10"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-11"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-12"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-13"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-14"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-15"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-16"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-09"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-10"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-11"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-12"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-13"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-14"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-15"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-16"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-09"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-10"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-11"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-12"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-13"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-14"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-15"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-16"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-09"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-08"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-07"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-06"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-05"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-04"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-03"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-02"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-01"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-08"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-07"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-06"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-05"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-04"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-03"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-02"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-01"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-08"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-07"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-06"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-05"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-04"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-03"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-02"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-01"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-10"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-11"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-12"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-13"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-14"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-15"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-16"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-09"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-10"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-11"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-12"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-13"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-14"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-15"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-16"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-09"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-10"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-11"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-12"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-13"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-14"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-15"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-16"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-09"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-08"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-07"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-06"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-05"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-04"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-03"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-02"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-01"), bendFloorPlane.getSymbol());

		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-08"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-07"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-06"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-05"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-04"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-03"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-02"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-01"), bendFloorPlaneEmptyArrowhead.getSymbol());

		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-08"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-07"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-06"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-05"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-04"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-03"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-02"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-01"), bendFloorPlaneSchemaArrowhead.getSymbol());

		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-10"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-11"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-12"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-13"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-14"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-15"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-16"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-09"), bendFloorPlaneMirrored.getSymbol());

		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-10"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-11"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-12"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-13"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-14"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-15"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-16"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-09"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());

		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-10"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-11"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-12"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-13"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-14"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-15"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-16"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-09"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-08"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-07"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-06"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-05"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-04"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-03"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-02"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-01"), cornerFloorPlaneSmall.getSymbol());

		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-08"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-07"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-06"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-05"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-04"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-03"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-02"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-01"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());

		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-08"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-07"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-06"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-05"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-04"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-03"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-02"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-01"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());

		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-10"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-11"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-12"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-13"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-14"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-15"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-16"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-09"), cornerFloorPlaneSmallMirrored.getSymbol());

		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-10"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-11"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-12"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-13"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-14"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-15"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-16"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-09"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-10"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-11"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-12"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-13"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-14"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-15"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-16"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-09"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-08"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-07"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-06"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-05"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-04"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-03"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-02"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-01"), cornerFloorPlaneMedium.getSymbol());

		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-08"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-07"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-06"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-05"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-04"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-03"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-02"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-01"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());

		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-08"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-07"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-06"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-05"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-04"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-03"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-02"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-01"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());

		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-10"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-11"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-12"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-13"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-14"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-15"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-16"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-09"), cornerFloorPlaneMediumMirrored.getSymbol());

		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-10"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-11"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-12"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-13"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-14"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-15"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-16"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-09"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-10"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-11"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-12"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-13"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-14"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-15"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-16"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-09"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-08"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-07"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-06"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-05"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-04"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-03"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-02"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-01"), cornerFloorPlaneLarge.getSymbol());

		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-08"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-07"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-06"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-05"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-04"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-03"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-02"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-01"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());

		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-08"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-07"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-06"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-05"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-04"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-03"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-02"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-01"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());

		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-10"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-11"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-12"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-13"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-14"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-15"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-16"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-09"), cornerFloorPlaneLargeMirrored.getSymbol());

		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-10"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-11"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-12"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-13"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-14"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-15"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-16"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-09"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-10"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-11"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-12"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-13"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-14"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-15"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-16"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-09"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-08"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-07"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-06"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-05"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-04"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-03"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-02"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-01"), checkFloorPlane.getSymbol());

		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-08"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-07"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-06"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-05"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-04"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-03"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-02"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-01"), checkFloorPlaneEmptyArrowhead.getSymbol());

		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-08"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-07"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-06"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-05"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-04"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-03"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-02"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-01"), checkFloorPlaneSchemaArrowhead.getSymbol());

		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-10"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-11"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-12"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-13"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-14"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-15"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-16"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-09"), checkFloorPlaneMirrored.getSymbol());

		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-10"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-11"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-12"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-13"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-14"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-15"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-16"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-09"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());

		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-10"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-11"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-12"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-13"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-14"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-15"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-16"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-09"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-08"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-07"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-06"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-05"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-04"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-03"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-02"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-01"), boxFloorPlaneSmall.getSymbol());

		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-08"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-07"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-06"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-05"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-04"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-03"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-02"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-01"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());

		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-08"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-07"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-06"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-05"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-04"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-03"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-02"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-01"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());

		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-10"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-11"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-12"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-13"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-14"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-15"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-16"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-09"), boxFloorPlaneSmallMirrored.getSymbol());

		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-10"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-11"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-12"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-13"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-14"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-15"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-16"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-09"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-10"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-11"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-12"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-13"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-14"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-15"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-16"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-09"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-08"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-07"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-06"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-05"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-04"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-03"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-02"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-01"), boxFloorPlaneMedium.getSymbol());

		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-08"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-07"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-06"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-05"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-04"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-03"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-02"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-01"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());

		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-08"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-07"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-06"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-05"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-04"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-03"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-02"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-01"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());

		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-10"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-11"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-12"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-13"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-14"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-15"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-16"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-09"), boxFloorPlaneMediumMirrored.getSymbol());

		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-10"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-11"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-12"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-13"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-14"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-15"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-16"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-09"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-10"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-11"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-12"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-13"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-14"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-15"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-16"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-09"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-08"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-07"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-06"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-05"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-04"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-03"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-02"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-01"), boxFloorPlaneLarge.getSymbol());

		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-08"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-07"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-06"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-05"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-04"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-03"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-02"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-01"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());

		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-08"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-07"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-06"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-05"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-04"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-03"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-02"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-01"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());

		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-10"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-11"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-12"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-13"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-14"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-15"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-16"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-09"), boxFloorPlaneLargeMirrored.getSymbol());

		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-10"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-11"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-12"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-13"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-14"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-15"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-16"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-09"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-10"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-11"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-12"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-13"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-14"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-15"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-16"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-09"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-08"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-07"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-06"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-05"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-04"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-03"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-02"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-01"), zigzagFloorPlaneSmall.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-08"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-07"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-06"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-05"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-04"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-03"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-02"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-01"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-08"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-07"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-06"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-05"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-04"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-03"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-02"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-01"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());

		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-10"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-11"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-12"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-13"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-14"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-15"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-16"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-09"), zigzagFloorPlaneSmallMirrored.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-10"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-11"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-12"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-13"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-14"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-15"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-16"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-09"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-10"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-11"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-12"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-13"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-14"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-15"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-16"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-09"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-08"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-07"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-06"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-05"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-04"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-03"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-02"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-01"), zigzagFloorPlaneMedium.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-08"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-07"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-06"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-05"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-04"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-03"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-02"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-01"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-08"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-07"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-06"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-05"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-04"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-03"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-02"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-01"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());

		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-10"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-11"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-12"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-13"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-14"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-15"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-16"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-09"), zigzagFloorPlaneMediumMirrored.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-10"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-11"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-12"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-13"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-14"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-15"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-16"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-09"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-10"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-11"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-12"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-13"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-14"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-15"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-16"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-09"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-08"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-07"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-06"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-05"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-04"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-03"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-02"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-01"), zigzagFloorPlaneLarge.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-08"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-07"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-06"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-05"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-04"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-03"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-02"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-01"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-08"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-07"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-06"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-05"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-04"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-03"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-02"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-01"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());

		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-10"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-11"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-12"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-13"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-14"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-15"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-16"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-09"), zigzagFloorPlaneLargeMirrored.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-10"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-11"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-12"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-13"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-14"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-15"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-16"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-09"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-10"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-11"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-12"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-13"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-14"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-15"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-16"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-09"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-08"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-07"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-06"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-05"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-04"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-03"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-02"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-01"), peaksFloorPlaneSmall.getSymbol());

		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-08"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-07"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-06"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-05"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-04"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-03"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-02"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-01"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());

		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-08"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-07"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-06"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-05"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-04"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-03"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-02"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-01"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());

		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-10"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-11"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-12"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-13"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-14"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-15"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-16"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-09"), peaksFloorPlaneSmallMirrored.getSymbol());

		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-10"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-11"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-12"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-13"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-14"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-15"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-16"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-09"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-10"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-11"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-12"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-13"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-14"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-15"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-16"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-09"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-08"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-07"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-06"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-05"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-04"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-03"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-02"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-01"), peaksFloorPlaneMedium.getSymbol());

		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-08"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-07"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-06"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-05"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-04"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-03"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-02"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-01"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());

		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-08"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-07"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-06"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-05"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-04"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-03"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-02"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-01"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());

		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-10"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-11"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-12"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-13"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-14"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-15"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-16"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-09"), peaksFloorPlaneMediumMirrored.getSymbol());

		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-10"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-11"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-12"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-13"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-14"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-15"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-16"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-09"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-10"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-11"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-12"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-13"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-14"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-15"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-16"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-09"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-08"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-07"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-06"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-05"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-04"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-03"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-02"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-01"), peaksFloorPlaneLarge.getSymbol());

		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-08"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-07"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-06"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-05"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-04"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-03"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-02"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-01"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());

		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-08"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-07"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-06"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-05"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-04"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-03"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-02"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-01"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());

		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-10"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-11"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-12"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-13"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-14"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-15"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-16"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-09"), peaksFloorPlaneLargeMirrored.getSymbol());

		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-10"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-11"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-12"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-13"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-14"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-15"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-16"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-09"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-10"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-11"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-12"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-13"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-14"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-15"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-16"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-09"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-08"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-07"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-06"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-05"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-04"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-03"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-02"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-01"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-08"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-07"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-06"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-05"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-04"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-03"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-02"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-01"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-08"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-07"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-06"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-05"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-04"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-03"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-02"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-01"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-10"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-11"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-12"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-13"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-14"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-15"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-16"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-09"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-10"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-11"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-12"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-13"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-14"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-15"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-16"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-09"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-10"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-11"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-12"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-13"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-14"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-15"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-16"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-09"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-08"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-07"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-06"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-05"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-04"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-03"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-02"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-01"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-08"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-07"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-06"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-05"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-04"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-03"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-02"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-01"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-08"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-07"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-06"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-05"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-04"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-03"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-02"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-01"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-10"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-11"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-12"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-13"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-14"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-15"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-16"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-09"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-10"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-11"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-12"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-13"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-14"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-15"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-16"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-09"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-10"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-11"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-12"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-13"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-14"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-15"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-16"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-09"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-08"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-07"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-06"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-05"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-04"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-03"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-02"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-01"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-08"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-07"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-06"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-05"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-04"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-03"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-02"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-01"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-08"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-07"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-06"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-05"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-04"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-03"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-02"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-01"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-10"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-11"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-12"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-13"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-14"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-15"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-16"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-09"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-10"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-11"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-12"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-13"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-14"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-15"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-16"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-09"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-10"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-11"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-12"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-13"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-14"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-15"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-16"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-09"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-08"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-07"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-06"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-05"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-04"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-03"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-02"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-01"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-08"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-07"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-06"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-05"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-04"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-03"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-02"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-01"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-08"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-07"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-06"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-05"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-04"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-03"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-02"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-01"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-10"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-11"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-12"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-13"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-14"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-15"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-16"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-09"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-10"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-11"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-12"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-13"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-14"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-15"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-16"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-09"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-10"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-11"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-12"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-13"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-14"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-15"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-16"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-09"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-08"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-07"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-06"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-05"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-04"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-03"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-02"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-01"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-08"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-07"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-06"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-05"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-04"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-03"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-02"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-01"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-08"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-07"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-06"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-05"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-04"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-03"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-02"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-01"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-10"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-11"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-12"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-13"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-14"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-15"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-16"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-09"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-10"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-11"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-12"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-13"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-14"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-15"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-16"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-09"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-10"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-11"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-12"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-13"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-14"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-15"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-16"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-09"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-08"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-07"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-06"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-05"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-04"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-03"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-02"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-01"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-08"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-07"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-06"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-05"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-04"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-03"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-02"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-01"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-08"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-07"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-06"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-05"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-04"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-03"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-02"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-01"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-10"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-11"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-12"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-13"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-14"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-15"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-16"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-09"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-10"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-11"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-12"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-13"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-14"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-15"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-16"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-09"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-10"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-11"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-12"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-13"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-14"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-15"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-16"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-09"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-08"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-07"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-06"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-05"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-04"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-03"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-02"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-01"), travelShakingFloorPlane.getSymbol());

		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-08"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-07"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-06"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-05"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-04"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-03"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-02"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-01"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());

		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-08"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-07"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-06"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-05"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-04"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-03"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-02"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-01"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());

	}

	@Override
	public void testRotateCounterClockwise() {

		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-02"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-03"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-04"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-05"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-06"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-07"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-08"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-01"),
				singleStraightMovementFloorPlaneSmall.getSymbol());

		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-02"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-03"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-04"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-05"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-06"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-07"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-08"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-01"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-02"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-03"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-04"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-05"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-06"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-07"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-08"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-01"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-02"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-03"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-04"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-05"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-06"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-07"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-08"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-01"),
				singleStraightMovementFloorPlaneMedium.getSymbol());

		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-02"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-03"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-04"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-05"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-06"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-07"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-08"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-01"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-02"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-03"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-04"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-05"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-06"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-07"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-08"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-01"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-02"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-03"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-04"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-05"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-06"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-07"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-08"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-01"),
				singleStraightMovementFloorPlaneLarge.getSymbol());

		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-02"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-03"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-04"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-05"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-06"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-07"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-08"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-01"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-02"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-03"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-04"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-05"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-06"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-07"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-08"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-01"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-02"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-03"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-04"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-05"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-06"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-07"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-08"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-01"),
				singleStraightMovementFloorPlaneLargest.getSymbol());

		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-02"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-03"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-04"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-05"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-06"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-07"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-08"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-01"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-02"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-03"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-04"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-05"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-06"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-07"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-08"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-01"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());

		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-02"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-03"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-04"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-05"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-06"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-07"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-08"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-01"), singleWristFlexFloorPlane.getSymbol());

		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-02"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-03"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-04"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-05"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-06"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-07"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-08"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-01"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-02"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-03"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-04"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-05"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-06"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-07"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-08"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-01"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-02"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-03"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-04"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-05"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-06"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-07"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-08"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-01"), doubleStraightMovementFloorPlane.getSymbol());

		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-02"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-03"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-04"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-05"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-06"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-07"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-08"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-01"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-02"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-03"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-04"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-05"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-06"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-07"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-08"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-01"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-02"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-03"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-04"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-05"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-06"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-07"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-08"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-01"), doubleWristFlexFloorPlane.getSymbol());

		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-02"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-03"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-04"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-05"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-06"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-07"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-08"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-01"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-02"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-03"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-04"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-05"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-06"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-07"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-08"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-01"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-02"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-03"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-04"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-05"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-06"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-07"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-08"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-01"), doubleAlternatingMovementFloorPlane.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-02"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-03"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-04"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-05"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-06"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-07"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-08"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-01"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-02"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-03"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-04"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-05"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-06"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-07"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-08"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-01"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-16"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-15"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-14"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-13"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-12"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-11"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-10"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-09"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-16"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-15"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-14"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-13"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-12"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-11"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-10"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-09"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-16"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-15"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-14"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-13"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-12"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-11"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-10"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-09"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-02"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-03"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-04"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-05"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-06"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-07"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-08"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-01"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-02"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-03"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-04"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-05"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-06"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-07"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-08"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-01"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-02"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-03"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-04"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-05"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-06"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-07"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-08"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-01"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-16"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-15"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-14"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-13"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-12"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-11"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-10"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-09"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-16"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-15"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-14"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-13"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-12"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-11"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-10"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-09"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-16"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-15"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-14"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-13"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-12"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-11"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-10"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-09"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-02"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-03"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-04"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-05"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-06"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-07"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-08"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-01"), crossMovementFloorPlane.getSymbol());

		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-02"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-03"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-04"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-05"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-06"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-07"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-08"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-01"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());

		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-02"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-03"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-04"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-05"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-06"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-07"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-08"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-01"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());

		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-16"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-15"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-14"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-13"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-12"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-11"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-10"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-09"), crossMovementFloorPlaneMirrored.getSymbol());

		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-16"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-15"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-14"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-13"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-12"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-11"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-10"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-09"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-16"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-15"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-14"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-13"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-12"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-11"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-10"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-09"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-02"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-03"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-04"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-05"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-06"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-07"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-08"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-01"), tripleStraightMovementFloorPlane.getSymbol());

		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-02"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-03"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-04"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-05"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-06"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-07"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-08"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-01"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-02"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-03"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-04"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-05"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-06"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-07"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-08"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-01"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-02"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-03"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-04"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-05"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-06"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-07"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-08"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-01"), tripleWristFlexFloorPlane.getSymbol());

		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-02"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-03"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-04"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-05"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-06"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-07"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-08"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-01"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-02"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-03"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-04"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-05"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-06"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-07"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-08"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-01"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-02"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-03"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-04"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-05"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-06"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-07"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-08"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-01"), tripleAlternatingMovementFloorPlane.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-02"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-03"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-04"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-05"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-06"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-07"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-08"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-01"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-02"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-03"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-04"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-05"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-06"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-07"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-08"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-01"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-16"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-15"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-14"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-13"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-12"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-11"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-10"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-09"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-16"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-15"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-14"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-13"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-12"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-11"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-10"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-09"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-16"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-15"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-14"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-13"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-12"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-11"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-10"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-09"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-02"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-03"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-04"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-05"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-06"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-07"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-08"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-01"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-02"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-03"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-04"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-05"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-06"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-07"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-08"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-01"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-02"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-03"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-04"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-05"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-06"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-07"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-08"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-01"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-16"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-15"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-14"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-13"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-12"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-11"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-10"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-09"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-16"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-15"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-14"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-13"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-12"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-11"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-10"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-09"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-16"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-15"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-14"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-13"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-12"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-11"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-10"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-09"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-02"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-03"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-04"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-05"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-06"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-07"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-08"), bendFloorPlane.getSymbol());
		bendFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-01"), bendFloorPlane.getSymbol());

		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-02"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-03"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-04"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-05"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-06"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-07"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-08"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-01"), bendFloorPlaneEmptyArrowhead.getSymbol());

		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-02"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-03"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-04"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-05"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-06"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-07"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-08"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-01"), bendFloorPlaneSchemaArrowhead.getSymbol());

		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-16"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-15"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-14"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-13"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-12"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-11"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-10"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-09"), bendFloorPlaneMirrored.getSymbol());

		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-16"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-15"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-14"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-13"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-12"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-11"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-10"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-09"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());

		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-16"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-15"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-14"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-13"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-12"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-11"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-10"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-09"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-02"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-03"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-04"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-05"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-06"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-07"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-08"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-01"), cornerFloorPlaneSmall.getSymbol());

		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-02"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-03"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-04"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-05"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-06"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-07"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-08"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-01"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());

		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-02"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-03"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-04"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-05"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-06"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-07"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-08"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-01"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());

		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-16"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-15"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-14"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-13"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-12"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-11"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-10"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-09"), cornerFloorPlaneSmallMirrored.getSymbol());

		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-16"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-15"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-14"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-13"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-12"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-11"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-10"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-09"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-16"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-15"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-14"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-13"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-12"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-11"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-10"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-09"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-02"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-03"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-04"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-05"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-06"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-07"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-08"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-01"), cornerFloorPlaneMedium.getSymbol());

		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-02"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-03"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-04"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-05"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-06"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-07"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-08"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-01"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());

		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-02"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-03"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-04"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-05"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-06"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-07"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-08"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-01"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());

		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-16"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-15"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-14"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-13"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-12"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-11"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-10"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-09"), cornerFloorPlaneMediumMirrored.getSymbol());

		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-16"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-15"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-14"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-13"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-12"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-11"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-10"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-09"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-16"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-15"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-14"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-13"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-12"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-11"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-10"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-09"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-02"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-03"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-04"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-05"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-06"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-07"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-08"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-01"), cornerFloorPlaneLarge.getSymbol());

		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-02"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-03"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-04"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-05"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-06"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-07"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-08"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-01"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());

		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-02"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-03"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-04"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-05"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-06"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-07"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-08"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-01"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());

		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-16"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-15"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-14"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-13"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-12"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-11"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-10"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-09"), cornerFloorPlaneLargeMirrored.getSymbol());

		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-16"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-15"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-14"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-13"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-12"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-11"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-10"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-09"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-16"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-15"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-14"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-13"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-12"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-11"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-10"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-09"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-02"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-03"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-04"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-05"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-06"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-07"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-08"), checkFloorPlane.getSymbol());
		checkFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-01"), checkFloorPlane.getSymbol());

		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-02"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-03"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-04"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-05"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-06"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-07"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-08"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-01"), checkFloorPlaneEmptyArrowhead.getSymbol());

		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-02"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-03"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-04"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-05"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-06"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-07"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-08"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-01"), checkFloorPlaneSchemaArrowhead.getSymbol());

		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-16"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-15"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-14"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-13"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-12"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-11"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-10"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-09"), checkFloorPlaneMirrored.getSymbol());

		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-16"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-15"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-14"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-13"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-12"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-11"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-10"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-09"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());

		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-16"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-15"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-14"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-13"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-12"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-11"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-10"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-09"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-02"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-03"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-04"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-05"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-06"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-07"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-08"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-01"), boxFloorPlaneSmall.getSymbol());

		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-02"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-03"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-04"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-05"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-06"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-07"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-08"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-01"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());

		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-02"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-03"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-04"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-05"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-06"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-07"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-08"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-01"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());

		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-16"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-15"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-14"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-13"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-12"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-11"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-10"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-09"), boxFloorPlaneSmallMirrored.getSymbol());

		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-16"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-15"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-14"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-13"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-12"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-11"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-10"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-09"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-16"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-15"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-14"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-13"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-12"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-11"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-10"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-09"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-02"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-03"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-04"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-05"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-06"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-07"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-08"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-01"), boxFloorPlaneMedium.getSymbol());

		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-02"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-03"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-04"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-05"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-06"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-07"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-08"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-01"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());

		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-02"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-03"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-04"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-05"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-06"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-07"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-08"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-01"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());

		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-16"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-15"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-14"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-13"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-12"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-11"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-10"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-09"), boxFloorPlaneMediumMirrored.getSymbol());

		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-16"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-15"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-14"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-13"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-12"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-11"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-10"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-09"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-16"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-15"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-14"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-13"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-12"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-11"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-10"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-09"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-02"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-03"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-04"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-05"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-06"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-07"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-08"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-01"), boxFloorPlaneLarge.getSymbol());

		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-02"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-03"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-04"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-05"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-06"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-07"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-08"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-01"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());

		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-02"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-03"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-04"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-05"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-06"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-07"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-08"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-01"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());

		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-16"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-15"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-14"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-13"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-12"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-11"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-10"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-09"), boxFloorPlaneLargeMirrored.getSymbol());

		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-16"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-15"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-14"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-13"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-12"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-11"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-10"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-09"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-16"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-15"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-14"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-13"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-12"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-11"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-10"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-09"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-02"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-03"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-04"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-05"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-06"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-07"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-08"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-01"), zigzagFloorPlaneSmall.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-02"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-03"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-04"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-05"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-06"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-07"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-08"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-01"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-02"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-03"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-04"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-05"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-06"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-07"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-08"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-01"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());

		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-16"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-15"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-14"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-13"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-12"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-11"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-10"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-09"), zigzagFloorPlaneSmallMirrored.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-16"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-15"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-14"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-13"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-12"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-11"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-10"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-09"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-16"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-15"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-14"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-13"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-12"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-11"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-10"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-09"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-02"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-03"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-04"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-05"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-06"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-07"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-08"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-01"), zigzagFloorPlaneMedium.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-02"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-03"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-04"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-05"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-06"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-07"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-08"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-01"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-02"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-03"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-04"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-05"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-06"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-07"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-08"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-01"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());

		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-16"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-15"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-14"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-13"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-12"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-11"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-10"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-09"), zigzagFloorPlaneMediumMirrored.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-16"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-15"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-14"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-13"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-12"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-11"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-10"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-09"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-16"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-15"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-14"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-13"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-12"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-11"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-10"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-09"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-02"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-03"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-04"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-05"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-06"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-07"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-08"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-01"), zigzagFloorPlaneLarge.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-02"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-03"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-04"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-05"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-06"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-07"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-08"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-01"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-02"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-03"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-04"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-05"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-06"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-07"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-08"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-01"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());

		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-16"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-15"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-14"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-13"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-12"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-11"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-10"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-09"), zigzagFloorPlaneLargeMirrored.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-16"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-15"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-14"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-13"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-12"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-11"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-10"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-09"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-16"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-15"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-14"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-13"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-12"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-11"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-10"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-09"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-02"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-03"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-04"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-05"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-06"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-07"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-08"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-01"), peaksFloorPlaneSmall.getSymbol());

		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-02"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-03"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-04"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-05"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-06"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-07"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-08"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-01"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());

		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-02"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-03"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-04"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-05"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-06"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-07"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-08"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-01"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());

		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-16"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-15"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-14"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-13"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-12"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-11"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-10"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-09"), peaksFloorPlaneSmallMirrored.getSymbol());

		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-16"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-15"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-14"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-13"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-12"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-11"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-10"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-09"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-16"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-15"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-14"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-13"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-12"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-11"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-10"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-09"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-02"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-03"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-04"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-05"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-06"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-07"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-08"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-01"), peaksFloorPlaneMedium.getSymbol());

		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-02"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-03"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-04"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-05"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-06"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-07"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-08"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-01"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());

		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-02"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-03"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-04"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-05"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-06"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-07"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-08"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-01"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());

		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-16"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-15"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-14"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-13"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-12"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-11"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-10"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-09"), peaksFloorPlaneMediumMirrored.getSymbol());

		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-16"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-15"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-14"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-13"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-12"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-11"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-10"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-09"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-16"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-15"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-14"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-13"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-12"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-11"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-10"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-09"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-02"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-03"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-04"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-05"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-06"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-07"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-08"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-01"), peaksFloorPlaneLarge.getSymbol());

		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-02"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-03"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-04"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-05"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-06"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-07"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-08"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-01"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());

		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-02"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-03"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-04"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-05"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-06"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-07"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-08"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-01"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());

		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-16"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-15"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-14"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-13"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-12"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-11"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-10"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-09"), peaksFloorPlaneLargeMirrored.getSymbol());

		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-16"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-15"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-14"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-13"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-12"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-11"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-10"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-09"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-16"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-15"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-14"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-13"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-12"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-11"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-10"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-09"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-02"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-03"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-04"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-05"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-06"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-07"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-08"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-01"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-02"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-03"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-04"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-05"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-06"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-07"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-08"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-01"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-02"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-03"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-04"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-05"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-06"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-07"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-08"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-01"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-16"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-15"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-14"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-13"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-12"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-11"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-10"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-09"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-16"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-15"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-14"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-13"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-12"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-11"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-10"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-09"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-16"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-15"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-14"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-13"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-12"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-11"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-10"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-09"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-02"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-03"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-04"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-05"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-06"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-07"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-08"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-01"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-02"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-03"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-04"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-05"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-06"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-07"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-08"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-01"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-02"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-03"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-04"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-05"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-06"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-07"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-08"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-01"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-16"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-15"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-14"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-13"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-12"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-11"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-10"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-09"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-16"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-15"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-14"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-13"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-12"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-11"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-10"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-09"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-16"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-15"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-14"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-13"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-12"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-11"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-10"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-09"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-02"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-03"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-04"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-05"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-06"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-07"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-08"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-01"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-02"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-03"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-04"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-05"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-06"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-07"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-08"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-01"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-02"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-03"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-04"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-05"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-06"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-07"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-08"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-01"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-16"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-15"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-14"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-13"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-12"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-11"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-10"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-09"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-16"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-15"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-14"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-13"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-12"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-11"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-10"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-09"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-16"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-15"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-14"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-13"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-12"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-11"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-10"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-09"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-02"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-03"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-04"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-05"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-06"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-07"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-08"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-01"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-02"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-03"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-04"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-05"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-06"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-07"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-08"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-01"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-02"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-03"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-04"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-05"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-06"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-07"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-08"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-01"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-16"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-15"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-14"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-13"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-12"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-11"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-10"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-09"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-16"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-15"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-14"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-13"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-12"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-11"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-10"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-09"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-16"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-15"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-14"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-13"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-12"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-11"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-10"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-09"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-02"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-03"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-04"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-05"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-06"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-07"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-08"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-01"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-02"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-03"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-04"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-05"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-06"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-07"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-08"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-01"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-02"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-03"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-04"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-05"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-06"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-07"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-08"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-01"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-16"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-15"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-14"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-13"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-12"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-11"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-10"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-09"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-16"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-15"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-14"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-13"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-12"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-11"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-10"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-09"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-16"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-15"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-14"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-13"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-12"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-11"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-10"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-09"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-02"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-03"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-04"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-05"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-06"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-07"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-08"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-01"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-02"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-03"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-04"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-05"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-06"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-07"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-08"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-01"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-02"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-03"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-04"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-05"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-06"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-07"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-08"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-01"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-16"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-15"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-14"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-13"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-12"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-11"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-10"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-09"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-16"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-15"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-14"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-13"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-12"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-11"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-10"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-09"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-16"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-15"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-14"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-13"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-12"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-11"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-10"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-09"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-02"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-03"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-04"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-05"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-06"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-07"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-08"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-01"), travelShakingFloorPlane.getSymbol());

		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-02"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-03"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-04"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-05"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-06"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-07"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-08"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-01"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());

		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-02"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-03"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-04"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-05"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-06"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-07"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-08"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-01"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());

	}

	@Override
	public void testCanMirror() {
		assertTrue(singleStraightMovementFloorPlaneSmall.canMirror());
		assertTrue(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canMirror());
		assertTrue(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canMirror());

		assertTrue(singleStraightMovementFloorPlaneMedium.canMirror());
		assertTrue(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canMirror());
		assertTrue(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canMirror());

		assertTrue(singleStraightMovementFloorPlaneLarge.canMirror());
		assertTrue(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canMirror());
		assertTrue(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canMirror());

		assertTrue(singleStraightMovementFloorPlaneLargest.canMirror());
		assertTrue(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canMirror());
		assertTrue(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canMirror());

		assertTrue(singleWristFlexFloorPlane.canMirror());
		assertTrue(singleWristFlexFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(singleWristFlexFloorPlaneSchemaArrowhead.canMirror());

		assertTrue(doubleWristFlexFloorPlane.canMirror());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canMirror());

		assertTrue(tripleWristFlexFloorPlane.canMirror());
		assertTrue(tripleWristFlexFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(tripleWristFlexFloorPlaneSchemaArrowhead.canMirror());

		assertTrue(doubleAlternatingWristFlexFloorPlane.canMirror());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canMirror());
		assertTrue(doubleAlternatingWristFlexFloorPlaneMirrored.canMirror());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canMirror());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canMirror());

		assertTrue(tripleAlternatingWristFlexFloorPlane.canMirror());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canMirror());
		assertTrue(tripleAlternatingWristFlexFloorPlaneMirrored.canMirror());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canMirror());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canMirror());

		assertTrue(doubleStraightMovementFloorPlane.canMirror());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canMirror());

		assertTrue(tripleStraightMovementFloorPlane.canMirror());
		assertTrue(tripleStraightMovementFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(tripleStraightMovementFloorPlaneSchemaArrowhead.canMirror());

		assertTrue(doubleAlternatingMovementFloorPlane.canMirror());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canMirror());
		assertTrue(doubleAlternatingMovementFloorPlaneMirrored.canMirror());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canMirror());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canMirror());

		assertTrue(tripleAlternatingMovementFloorPlane.canMirror());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canMirror());
		assertTrue(tripleAlternatingMovementFloorPlaneMirrored.canMirror());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canMirror());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canMirror());

		assertTrue(crossMovementFloorPlane.canMirror());
		assertTrue(crossMovementFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(crossMovementFloorPlaneSchemaArrowhead.canMirror());
		assertTrue(crossMovementFloorPlaneMirrored.canMirror());
		assertTrue(crossMovementFloorPlaneEmptyArrowheadMirrored.canMirror());
		assertTrue(crossMovementFloorPlaneSchemaArrowheadMirrored.canMirror());

		assertTrue(bendFloorPlane.canMirror());
		assertTrue(bendFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(bendFloorPlaneSchemaArrowhead.canMirror());
		assertTrue(bendFloorPlaneMirrored.canMirror());
		assertTrue(bendFloorPlaneEmptyArrowheadMirrored.canMirror());
		assertTrue(bendFloorPlaneSchemaArrowheadMirrored.canMirror());

		assertTrue(cornerFloorPlaneSmall.canMirror());
		assertTrue(cornerFloorPlaneSmallEmptyArrowhead.canMirror());
		assertTrue(cornerFloorPlaneSmallSchemaArrowhead.canMirror());
		assertTrue(cornerFloorPlaneSmallMirrored.canMirror());
		assertTrue(cornerFloorPlaneSmallEmptyArrowheadMirrored.canMirror());
		assertTrue(cornerFloorPlaneSmallSchemaArrowheadMirrored.canMirror());

		assertTrue(cornerFloorPlaneMedium.canMirror());
		assertTrue(cornerFloorPlaneMediumEmptyArrowhead.canMirror());
		assertTrue(cornerFloorPlaneMediumSchemaArrowhead.canMirror());
		assertTrue(cornerFloorPlaneMediumMirrored.canMirror());
		assertTrue(cornerFloorPlaneMediumEmptyArrowheadMirrored.canMirror());
		assertTrue(cornerFloorPlaneMediumSchemaArrowheadMirrored.canMirror());

		assertTrue(cornerFloorPlaneLarge.canMirror());
		assertTrue(cornerFloorPlaneLargeEmptyArrowhead.canMirror());
		assertTrue(cornerFloorPlaneLargeSchemaArrowhead.canMirror());
		assertTrue(cornerFloorPlaneLargeMirrored.canMirror());
		assertTrue(cornerFloorPlaneLargeEmptyArrowheadMirrored.canMirror());
		assertTrue(cornerFloorPlaneLargeSchemaArrowheadMirrored.canMirror());

		assertTrue(checkFloorPlane.canMirror());
		assertTrue(checkFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(checkFloorPlaneSchemaArrowhead.canMirror());
		assertTrue(checkFloorPlaneMirrored.canMirror());
		assertTrue(checkFloorPlaneEmptyArrowheadMirrored.canMirror());
		assertTrue(checkFloorPlaneSchemaArrowheadMirrored.canMirror());

		assertTrue(boxFloorPlaneSmall.canMirror());
		assertTrue(boxFloorPlaneSmallEmptyArrowhead.canMirror());
		assertTrue(boxFloorPlaneSmallSchemaArrowhead.canMirror());
		assertTrue(boxFloorPlaneSmallMirrored.canMirror());
		assertTrue(boxFloorPlaneSmallEmptyArrowheadMirrored.canMirror());
		assertTrue(boxFloorPlaneSmallSchemaArrowheadMirrored.canMirror());

		assertTrue(boxFloorPlaneMedium.canMirror());
		assertTrue(boxFloorPlaneMediumEmptyArrowhead.canMirror());
		assertTrue(boxFloorPlaneMediumSchemaArrowhead.canMirror());
		assertTrue(boxFloorPlaneMediumMirrored.canMirror());
		assertTrue(boxFloorPlaneMediumEmptyArrowheadMirrored.canMirror());
		assertTrue(boxFloorPlaneMediumSchemaArrowheadMirrored.canMirror());

		assertTrue(boxFloorPlaneLarge.canMirror());
		assertTrue(boxFloorPlaneLargeEmptyArrowhead.canMirror());
		assertTrue(boxFloorPlaneLargeSchemaArrowhead.canMirror());
		assertTrue(boxFloorPlaneLargeMirrored.canMirror());
		assertTrue(boxFloorPlaneLargeEmptyArrowheadMirrored.canMirror());
		assertTrue(boxFloorPlaneLargeSchemaArrowheadMirrored.canMirror());

		assertTrue(zigzagFloorPlaneSmall.canMirror());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowhead.canMirror());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowhead.canMirror());
		assertTrue(zigzagFloorPlaneSmallMirrored.canMirror());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canMirror());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canMirror());

		assertTrue(zigzagFloorPlaneMedium.canMirror());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowhead.canMirror());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowhead.canMirror());
		assertTrue(zigzagFloorPlaneMediumMirrored.canMirror());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canMirror());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canMirror());

		assertTrue(zigzagFloorPlaneLarge.canMirror());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowhead.canMirror());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowhead.canMirror());
		assertTrue(zigzagFloorPlaneLargeMirrored.canMirror());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canMirror());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canMirror());

		assertTrue(peaksFloorPlaneSmall.canMirror());
		assertTrue(peaksFloorPlaneSmallEmptyArrowhead.canMirror());
		assertTrue(peaksFloorPlaneSmallSchemaArrowhead.canMirror());
		assertTrue(peaksFloorPlaneSmallMirrored.canMirror());
		assertTrue(peaksFloorPlaneSmallEmptyArrowheadMirrored.canMirror());
		assertTrue(peaksFloorPlaneSmallSchemaArrowheadMirrored.canMirror());

		assertTrue(peaksFloorPlaneMedium.canMirror());
		assertTrue(peaksFloorPlaneMediumEmptyArrowhead.canMirror());
		assertTrue(peaksFloorPlaneMediumSchemaArrowhead.canMirror());
		assertTrue(peaksFloorPlaneMediumMirrored.canMirror());
		assertTrue(peaksFloorPlaneMediumEmptyArrowheadMirrored.canMirror());
		assertTrue(peaksFloorPlaneMediumSchemaArrowheadMirrored.canMirror());

		assertTrue(peaksFloorPlaneLarge.canMirror());
		assertTrue(peaksFloorPlaneLargeEmptyArrowhead.canMirror());
		assertTrue(peaksFloorPlaneLargeSchemaArrowhead.canMirror());
		assertTrue(peaksFloorPlaneLargeMirrored.canMirror());
		assertTrue(peaksFloorPlaneLargeEmptyArrowheadMirrored.canMirror());
		assertTrue(peaksFloorPlaneLargeSchemaArrowheadMirrored.canMirror());

		assertTrue(travelRotationSingleWallPlaneFilledArrow.canMirror());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canMirror());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canMirror());
		assertTrue(travelRotationSingleWallPlaneFilledArrowMirrored.canMirror());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canMirror());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canMirror());

		assertTrue(travelRotationDoubleWallPlaneFilledArrow.canMirror());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canMirror());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canMirror());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowMirrored.canMirror());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canMirror());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canMirror());

		assertTrue(travelRotationAlternatingWallPlaneFilledArrow.canMirror());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canMirror());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canMirror());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowMirrored.canMirror());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canMirror());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canMirror());

		assertTrue(travelRotationSingleFloorPlaneFilledArrow.canMirror());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canMirror());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canMirror());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowMirrored.canMirror());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canMirror());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canMirror());

		assertTrue(travelRotationDoubleFloorPlaneFilledArrow.canMirror());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canMirror());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canMirror());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowMirrored.canMirror());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canMirror());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canMirror());

		assertTrue(travelRotationAlternatingFloorPlaneFilledArrow.canMirror());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canMirror());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canMirror());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canMirror());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canMirror());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canMirror());

		assertTrue(travelShakingFloorPlane.canMirror());
		assertTrue(travelShakingFloorPlaneEmptyArrowhead.canMirror());
		assertTrue(travelShakingFloorPlaneSchemaArrowhead.canMirror());

	}

	@Override
	public void testMirror() {

		singleStraightMovementFloorPlaneSmall.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-01"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-01"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-01"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMedium.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-01"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-01"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-01"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLarge.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-01"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-01"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-01"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargest.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-01"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-01"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-01"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());

		singleWristFlexFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-01"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-01"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-01"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleWristFlexFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-01"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-01"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-01"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleWristFlexFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-01"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-01"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-01"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlane.mirror();
		assertEquals(doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-01"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirror();
		assertEquals(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-01"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirror();
		assertEquals(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-01"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneMirrored.mirror();
		assertEquals(doubleAlternatingWristFlexFloorPlane.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-09"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-09"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-09"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlane.mirror();
		assertEquals(tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-01"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirror();
		assertEquals(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-01"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirror();
		assertEquals(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-01"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneMirrored.mirror();
		assertEquals(tripleAlternatingWristFlexFloorPlane.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-09"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-09"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-09"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		doubleStraightMovementFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-01"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-01"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-01"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleStraightMovementFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-01"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-01"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-01"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlane.mirror();
		assertEquals(doubleAlternatingMovementFloorPlaneMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-01"), doubleAlternatingMovementFloorPlane.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-01"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-01"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneMirrored.mirror();
		assertEquals(doubleAlternatingMovementFloorPlane.getSymbol(),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-09"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-09"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-09"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlane.mirror();
		assertEquals(tripleAlternatingMovementFloorPlaneMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-01"), tripleAlternatingMovementFloorPlane.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-01"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-01"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneMirrored.mirror();
		assertEquals(tripleAlternatingMovementFloorPlane.getSymbol(),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-09"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-09"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-09"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		crossMovementFloorPlane.mirror();
		assertEquals(crossMovementFloorPlaneMirrored.getSymbol(), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-01"), crossMovementFloorPlane.getSymbol());

		crossMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-01"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());

		crossMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-01"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());

		crossMovementFloorPlaneMirrored.mirror();
		assertEquals(crossMovementFloorPlane.getSymbol(), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-09"), crossMovementFloorPlaneMirrored.getSymbol());

		crossMovementFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(crossMovementFloorPlaneEmptyArrowhead.getSymbol(),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-09"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		crossMovementFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(crossMovementFloorPlaneSchemaArrowhead.getSymbol(),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-09"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		bendFloorPlane.mirror();
		assertEquals(bendFloorPlaneMirrored.getSymbol(), bendFloorPlane.getSymbol());
		bendFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-01"), bendFloorPlane.getSymbol());

		bendFloorPlaneEmptyArrowhead.mirror();
		assertEquals(bendFloorPlaneEmptyArrowheadMirrored.getSymbol(), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-01"), bendFloorPlaneEmptyArrowhead.getSymbol());

		bendFloorPlaneSchemaArrowhead.mirror();
		assertEquals(bendFloorPlaneSchemaArrowheadMirrored.getSymbol(), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-01"), bendFloorPlaneSchemaArrowhead.getSymbol());

		bendFloorPlaneMirrored.mirror();
		assertEquals(bendFloorPlane.getSymbol(), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-09"), bendFloorPlaneMirrored.getSymbol());

		bendFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(bendFloorPlaneEmptyArrowhead.getSymbol(), bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-09"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());

		bendFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(bendFloorPlaneSchemaArrowhead.getSymbol(), bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-09"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmall.mirror();
		assertEquals(cornerFloorPlaneSmallMirrored.getSymbol(), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-01"), cornerFloorPlaneSmall.getSymbol());

		cornerFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-01"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());

		cornerFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-01"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());

		cornerFloorPlaneSmallMirrored.mirror();
		assertEquals(cornerFloorPlaneSmall.getSymbol(), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-09"), cornerFloorPlaneSmallMirrored.getSymbol());

		cornerFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(cornerFloorPlaneSmallEmptyArrowhead.getSymbol(),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-09"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(cornerFloorPlaneSmallSchemaArrowhead.getSymbol(),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-09"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneMedium.mirror();
		assertEquals(cornerFloorPlaneMediumMirrored.getSymbol(), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-01"), cornerFloorPlaneMedium.getSymbol());

		cornerFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-01"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());

		cornerFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-01"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());

		cornerFloorPlaneMediumMirrored.mirror();
		assertEquals(cornerFloorPlaneMedium.getSymbol(), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-09"), cornerFloorPlaneMediumMirrored.getSymbol());

		cornerFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(cornerFloorPlaneMediumEmptyArrowhead.getSymbol(),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-09"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(cornerFloorPlaneMediumSchemaArrowhead.getSymbol(),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-09"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneLarge.mirror();
		assertEquals(cornerFloorPlaneLargeMirrored.getSymbol(), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-01"), cornerFloorPlaneLarge.getSymbol());

		cornerFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-01"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());

		cornerFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-01"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());

		cornerFloorPlaneLargeMirrored.mirror();
		assertEquals(cornerFloorPlaneLarge.getSymbol(), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-09"), cornerFloorPlaneLargeMirrored.getSymbol());

		cornerFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(cornerFloorPlaneLargeEmptyArrowhead.getSymbol(),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-09"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(cornerFloorPlaneLargeSchemaArrowhead.getSymbol(),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-09"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		checkFloorPlane.mirror();
		assertEquals(checkFloorPlaneMirrored.getSymbol(), checkFloorPlane.getSymbol());
		checkFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-01"), checkFloorPlane.getSymbol());

		checkFloorPlaneEmptyArrowhead.mirror();
		assertEquals(checkFloorPlaneEmptyArrowheadMirrored.getSymbol(), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-01"), checkFloorPlaneEmptyArrowhead.getSymbol());

		checkFloorPlaneSchemaArrowhead.mirror();
		assertEquals(checkFloorPlaneSchemaArrowheadMirrored.getSymbol(), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-01"), checkFloorPlaneSchemaArrowhead.getSymbol());

		checkFloorPlaneMirrored.mirror();
		assertEquals(checkFloorPlane.getSymbol(), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-09"), checkFloorPlaneMirrored.getSymbol());

		checkFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(checkFloorPlaneEmptyArrowhead.getSymbol(), checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-09"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());

		checkFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(checkFloorPlaneSchemaArrowhead.getSymbol(), checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-09"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneSmall.mirror();
		assertEquals(boxFloorPlaneSmallMirrored.getSymbol(), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-01"), boxFloorPlaneSmall.getSymbol());

		boxFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-01"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());

		boxFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-01"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());

		boxFloorPlaneSmallMirrored.mirror();
		assertEquals(boxFloorPlaneSmall.getSymbol(), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-09"), boxFloorPlaneSmallMirrored.getSymbol());

		boxFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(boxFloorPlaneSmallEmptyArrowhead.getSymbol(),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-09"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(boxFloorPlaneSmallSchemaArrowhead.getSymbol(),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-09"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneMedium.mirror();
		assertEquals(boxFloorPlaneMediumMirrored.getSymbol(), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-01"), boxFloorPlaneMedium.getSymbol());

		boxFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-01"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());

		boxFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-01"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());

		boxFloorPlaneMediumMirrored.mirror();
		assertEquals(boxFloorPlaneMedium.getSymbol(), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-09"), boxFloorPlaneMediumMirrored.getSymbol());

		boxFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(boxFloorPlaneMediumEmptyArrowhead.getSymbol(),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-09"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(boxFloorPlaneMediumSchemaArrowhead.getSymbol(),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-09"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneLarge.mirror();
		assertEquals(boxFloorPlaneLargeMirrored.getSymbol(), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-01"), boxFloorPlaneLarge.getSymbol());

		boxFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-01"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());

		boxFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-01"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());

		boxFloorPlaneLargeMirrored.mirror();
		assertEquals(boxFloorPlaneLarge.getSymbol(), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-09"), boxFloorPlaneLargeMirrored.getSymbol());

		boxFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(boxFloorPlaneLargeEmptyArrowhead.getSymbol(),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-09"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(boxFloorPlaneLargeSchemaArrowhead.getSymbol(),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-09"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmall.mirror();
		assertEquals(zigzagFloorPlaneSmallMirrored.getSymbol(), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-01"), zigzagFloorPlaneSmall.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-01"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-01"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());

		zigzagFloorPlaneSmallMirrored.mirror();
		assertEquals(zigzagFloorPlaneSmall.getSymbol(), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-09"), zigzagFloorPlaneSmallMirrored.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(zigzagFloorPlaneSmallEmptyArrowhead.getSymbol(),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-09"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(zigzagFloorPlaneSmallSchemaArrowhead.getSymbol(),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-09"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMedium.mirror();
		assertEquals(zigzagFloorPlaneMediumMirrored.getSymbol(), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-01"), zigzagFloorPlaneMedium.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-01"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-01"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());

		zigzagFloorPlaneMediumMirrored.mirror();
		assertEquals(zigzagFloorPlaneMedium.getSymbol(), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-09"), zigzagFloorPlaneMediumMirrored.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(zigzagFloorPlaneMediumEmptyArrowhead.getSymbol(),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-09"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(zigzagFloorPlaneMediumSchemaArrowhead.getSymbol(),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-09"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLarge.mirror();
		assertEquals(zigzagFloorPlaneLargeMirrored.getSymbol(), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-01"), zigzagFloorPlaneLarge.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-01"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-01"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());

		zigzagFloorPlaneLargeMirrored.mirror();
		assertEquals(zigzagFloorPlaneLarge.getSymbol(), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-09"), zigzagFloorPlaneLargeMirrored.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(zigzagFloorPlaneLargeEmptyArrowhead.getSymbol(),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-09"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(zigzagFloorPlaneLargeSchemaArrowhead.getSymbol(),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-09"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmall.mirror();
		assertEquals(peaksFloorPlaneSmallMirrored.getSymbol(), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-01"), peaksFloorPlaneSmall.getSymbol());

		peaksFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-01"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());

		peaksFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-01"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());

		peaksFloorPlaneSmallMirrored.mirror();
		assertEquals(peaksFloorPlaneSmall.getSymbol(), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-09"), peaksFloorPlaneSmallMirrored.getSymbol());

		peaksFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(peaksFloorPlaneSmallEmptyArrowhead.getSymbol(),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-09"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(peaksFloorPlaneSmallSchemaArrowhead.getSymbol(),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-09"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneMedium.mirror();
		assertEquals(peaksFloorPlaneMediumMirrored.getSymbol(), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-01"), peaksFloorPlaneMedium.getSymbol());

		peaksFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-01"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());

		peaksFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-01"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());

		peaksFloorPlaneMediumMirrored.mirror();
		assertEquals(peaksFloorPlaneMedium.getSymbol(), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-09"), peaksFloorPlaneMediumMirrored.getSymbol());

		peaksFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(peaksFloorPlaneMediumEmptyArrowhead.getSymbol(),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-09"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(peaksFloorPlaneMediumSchemaArrowhead.getSymbol(),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-09"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneLarge.mirror();
		assertEquals(peaksFloorPlaneLargeMirrored.getSymbol(), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-01"), peaksFloorPlaneLarge.getSymbol());

		peaksFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-01"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());

		peaksFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-01"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());

		peaksFloorPlaneLargeMirrored.mirror();
		assertEquals(peaksFloorPlaneLarge.getSymbol(), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-09"), peaksFloorPlaneLargeMirrored.getSymbol());

		peaksFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(peaksFloorPlaneLargeEmptyArrowhead.getSymbol(),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-09"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(peaksFloorPlaneLargeSchemaArrowhead.getSymbol(),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-09"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrow.mirror();
		assertEquals(travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-01"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-01"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-01"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowMirrored.mirror();
		assertEquals(travelRotationSingleWallPlaneFilledArrow.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-09"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-09"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-09"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.mirror();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-01"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-01"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-01"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowMirrored.mirror();
		assertEquals(travelRotationDoubleWallPlaneFilledArrow.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-09"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-09"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-09"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrow.mirror();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-01"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-01"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-01"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowMirrored.mirror();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-09"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-09"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-09"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrow.mirror();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-01"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-01"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-01"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowMirrored.mirror();
		assertEquals(travelRotationSingleFloorPlaneFilledArrow.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-09"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-09"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-09"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.mirror();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-01"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-01"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-01"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowMirrored.mirror();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrow.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-09"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-09"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-09"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrow.mirror();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-01"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-01"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-01"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowMirrored.mirror();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-09"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-09"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-09"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelShakingFloorPlane.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-01"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-01"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.mirror();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-01"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
	}

	@Override
	public void testCanMirrorVertically() {

		assertTrue(singleStraightMovementFloorPlaneSmall.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canMirrorVertically());

		assertTrue(singleStraightMovementFloorPlaneMedium.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canMirrorVertically());

		assertTrue(singleStraightMovementFloorPlaneLarge.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canMirrorVertically());

		assertTrue(singleStraightMovementFloorPlaneLargest.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canMirrorVertically());
		assertTrue(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canMirrorVertically());

		assertTrue(singleWristFlexFloorPlane.canMirrorVertically());
		assertTrue(singleWristFlexFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(singleWristFlexFloorPlaneSchemaArrowhead.canMirrorVertically());

		assertTrue(doubleWristFlexFloorPlane.canMirrorVertically());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canMirrorVertically());

		assertTrue(tripleWristFlexFloorPlane.canMirrorVertically());
		assertTrue(tripleWristFlexFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(tripleWristFlexFloorPlaneSchemaArrowhead.canMirrorVertically());

		assertTrue(doubleAlternatingWristFlexFloorPlane.canMirrorVertically());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canMirrorVertically());
		assertTrue(doubleAlternatingWristFlexFloorPlaneMirrored.canMirrorVertically());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(tripleAlternatingWristFlexFloorPlane.canMirrorVertically());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canMirrorVertically());
		assertTrue(tripleAlternatingWristFlexFloorPlaneMirrored.canMirrorVertically());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(doubleStraightMovementFloorPlane.canMirrorVertically());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canMirrorVertically());

		assertTrue(tripleStraightMovementFloorPlane.canMirrorVertically());
		assertTrue(tripleStraightMovementFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(tripleStraightMovementFloorPlaneSchemaArrowhead.canMirrorVertically());

		assertTrue(doubleAlternatingMovementFloorPlane.canMirrorVertically());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canMirrorVertically());
		assertTrue(doubleAlternatingMovementFloorPlaneMirrored.canMirrorVertically());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(tripleAlternatingMovementFloorPlane.canMirrorVertically());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canMirrorVertically());
		assertTrue(tripleAlternatingMovementFloorPlaneMirrored.canMirrorVertically());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(crossMovementFloorPlane.canMirrorVertically());
		assertTrue(crossMovementFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(crossMovementFloorPlaneSchemaArrowhead.canMirrorVertically());
		assertTrue(crossMovementFloorPlaneMirrored.canMirrorVertically());
		assertTrue(crossMovementFloorPlaneEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(crossMovementFloorPlaneSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(bendFloorPlane.canMirrorVertically());
		assertTrue(bendFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(bendFloorPlaneSchemaArrowhead.canMirrorVertically());
		assertTrue(bendFloorPlaneMirrored.canMirrorVertically());
		assertTrue(bendFloorPlaneEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(bendFloorPlaneSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(cornerFloorPlaneSmall.canMirrorVertically());
		assertTrue(cornerFloorPlaneSmallEmptyArrowhead.canMirrorVertically());
		assertTrue(cornerFloorPlaneSmallSchemaArrowhead.canMirrorVertically());
		assertTrue(cornerFloorPlaneSmallMirrored.canMirrorVertically());
		assertTrue(cornerFloorPlaneSmallEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(cornerFloorPlaneSmallSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(cornerFloorPlaneMedium.canMirrorVertically());
		assertTrue(cornerFloorPlaneMediumEmptyArrowhead.canMirrorVertically());
		assertTrue(cornerFloorPlaneMediumSchemaArrowhead.canMirrorVertically());
		assertTrue(cornerFloorPlaneMediumMirrored.canMirrorVertically());
		assertTrue(cornerFloorPlaneMediumEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(cornerFloorPlaneMediumSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(cornerFloorPlaneLarge.canMirrorVertically());
		assertTrue(cornerFloorPlaneLargeEmptyArrowhead.canMirrorVertically());
		assertTrue(cornerFloorPlaneLargeSchemaArrowhead.canMirrorVertically());
		assertTrue(cornerFloorPlaneLargeMirrored.canMirrorVertically());
		assertTrue(cornerFloorPlaneLargeEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(cornerFloorPlaneLargeSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(checkFloorPlane.canMirrorVertically());
		assertTrue(checkFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(checkFloorPlaneSchemaArrowhead.canMirrorVertically());
		assertTrue(checkFloorPlaneMirrored.canMirrorVertically());
		assertTrue(checkFloorPlaneEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(checkFloorPlaneSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(boxFloorPlaneSmall.canMirrorVertically());
		assertTrue(boxFloorPlaneSmallEmptyArrowhead.canMirrorVertically());
		assertTrue(boxFloorPlaneSmallSchemaArrowhead.canMirrorVertically());
		assertTrue(boxFloorPlaneSmallMirrored.canMirrorVertically());
		assertTrue(boxFloorPlaneSmallEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(boxFloorPlaneSmallSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(boxFloorPlaneMedium.canMirrorVertically());
		assertTrue(boxFloorPlaneMediumEmptyArrowhead.canMirrorVertically());
		assertTrue(boxFloorPlaneMediumSchemaArrowhead.canMirrorVertically());
		assertTrue(boxFloorPlaneMediumMirrored.canMirrorVertically());
		assertTrue(boxFloorPlaneMediumEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(boxFloorPlaneMediumSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(boxFloorPlaneLarge.canMirrorVertically());
		assertTrue(boxFloorPlaneLargeEmptyArrowhead.canMirrorVertically());
		assertTrue(boxFloorPlaneLargeSchemaArrowhead.canMirrorVertically());
		assertTrue(boxFloorPlaneLargeMirrored.canMirrorVertically());
		assertTrue(boxFloorPlaneLargeEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(boxFloorPlaneLargeSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(zigzagFloorPlaneSmall.canMirrorVertically());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowhead.canMirrorVertically());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowhead.canMirrorVertically());
		assertTrue(zigzagFloorPlaneSmallMirrored.canMirrorVertically());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(zigzagFloorPlaneMedium.canMirrorVertically());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowhead.canMirrorVertically());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowhead.canMirrorVertically());
		assertTrue(zigzagFloorPlaneMediumMirrored.canMirrorVertically());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(zigzagFloorPlaneLarge.canMirrorVertically());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowhead.canMirrorVertically());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowhead.canMirrorVertically());
		assertTrue(zigzagFloorPlaneLargeMirrored.canMirrorVertically());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(peaksFloorPlaneSmall.canMirrorVertically());
		assertTrue(peaksFloorPlaneSmallEmptyArrowhead.canMirrorVertically());
		assertTrue(peaksFloorPlaneSmallSchemaArrowhead.canMirrorVertically());
		assertTrue(peaksFloorPlaneSmallMirrored.canMirrorVertically());
		assertTrue(peaksFloorPlaneSmallEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(peaksFloorPlaneSmallSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(peaksFloorPlaneMedium.canMirrorVertically());
		assertTrue(peaksFloorPlaneMediumEmptyArrowhead.canMirrorVertically());
		assertTrue(peaksFloorPlaneMediumSchemaArrowhead.canMirrorVertically());
		assertTrue(peaksFloorPlaneMediumMirrored.canMirrorVertically());
		assertTrue(peaksFloorPlaneMediumEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(peaksFloorPlaneMediumSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(peaksFloorPlaneLarge.canMirrorVertically());
		assertTrue(peaksFloorPlaneLargeEmptyArrowhead.canMirrorVertically());
		assertTrue(peaksFloorPlaneLargeSchemaArrowhead.canMirrorVertically());
		assertTrue(peaksFloorPlaneLargeMirrored.canMirrorVertically());
		assertTrue(peaksFloorPlaneLargeEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(peaksFloorPlaneLargeSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(travelRotationSingleWallPlaneFilledArrow.canMirrorVertically());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canMirrorVertically());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canMirrorVertically());
		assertTrue(travelRotationSingleWallPlaneFilledArrowMirrored.canMirrorVertically());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(travelRotationDoubleWallPlaneFilledArrow.canMirrorVertically());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canMirrorVertically());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canMirrorVertically());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowMirrored.canMirrorVertically());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(travelRotationAlternatingWallPlaneFilledArrow.canMirrorVertically());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canMirrorVertically());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canMirrorVertically());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowMirrored.canMirrorVertically());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(travelRotationSingleFloorPlaneFilledArrow.canMirrorVertically());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canMirrorVertically());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canMirrorVertically());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowMirrored.canMirrorVertically());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(travelRotationDoubleFloorPlaneFilledArrow.canMirrorVertically());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canMirrorVertically());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canMirrorVertically());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowMirrored.canMirrorVertically());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(travelRotationAlternatingFloorPlaneFilledArrow.canMirrorVertically());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canMirrorVertically());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canMirrorVertically());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canMirrorVertically());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canMirrorVertically());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canMirrorVertically());

		assertTrue(travelShakingFloorPlane.canMirrorVertically());
		assertTrue(travelShakingFloorPlaneEmptyArrowhead.canMirrorVertically());
		assertTrue(travelShakingFloorPlaneSchemaArrowhead.canMirrorVertically());

	}

	@Override
	public void testMirrorVertically() {

		singleStraightMovementFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-05"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-01"),
				singleStraightMovementFloorPlaneSmall.getSymbol());

		singleStraightMovementFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-05"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-01"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-05"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-01"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-05"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-01"),
				singleStraightMovementFloorPlaneMedium.getSymbol());

		singleStraightMovementFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-05"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-01"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-05"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-01"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-05"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-01"),
				singleStraightMovementFloorPlaneLarge.getSymbol());

		singleStraightMovementFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-05"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-01"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-05"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-01"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargest.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-05"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-01"),
				singleStraightMovementFloorPlaneLargest.getSymbol());

		singleStraightMovementFloorPlaneLargestEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-05"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-01"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargestSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-05"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-01"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());

		singleWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-05"), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-01"), singleWristFlexFloorPlane.getSymbol());

		singleWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-05"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-01"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		singleWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-05"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-01"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-05"), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-01"), doubleWristFlexFloorPlane.getSymbol());

		doubleWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-05"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-01"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-05"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-01"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-05"), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-01"), tripleWristFlexFloorPlane.getSymbol());

		tripleWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-05"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-01"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-05"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-01"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-13"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-01"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-13"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-01"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-13"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-01"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-05"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-09"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-05"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-09"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-05"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-09"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-13"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-01"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-13"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-01"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-13"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-01"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-05"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-09"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-05"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-09"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-05"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-09"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		doubleStraightMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-05"), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-01"), doubleStraightMovementFloorPlane.getSymbol());

		doubleStraightMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-05"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-01"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleStraightMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-05"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-01"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleStraightMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-05"), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-01"), tripleStraightMovementFloorPlane.getSymbol());

		tripleStraightMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-05"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-01"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleStraightMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-05"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-01"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-13"), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-01"), doubleAlternatingMovementFloorPlane.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-13"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-01"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-13"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-01"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-05"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-09"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-05"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-09"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-05"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-09"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-13"), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-01"), tripleAlternatingMovementFloorPlane.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-13"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-01"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-13"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-01"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-05"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-09"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-05"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-09"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-05"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-09"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		crossMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-13"), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-01"), crossMovementFloorPlane.getSymbol());

		crossMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-13"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-01"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());

		crossMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-13"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-01"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());

		crossMovementFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-05"), crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-09"), crossMovementFloorPlaneMirrored.getSymbol());

		crossMovementFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-05"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-09"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		crossMovementFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-05"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-09"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		bendFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-13"), bendFloorPlane.getSymbol());
		bendFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-01"), bendFloorPlane.getSymbol());

		bendFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-13"), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-01"), bendFloorPlaneEmptyArrowhead.getSymbol());

		bendFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-13"), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-01"), bendFloorPlaneSchemaArrowhead.getSymbol());

		bendFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-05"), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-09"), bendFloorPlaneMirrored.getSymbol());

		bendFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-05"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-09"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());

		bendFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-05"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-09"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-13"), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-01"), cornerFloorPlaneSmall.getSymbol());

		cornerFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-13"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-01"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());

		cornerFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-13"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-01"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());

		cornerFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-05"), cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-09"), cornerFloorPlaneSmallMirrored.getSymbol());

		cornerFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-05"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-09"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-05"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-09"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-13"), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-01"), cornerFloorPlaneMedium.getSymbol());

		cornerFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-13"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-01"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());

		cornerFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-13"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-01"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());

		cornerFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-05"), cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-09"), cornerFloorPlaneMediumMirrored.getSymbol());

		cornerFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-05"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-09"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-05"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-09"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-13"), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-01"), cornerFloorPlaneLarge.getSymbol());

		cornerFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-13"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-01"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());

		cornerFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-13"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-01"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());

		cornerFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-05"), cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-09"), cornerFloorPlaneLargeMirrored.getSymbol());

		cornerFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-05"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-09"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-05"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-09"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		checkFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-13"), checkFloorPlane.getSymbol());
		checkFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-01"), checkFloorPlane.getSymbol());

		checkFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-13"), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-01"), checkFloorPlaneEmptyArrowhead.getSymbol());

		checkFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-13"), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-01"), checkFloorPlaneSchemaArrowhead.getSymbol());

		checkFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-05"), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-09"), checkFloorPlaneMirrored.getSymbol());

		checkFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-05"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-09"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());

		checkFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-05"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-09"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-13"), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-01"), boxFloorPlaneSmall.getSymbol());

		boxFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-13"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-01"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());

		boxFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-13"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-01"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());

		boxFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-05"), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-09"), boxFloorPlaneSmallMirrored.getSymbol());

		boxFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-05"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-09"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-05"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-09"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-13"), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-01"), boxFloorPlaneMedium.getSymbol());

		boxFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-13"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-01"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());

		boxFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-13"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-01"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());

		boxFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-05"), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-09"), boxFloorPlaneMediumMirrored.getSymbol());

		boxFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-05"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-09"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-05"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-09"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-13"), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-01"), boxFloorPlaneLarge.getSymbol());

		boxFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-13"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-01"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());

		boxFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-13"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-01"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());

		boxFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-05"), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-09"), boxFloorPlaneLargeMirrored.getSymbol());

		boxFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-05"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-09"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-05"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-09"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-13"), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-01"), zigzagFloorPlaneSmall.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-13"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-01"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-13"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-01"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());

		zigzagFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-05"), zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-09"), zigzagFloorPlaneSmallMirrored.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-05"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-09"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-05"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-09"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-13"), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-01"), zigzagFloorPlaneMedium.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-13"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-01"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-13"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-01"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());

		zigzagFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-05"), zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-09"), zigzagFloorPlaneMediumMirrored.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-05"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-09"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-05"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-09"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-13"), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-01"), zigzagFloorPlaneLarge.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-13"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-01"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-13"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-01"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());

		zigzagFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-05"), zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-09"), zigzagFloorPlaneLargeMirrored.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-05"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-09"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-05"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-09"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-13"), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-01"), peaksFloorPlaneSmall.getSymbol());

		peaksFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-13"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-01"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());

		peaksFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-13"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-01"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());

		peaksFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-05"), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-09"), peaksFloorPlaneSmallMirrored.getSymbol());

		peaksFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-05"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-09"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-05"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-09"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-13"), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-01"), peaksFloorPlaneMedium.getSymbol());

		peaksFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-13"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-01"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());

		peaksFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-13"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-01"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());

		peaksFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-05"), peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-09"), peaksFloorPlaneMediumMirrored.getSymbol());

		peaksFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-05"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-09"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-05"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-09"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-13"), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-01"), peaksFloorPlaneLarge.getSymbol());

		peaksFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-13"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-01"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());

		peaksFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-13"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-01"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());

		peaksFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-05"), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-09"), peaksFloorPlaneLargeMirrored.getSymbol());

		peaksFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-05"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-09"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-05"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-09"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-13"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-01"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-13"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-01"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-13"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-01"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-05"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-09"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-05"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-09"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-05"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-09"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-13"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-01"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-13"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-01"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-13"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-01"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-05"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-09"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-05"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-09"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-05"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-09"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-13"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-01"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-13"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-01"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-13"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-01"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-05"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-09"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-05"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-09"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-05"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-09"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-13"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-01"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-13"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-01"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-13"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-01"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-05"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-09"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-05"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-09"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-05"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-09"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-13"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-01"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-13"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-01"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-13"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-01"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-05"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-09"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-05"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-09"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-05"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-09"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-13"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-01"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-13"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-01"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-13"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-01"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-05"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-09"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-05"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-09"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-05"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-09"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelShakingFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-05"), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-01"), travelShakingFloorPlane.getSymbol());

		travelShakingFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-05"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-01"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());

		travelShakingFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-05"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.mirrorVertically();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-01"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());

	}

	@Override
	public void testCanPitch() {

		assertFalse(singleStraightMovementFloorPlaneSmall.canPitch());
		assertFalse(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canPitch());
		assertFalse(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canPitch());

		assertFalse(singleStraightMovementFloorPlaneMedium.canPitch());
		assertFalse(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canPitch());
		assertFalse(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canPitch());

		assertFalse(singleStraightMovementFloorPlaneLarge.canPitch());
		assertFalse(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canPitch());
		assertFalse(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canPitch());

		assertFalse(singleStraightMovementFloorPlaneLargest.canPitch());
		assertFalse(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canPitch());
		assertFalse(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canPitch());

		assertFalse(singleWristFlexFloorPlane.canPitch());
		assertFalse(singleWristFlexFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(singleWristFlexFloorPlaneSchemaArrowhead.canPitch());

		assertFalse(doubleWristFlexFloorPlane.canPitch());
		assertFalse(doubleWristFlexFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(doubleWristFlexFloorPlaneSchemaArrowhead.canPitch());

		assertFalse(tripleWristFlexFloorPlane.canPitch());
		assertFalse(tripleWristFlexFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(tripleWristFlexFloorPlaneSchemaArrowhead.canPitch());

		assertFalse(doubleAlternatingWristFlexFloorPlane.canPitch());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canPitch());
		assertFalse(doubleAlternatingWristFlexFloorPlaneMirrored.canPitch());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canPitch());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canPitch());

		assertFalse(tripleAlternatingWristFlexFloorPlane.canPitch());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canPitch());
		assertFalse(tripleAlternatingWristFlexFloorPlaneMirrored.canPitch());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canPitch());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canPitch());

		assertFalse(doubleStraightMovementFloorPlane.canPitch());
		assertFalse(doubleStraightMovementFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(doubleStraightMovementFloorPlaneSchemaArrowhead.canPitch());

		assertFalse(tripleStraightMovementFloorPlane.canPitch());
		assertFalse(tripleStraightMovementFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(tripleStraightMovementFloorPlaneSchemaArrowhead.canPitch());

		assertFalse(doubleAlternatingMovementFloorPlane.canPitch());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canPitch());
		assertFalse(doubleAlternatingMovementFloorPlaneMirrored.canPitch());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canPitch());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canPitch());

		assertFalse(tripleAlternatingMovementFloorPlane.canPitch());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canPitch());
		assertFalse(tripleAlternatingMovementFloorPlaneMirrored.canPitch());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canPitch());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canPitch());

		assertFalse(crossMovementFloorPlane.canPitch());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canPitch());
		assertFalse(crossMovementFloorPlaneMirrored.canPitch());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canPitch());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canPitch());

		assertFalse(bendFloorPlane.canPitch());
		assertFalse(bendFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(bendFloorPlaneSchemaArrowhead.canPitch());
		assertFalse(bendFloorPlaneMirrored.canPitch());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canPitch());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canPitch());

		assertFalse(cornerFloorPlaneSmall.canPitch());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canPitch());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canPitch());
		assertFalse(cornerFloorPlaneSmallMirrored.canPitch());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canPitch());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canPitch());

		assertFalse(cornerFloorPlaneMedium.canPitch());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canPitch());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canPitch());
		assertFalse(cornerFloorPlaneMediumMirrored.canPitch());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canPitch());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canPitch());

		assertFalse(cornerFloorPlaneLarge.canPitch());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canPitch());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canPitch());
		assertFalse(cornerFloorPlaneLargeMirrored.canPitch());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canPitch());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canPitch());

		assertFalse(checkFloorPlane.canPitch());
		assertFalse(checkFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(checkFloorPlaneSchemaArrowhead.canPitch());
		assertFalse(checkFloorPlaneMirrored.canPitch());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canPitch());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canPitch());

		assertFalse(boxFloorPlaneSmall.canPitch());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canPitch());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canPitch());
		assertFalse(boxFloorPlaneSmallMirrored.canPitch());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canPitch());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canPitch());

		assertFalse(boxFloorPlaneMedium.canPitch());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canPitch());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canPitch());
		assertFalse(boxFloorPlaneMediumMirrored.canPitch());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canPitch());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canPitch());

		assertFalse(boxFloorPlaneLarge.canPitch());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canPitch());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canPitch());
		assertFalse(boxFloorPlaneLargeMirrored.canPitch());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canPitch());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canPitch());

		assertFalse(zigzagFloorPlaneSmall.canPitch());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canPitch());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canPitch());
		assertFalse(zigzagFloorPlaneSmallMirrored.canPitch());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canPitch());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canPitch());

		assertFalse(zigzagFloorPlaneMedium.canPitch());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canPitch());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canPitch());
		assertFalse(zigzagFloorPlaneMediumMirrored.canPitch());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canPitch());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canPitch());

		assertFalse(zigzagFloorPlaneLarge.canPitch());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canPitch());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canPitch());
		assertFalse(zigzagFloorPlaneLargeMirrored.canPitch());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canPitch());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canPitch());

		assertFalse(peaksFloorPlaneSmall.canPitch());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canPitch());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canPitch());
		assertFalse(peaksFloorPlaneSmallMirrored.canPitch());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canPitch());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canPitch());

		assertFalse(peaksFloorPlaneMedium.canPitch());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canPitch());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canPitch());
		assertFalse(peaksFloorPlaneMediumMirrored.canPitch());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canPitch());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canPitch());

		assertFalse(peaksFloorPlaneLarge.canPitch());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canPitch());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canPitch());
		assertFalse(peaksFloorPlaneLargeMirrored.canPitch());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canPitch());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canPitch());

		assertFalse(travelRotationSingleWallPlaneFilledArrow.canPitch());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canPitch());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canPitch());
		assertFalse(travelRotationSingleWallPlaneFilledArrowMirrored.canPitch());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canPitch());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canPitch());

		assertFalse(travelRotationDoubleWallPlaneFilledArrow.canPitch());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canPitch());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canPitch());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowMirrored.canPitch());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canPitch());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canPitch());

		assertFalse(travelRotationAlternatingWallPlaneFilledArrow.canPitch());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canPitch());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canPitch());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowMirrored.canPitch());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canPitch());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canPitch());

		assertFalse(travelRotationSingleFloorPlaneFilledArrow.canPitch());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canPitch());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canPitch());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowMirrored.canPitch());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canPitch());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canPitch());

		assertFalse(travelRotationDoubleFloorPlaneFilledArrow.canPitch());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canPitch());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canPitch());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowMirrored.canPitch());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canPitch());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canPitch());

		assertFalse(travelRotationAlternatingFloorPlaneFilledArrow.canPitch());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canPitch());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canPitch());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canPitch());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canPitch());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canPitch());

		assertFalse(travelShakingFloorPlane.canPitch());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canPitch());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canPitch());

	}

	@Override
	public void testPitch() {

	}

	@Override
	public void testCanRoll() {

		assertFalse(singleStraightMovementFloorPlaneSmall.canRoll());
		assertFalse(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canRoll());
		assertFalse(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canRoll());

		assertFalse(singleStraightMovementFloorPlaneMedium.canRoll());
		assertFalse(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canRoll());
		assertFalse(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canRoll());

		assertFalse(singleStraightMovementFloorPlaneLarge.canRoll());
		assertFalse(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canRoll());
		assertFalse(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canRoll());

		assertFalse(singleStraightMovementFloorPlaneLargest.canRoll());
		assertFalse(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canRoll());
		assertFalse(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canRoll());

		assertFalse(singleWristFlexFloorPlane.canRoll());
		assertFalse(singleWristFlexFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(singleWristFlexFloorPlaneSchemaArrowhead.canRoll());

		assertFalse(doubleWristFlexFloorPlane.canRoll());
		assertFalse(doubleWristFlexFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(doubleWristFlexFloorPlaneSchemaArrowhead.canRoll());

		assertFalse(tripleWristFlexFloorPlane.canRoll());
		assertFalse(tripleWristFlexFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(tripleWristFlexFloorPlaneSchemaArrowhead.canRoll());

		assertFalse(doubleAlternatingWristFlexFloorPlane.canRoll());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canRoll());
		assertFalse(doubleAlternatingWristFlexFloorPlaneMirrored.canRoll());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canRoll());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canRoll());

		assertFalse(tripleAlternatingWristFlexFloorPlane.canRoll());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canRoll());
		assertFalse(tripleAlternatingWristFlexFloorPlaneMirrored.canRoll());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canRoll());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canRoll());

		assertFalse(doubleStraightMovementFloorPlane.canRoll());
		assertFalse(doubleStraightMovementFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(doubleStraightMovementFloorPlaneSchemaArrowhead.canRoll());

		assertFalse(tripleStraightMovementFloorPlane.canRoll());
		assertFalse(tripleStraightMovementFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(tripleStraightMovementFloorPlaneSchemaArrowhead.canRoll());

		assertFalse(doubleAlternatingMovementFloorPlane.canRoll());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canRoll());
		assertFalse(doubleAlternatingMovementFloorPlaneMirrored.canRoll());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canRoll());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canRoll());

		assertFalse(tripleAlternatingMovementFloorPlane.canRoll());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canRoll());
		assertFalse(tripleAlternatingMovementFloorPlaneMirrored.canRoll());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canRoll());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canRoll());

		assertFalse(crossMovementFloorPlane.canRoll());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canRoll());
		assertFalse(crossMovementFloorPlaneMirrored.canRoll());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canRoll());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canRoll());

		assertFalse(bendFloorPlane.canRoll());
		assertFalse(bendFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(bendFloorPlaneSchemaArrowhead.canRoll());
		assertFalse(bendFloorPlaneMirrored.canRoll());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canRoll());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canRoll());

		assertFalse(cornerFloorPlaneSmall.canRoll());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canRoll());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canRoll());
		assertFalse(cornerFloorPlaneSmallMirrored.canRoll());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canRoll());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canRoll());

		assertFalse(cornerFloorPlaneMedium.canRoll());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canRoll());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canRoll());
		assertFalse(cornerFloorPlaneMediumMirrored.canRoll());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canRoll());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canRoll());

		assertFalse(cornerFloorPlaneLarge.canRoll());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canRoll());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canRoll());
		assertFalse(cornerFloorPlaneLargeMirrored.canRoll());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canRoll());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canRoll());

		assertFalse(checkFloorPlane.canRoll());
		assertFalse(checkFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(checkFloorPlaneSchemaArrowhead.canRoll());
		assertFalse(checkFloorPlaneMirrored.canRoll());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canRoll());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canRoll());

		assertFalse(boxFloorPlaneSmall.canRoll());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canRoll());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canRoll());
		assertFalse(boxFloorPlaneSmallMirrored.canRoll());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canRoll());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canRoll());

		assertFalse(boxFloorPlaneMedium.canRoll());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canRoll());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canRoll());
		assertFalse(boxFloorPlaneMediumMirrored.canRoll());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canRoll());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canRoll());

		assertFalse(boxFloorPlaneLarge.canRoll());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canRoll());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canRoll());
		assertFalse(boxFloorPlaneLargeMirrored.canRoll());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canRoll());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canRoll());

		assertFalse(zigzagFloorPlaneSmall.canRoll());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canRoll());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canRoll());
		assertFalse(zigzagFloorPlaneSmallMirrored.canRoll());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canRoll());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canRoll());

		assertFalse(zigzagFloorPlaneMedium.canRoll());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canRoll());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canRoll());
		assertFalse(zigzagFloorPlaneMediumMirrored.canRoll());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canRoll());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canRoll());

		assertFalse(zigzagFloorPlaneLarge.canRoll());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canRoll());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canRoll());
		assertFalse(zigzagFloorPlaneLargeMirrored.canRoll());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canRoll());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canRoll());

		assertFalse(peaksFloorPlaneSmall.canRoll());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canRoll());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canRoll());
		assertFalse(peaksFloorPlaneSmallMirrored.canRoll());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canRoll());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canRoll());

		assertFalse(peaksFloorPlaneMedium.canRoll());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canRoll());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canRoll());
		assertFalse(peaksFloorPlaneMediumMirrored.canRoll());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canRoll());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canRoll());

		assertFalse(peaksFloorPlaneLarge.canRoll());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canRoll());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canRoll());
		assertFalse(peaksFloorPlaneLargeMirrored.canRoll());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canRoll());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canRoll());

		assertFalse(travelRotationSingleWallPlaneFilledArrow.canRoll());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canRoll());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canRoll());
		assertFalse(travelRotationSingleWallPlaneFilledArrowMirrored.canRoll());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canRoll());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canRoll());

		assertFalse(travelRotationDoubleWallPlaneFilledArrow.canRoll());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canRoll());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canRoll());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowMirrored.canRoll());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canRoll());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canRoll());

		assertFalse(travelRotationAlternatingWallPlaneFilledArrow.canRoll());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canRoll());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canRoll());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowMirrored.canRoll());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canRoll());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canRoll());

		assertFalse(travelRotationSingleFloorPlaneFilledArrow.canRoll());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canRoll());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canRoll());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowMirrored.canRoll());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canRoll());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canRoll());

		assertFalse(travelRotationDoubleFloorPlaneFilledArrow.canRoll());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canRoll());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canRoll());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowMirrored.canRoll());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canRoll());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canRoll());

		assertFalse(travelRotationAlternatingFloorPlaneFilledArrow.canRoll());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canRoll());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canRoll());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canRoll());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canRoll());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canRoll());

		assertFalse(travelShakingFloorPlane.canRoll());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canRoll());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canRoll());

	}

	@Override
	public void testRoll() {

	}

	@Override
	public void testCanSwitchArrowHead() {

		assertTrue(singleStraightMovementFloorPlaneSmall.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canSwitchArrowHead());

		assertTrue(singleStraightMovementFloorPlaneMedium.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canSwitchArrowHead());

		assertTrue(singleStraightMovementFloorPlaneLarge.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canSwitchArrowHead());

		assertTrue(singleStraightMovementFloorPlaneLargest.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canSwitchArrowHead());
		assertTrue(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canSwitchArrowHead());

		assertTrue(singleWristFlexFloorPlane.canSwitchArrowHead());
		assertTrue(singleWristFlexFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(singleWristFlexFloorPlaneSchemaArrowhead.canSwitchArrowHead());

		assertTrue(doubleWristFlexFloorPlane.canSwitchArrowHead());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canSwitchArrowHead());

		assertTrue(tripleWristFlexFloorPlane.canSwitchArrowHead());
		assertTrue(tripleWristFlexFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(tripleWristFlexFloorPlaneSchemaArrowhead.canSwitchArrowHead());

		assertTrue(doubleAlternatingWristFlexFloorPlane.canSwitchArrowHead());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchArrowHead());
		assertTrue(doubleAlternatingWristFlexFloorPlaneMirrored.canSwitchArrowHead());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(tripleAlternatingWristFlexFloorPlane.canSwitchArrowHead());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchArrowHead());
		assertTrue(tripleAlternatingWristFlexFloorPlaneMirrored.canSwitchArrowHead());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(doubleStraightMovementFloorPlane.canSwitchArrowHead());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canSwitchArrowHead());

		assertTrue(tripleStraightMovementFloorPlane.canSwitchArrowHead());
		assertTrue(tripleStraightMovementFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(tripleStraightMovementFloorPlaneSchemaArrowhead.canSwitchArrowHead());

		assertTrue(doubleAlternatingMovementFloorPlane.canSwitchArrowHead());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchArrowHead());
		assertTrue(doubleAlternatingMovementFloorPlaneMirrored.canSwitchArrowHead());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(tripleAlternatingMovementFloorPlane.canSwitchArrowHead());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchArrowHead());
		assertTrue(tripleAlternatingMovementFloorPlaneMirrored.canSwitchArrowHead());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(crossMovementFloorPlane.canSwitchArrowHead());
		assertTrue(crossMovementFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(crossMovementFloorPlaneSchemaArrowhead.canSwitchArrowHead());
		assertTrue(crossMovementFloorPlaneMirrored.canSwitchArrowHead());
		assertTrue(crossMovementFloorPlaneEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(crossMovementFloorPlaneSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(bendFloorPlane.canSwitchArrowHead());
		assertTrue(bendFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(bendFloorPlaneSchemaArrowhead.canSwitchArrowHead());
		assertTrue(bendFloorPlaneMirrored.canSwitchArrowHead());
		assertTrue(bendFloorPlaneEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(bendFloorPlaneSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(cornerFloorPlaneSmall.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneSmallEmptyArrowhead.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneSmallSchemaArrowhead.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneSmallMirrored.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneSmallEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneSmallSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(cornerFloorPlaneMedium.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneMediumEmptyArrowhead.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneMediumSchemaArrowhead.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneMediumMirrored.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneMediumEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneMediumSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(cornerFloorPlaneLarge.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneLargeEmptyArrowhead.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneLargeSchemaArrowhead.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneLargeMirrored.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneLargeEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(cornerFloorPlaneLargeSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(checkFloorPlane.canSwitchArrowHead());
		assertTrue(checkFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(checkFloorPlaneSchemaArrowhead.canSwitchArrowHead());
		assertTrue(checkFloorPlaneMirrored.canSwitchArrowHead());
		assertTrue(checkFloorPlaneEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(checkFloorPlaneSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(boxFloorPlaneSmall.canSwitchArrowHead());
		assertTrue(boxFloorPlaneSmallEmptyArrowhead.canSwitchArrowHead());
		assertTrue(boxFloorPlaneSmallSchemaArrowhead.canSwitchArrowHead());
		assertTrue(boxFloorPlaneSmallMirrored.canSwitchArrowHead());
		assertTrue(boxFloorPlaneSmallEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(boxFloorPlaneSmallSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(boxFloorPlaneMedium.canSwitchArrowHead());
		assertTrue(boxFloorPlaneMediumEmptyArrowhead.canSwitchArrowHead());
		assertTrue(boxFloorPlaneMediumSchemaArrowhead.canSwitchArrowHead());
		assertTrue(boxFloorPlaneMediumMirrored.canSwitchArrowHead());
		assertTrue(boxFloorPlaneMediumEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(boxFloorPlaneMediumSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(boxFloorPlaneLarge.canSwitchArrowHead());
		assertTrue(boxFloorPlaneLargeEmptyArrowhead.canSwitchArrowHead());
		assertTrue(boxFloorPlaneLargeSchemaArrowhead.canSwitchArrowHead());
		assertTrue(boxFloorPlaneLargeMirrored.canSwitchArrowHead());
		assertTrue(boxFloorPlaneLargeEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(boxFloorPlaneLargeSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(zigzagFloorPlaneSmall.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowhead.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowhead.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneSmallMirrored.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(zigzagFloorPlaneMedium.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowhead.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowhead.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneMediumMirrored.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(zigzagFloorPlaneLarge.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowhead.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowhead.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneLargeMirrored.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(peaksFloorPlaneSmall.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneSmallEmptyArrowhead.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneSmallSchemaArrowhead.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneSmallMirrored.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneSmallEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneSmallSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(peaksFloorPlaneMedium.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneMediumEmptyArrowhead.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneMediumSchemaArrowhead.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneMediumMirrored.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneMediumEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneMediumSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(peaksFloorPlaneLarge.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneLargeEmptyArrowhead.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneLargeSchemaArrowhead.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneLargeMirrored.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneLargeEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(peaksFloorPlaneLargeSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(travelRotationSingleWallPlaneFilledArrow.canSwitchArrowHead());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationSingleWallPlaneFilledArrowMirrored.canSwitchArrowHead());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(travelRotationDoubleWallPlaneFilledArrow.canSwitchArrowHead());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowMirrored.canSwitchArrowHead());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(travelRotationAlternatingWallPlaneFilledArrow.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowMirrored.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(travelRotationSingleFloorPlaneFilledArrow.canSwitchArrowHead());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowMirrored.canSwitchArrowHead());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(travelRotationDoubleFloorPlaneFilledArrow.canSwitchArrowHead());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowMirrored.canSwitchArrowHead());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(travelRotationAlternatingFloorPlaneFilledArrow.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchArrowHead());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchArrowHead());

		assertTrue(travelShakingFloorPlane.canSwitchArrowHead());
		assertTrue(travelShakingFloorPlaneEmptyArrowhead.canSwitchArrowHead());
		assertTrue(travelShakingFloorPlaneSchemaArrowhead.canSwitchArrowHead());

	}

	@Override
	public void testSwitchArrowHead() {

		singleStraightMovementFloorPlaneSmall.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmall.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-01-01"),
				singleStraightMovementFloorPlaneSmall.getSymbol());

		singleStraightMovementFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneSmall.getSymbol(),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-02-01"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneSmall.getSymbol(),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-01-03-01"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMedium.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMedium.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-01-01"),
				singleStraightMovementFloorPlaneMedium.getSymbol());

		singleStraightMovementFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneMedium.getSymbol(),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-02-01"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneMedium.getSymbol(),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-02-03-01"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLarge.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLarge.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-01-01"),
				singleStraightMovementFloorPlaneLarge.getSymbol());

		singleStraightMovementFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLarge.getSymbol(),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-02-01"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLarge.getSymbol(),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-03-03-01"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargest.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargest.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-01-01"),
				singleStraightMovementFloorPlaneLargest.getSymbol());

		singleStraightMovementFloorPlaneLargestEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargest.getSymbol(),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-02-01"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargestSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargest.getSymbol(),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.switchArrowHead();
		assertEquals(singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol(),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-04-03-01"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());

		singleWristFlexFloorPlane.switchArrowHead();
		assertEquals(singleWristFlexFloorPlaneEmptyArrowhead.getSymbol(), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.switchArrowHead();
		assertEquals(singleWristFlexFloorPlaneSchemaArrowhead.getSymbol(), singleWristFlexFloorPlane.getSymbol());
		singleWristFlexFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-01-01"), singleWristFlexFloorPlane.getSymbol());

		singleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(singleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(singleWristFlexFloorPlane.getSymbol(), singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		singleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-02-01"),
				singleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		singleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(singleWristFlexFloorPlane.getSymbol(), singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(singleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		singleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-001-05-03-01"),
				singleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleWristFlexFloorPlane.switchArrowHead();
		assertEquals(doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol(), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.switchArrowHead();
		assertEquals(doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol(), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-01-01"), doubleWristFlexFloorPlane.getSymbol());

		doubleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleWristFlexFloorPlane.getSymbol(), doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-02-01"),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleWristFlexFloorPlane.getSymbol(), doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-002-02-03-01"),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleWristFlexFloorPlane.switchArrowHead();
		assertEquals(tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol(), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.switchArrowHead();
		assertEquals(tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol(), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-01-01"), tripleWristFlexFloorPlane.getSymbol());

		tripleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleWristFlexFloorPlane.getSymbol(), tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-02-01"),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleWristFlexFloorPlane.getSymbol(), tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-005-02-03-01"),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlane.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-01"),
				doubleAlternatingWristFlexFloorPlane.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlane.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-01"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlane.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-01"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingWristFlexFloorPlaneMirrored.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-01-09"),
				doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-02-09"),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-02-03-09"),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlane.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-01"),
				tripleAlternatingWristFlexFloorPlane.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlane.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-01"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlane.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-01"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingWristFlexFloorPlaneMirrored.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-01-09"),
				tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-02-09"),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-02-03-09"),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		doubleStraightMovementFloorPlane.switchArrowHead();
		assertEquals(doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.switchArrowHead();
		assertEquals(doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-01"), doubleStraightMovementFloorPlane.getSymbol());

		doubleStraightMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleStraightMovementFloorPlane.getSymbol(),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-01"),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleStraightMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleStraightMovementFloorPlane.getSymbol(),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-01"),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleStraightMovementFloorPlane.switchArrowHead();
		assertEquals(tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.switchArrowHead();
		assertEquals(tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-01-01"), tripleStraightMovementFloorPlane.getSymbol());

		tripleStraightMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleStraightMovementFloorPlane.getSymbol(),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-02-01"),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleStraightMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleStraightMovementFloorPlane.getSymbol(),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-005-01-03-01"),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlane.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-01"), doubleAlternatingMovementFloorPlane.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlane.getSymbol(),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-01"),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlane.getSymbol(),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-01"),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		doubleAlternatingMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-01-09"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-02-09"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-003-01-03-09"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlane.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-01"), tripleAlternatingMovementFloorPlane.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlane.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-01"),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlane.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-01"),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleAlternatingMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-01-09"),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-02-09"),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-006-01-03-09"),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		crossMovementFloorPlane.switchArrowHead();
		assertEquals(crossMovementFloorPlaneEmptyArrowhead.getSymbol(), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.switchArrowHead();
		assertEquals(crossMovementFloorPlaneSchemaArrowhead.getSymbol(), crossMovementFloorPlane.getSymbol());
		crossMovementFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-01"), crossMovementFloorPlane.getSymbol());

		crossMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(crossMovementFloorPlaneSchemaArrowhead.getSymbol(),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(crossMovementFloorPlane.getSymbol(), crossMovementFloorPlaneEmptyArrowhead.getSymbol());
		crossMovementFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-01"),
				crossMovementFloorPlaneEmptyArrowhead.getSymbol());

		crossMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(crossMovementFloorPlane.getSymbol(), crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(crossMovementFloorPlaneEmptyArrowhead.getSymbol(),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());
		crossMovementFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-01"),
				crossMovementFloorPlaneSchemaArrowhead.getSymbol());

		crossMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				crossMovementFloorPlaneMirrored.getSymbol());
		crossMovementFloorPlaneMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-01-09"), crossMovementFloorPlaneMirrored.getSymbol());

		crossMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(crossMovementFloorPlaneMirrored.getSymbol(),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-02-09"),
				crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());

		crossMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(crossMovementFloorPlaneMirrored.getSymbol(),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(crossMovementFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());
		crossMovementFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-004-01-03-09"),
				crossMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		bendFloorPlane.switchArrowHead();
		assertEquals(bendFloorPlaneEmptyArrowhead.getSymbol(), bendFloorPlane.getSymbol());
		bendFloorPlane.switchArrowHead();
		assertEquals(bendFloorPlaneSchemaArrowhead.getSymbol(), bendFloorPlane.getSymbol());
		bendFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-01"), bendFloorPlane.getSymbol());

		bendFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(bendFloorPlaneSchemaArrowhead.getSymbol(), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(bendFloorPlane.getSymbol(), bendFloorPlaneEmptyArrowhead.getSymbol());
		bendFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-01"), bendFloorPlaneEmptyArrowhead.getSymbol());

		bendFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(bendFloorPlane.getSymbol(), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(bendFloorPlaneEmptyArrowhead.getSymbol(), bendFloorPlaneSchemaArrowhead.getSymbol());
		bendFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-01"), bendFloorPlaneSchemaArrowhead.getSymbol());

		bendFloorPlaneMirrored.switchArrowHead();
		assertEquals(bendFloorPlaneEmptyArrowheadMirrored.getSymbol(), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.switchArrowHead();
		assertEquals(bendFloorPlaneSchemaArrowheadMirrored.getSymbol(), bendFloorPlaneMirrored.getSymbol());
		bendFloorPlaneMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-01-09"), bendFloorPlaneMirrored.getSymbol());

		bendFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(bendFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(bendFloorPlaneMirrored.getSymbol(), bendFloorPlaneEmptyArrowheadMirrored.getSymbol());
		bendFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-02-09"),
				bendFloorPlaneEmptyArrowheadMirrored.getSymbol());

		bendFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(bendFloorPlaneMirrored.getSymbol(), bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(bendFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());
		bendFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-007-01-03-09"),
				bendFloorPlaneSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmall.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallEmptyArrowhead.getSymbol(), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallSchemaArrowhead.getSymbol(), cornerFloorPlaneSmall.getSymbol());
		cornerFloorPlaneSmall.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-01"), cornerFloorPlaneSmall.getSymbol());

		cornerFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallSchemaArrowhead.getSymbol(), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneSmall.getSymbol(), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());
		cornerFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-01"), cornerFloorPlaneSmallEmptyArrowhead.getSymbol());

		cornerFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneSmall.getSymbol(), cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallEmptyArrowhead.getSymbol(), cornerFloorPlaneSmallSchemaArrowhead.getSymbol());
		cornerFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-01"),
				cornerFloorPlaneSmallSchemaArrowhead.getSymbol());

		cornerFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneSmallMirrored.getSymbol());
		cornerFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-01-09"), cornerFloorPlaneSmallMirrored.getSymbol());

		cornerFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallMirrored.getSymbol(),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-02-09"),
				cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallMirrored.getSymbol(),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-01-03-09"),
				cornerFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneMedium.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumEmptyArrowhead.getSymbol(), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumSchemaArrowhead.getSymbol(), cornerFloorPlaneMedium.getSymbol());
		cornerFloorPlaneMedium.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-01"), cornerFloorPlaneMedium.getSymbol());

		cornerFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumSchemaArrowhead.getSymbol(),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneMedium.getSymbol(), cornerFloorPlaneMediumEmptyArrowhead.getSymbol());
		cornerFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-01"),
				cornerFloorPlaneMediumEmptyArrowhead.getSymbol());

		cornerFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneMedium.getSymbol(), cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumEmptyArrowhead.getSymbol(),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());
		cornerFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-01"),
				cornerFloorPlaneMediumSchemaArrowhead.getSymbol());

		cornerFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneMediumMirrored.getSymbol());
		cornerFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-01-09"), cornerFloorPlaneMediumMirrored.getSymbol());

		cornerFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumMirrored.getSymbol(),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-02-09"),
				cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumMirrored.getSymbol(),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-02-03-09"),
				cornerFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		cornerFloorPlaneLarge.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeEmptyArrowhead.getSymbol(), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeSchemaArrowhead.getSymbol(), cornerFloorPlaneLarge.getSymbol());
		cornerFloorPlaneLarge.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-01"), cornerFloorPlaneLarge.getSymbol());

		cornerFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeSchemaArrowhead.getSymbol(), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneLarge.getSymbol(), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());
		cornerFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-01"), cornerFloorPlaneLargeEmptyArrowhead.getSymbol());

		cornerFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneLarge.getSymbol(), cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeEmptyArrowhead.getSymbol(), cornerFloorPlaneLargeSchemaArrowhead.getSymbol());
		cornerFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-01"),
				cornerFloorPlaneLargeSchemaArrowhead.getSymbol());

		cornerFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneLargeMirrored.getSymbol());
		cornerFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-01-09"), cornerFloorPlaneLargeMirrored.getSymbol());

		cornerFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeMirrored.getSymbol(),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-02-09"),
				cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		cornerFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeMirrored.getSymbol(),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(cornerFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		cornerFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-008-03-03-09"),
				cornerFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		checkFloorPlane.switchArrowHead();
		assertEquals(checkFloorPlaneEmptyArrowhead.getSymbol(), checkFloorPlane.getSymbol());
		checkFloorPlane.switchArrowHead();
		assertEquals(checkFloorPlaneSchemaArrowhead.getSymbol(), checkFloorPlane.getSymbol());
		checkFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-01"), checkFloorPlane.getSymbol());

		checkFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(checkFloorPlaneSchemaArrowhead.getSymbol(), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(checkFloorPlane.getSymbol(), checkFloorPlaneEmptyArrowhead.getSymbol());
		checkFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-01"), checkFloorPlaneEmptyArrowhead.getSymbol());

		checkFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(checkFloorPlane.getSymbol(), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(checkFloorPlaneEmptyArrowhead.getSymbol(), checkFloorPlaneSchemaArrowhead.getSymbol());
		checkFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-01"), checkFloorPlaneSchemaArrowhead.getSymbol());

		checkFloorPlaneMirrored.switchArrowHead();
		assertEquals(checkFloorPlaneEmptyArrowheadMirrored.getSymbol(), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.switchArrowHead();
		assertEquals(checkFloorPlaneSchemaArrowheadMirrored.getSymbol(), checkFloorPlaneMirrored.getSymbol());
		checkFloorPlaneMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-01-09"), checkFloorPlaneMirrored.getSymbol());

		checkFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(checkFloorPlaneSchemaArrowheadMirrored.getSymbol(),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(checkFloorPlaneMirrored.getSymbol(), checkFloorPlaneEmptyArrowheadMirrored.getSymbol());
		checkFloorPlaneEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-02-09"),
				checkFloorPlaneEmptyArrowheadMirrored.getSymbol());

		checkFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(checkFloorPlaneMirrored.getSymbol(), checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(checkFloorPlaneEmptyArrowheadMirrored.getSymbol(),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());
		checkFloorPlaneSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-009-01-03-09"),
				checkFloorPlaneSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneSmall.switchArrowHead();
		assertEquals(boxFloorPlaneSmallEmptyArrowhead.getSymbol(), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.switchArrowHead();
		assertEquals(boxFloorPlaneSmallSchemaArrowhead.getSymbol(), boxFloorPlaneSmall.getSymbol());
		boxFloorPlaneSmall.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-01"), boxFloorPlaneSmall.getSymbol());

		boxFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneSmallSchemaArrowhead.getSymbol(), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneSmall.getSymbol(), boxFloorPlaneSmallEmptyArrowhead.getSymbol());
		boxFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-01"), boxFloorPlaneSmallEmptyArrowhead.getSymbol());

		boxFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneSmall.getSymbol(), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneSmallEmptyArrowhead.getSymbol(), boxFloorPlaneSmallSchemaArrowhead.getSymbol());
		boxFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-01"), boxFloorPlaneSmallSchemaArrowhead.getSymbol());

		boxFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(), boxFloorPlaneSmallMirrored.getSymbol());
		boxFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-01-09"), boxFloorPlaneSmallMirrored.getSymbol());

		boxFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneSmallMirrored.getSymbol(), boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-02-09"),
				boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneSmallMirrored.getSymbol(), boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-01-03-09"),
				boxFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneMedium.switchArrowHead();
		assertEquals(boxFloorPlaneMediumEmptyArrowhead.getSymbol(), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.switchArrowHead();
		assertEquals(boxFloorPlaneMediumSchemaArrowhead.getSymbol(), boxFloorPlaneMedium.getSymbol());
		boxFloorPlaneMedium.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-01"), boxFloorPlaneMedium.getSymbol());

		boxFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneMediumSchemaArrowhead.getSymbol(), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneMedium.getSymbol(), boxFloorPlaneMediumEmptyArrowhead.getSymbol());
		boxFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-01"), boxFloorPlaneMediumEmptyArrowhead.getSymbol());

		boxFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneMedium.getSymbol(), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneMediumEmptyArrowhead.getSymbol(), boxFloorPlaneMediumSchemaArrowhead.getSymbol());
		boxFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-01"), boxFloorPlaneMediumSchemaArrowhead.getSymbol());

		boxFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(), boxFloorPlaneMediumMirrored.getSymbol());
		boxFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-01-09"), boxFloorPlaneMediumMirrored.getSymbol());

		boxFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneMediumMirrored.getSymbol(), boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-02-09"),
				boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneMediumMirrored.getSymbol(), boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-02-03-09"),
				boxFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		boxFloorPlaneLarge.switchArrowHead();
		assertEquals(boxFloorPlaneLargeEmptyArrowhead.getSymbol(), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.switchArrowHead();
		assertEquals(boxFloorPlaneLargeSchemaArrowhead.getSymbol(), boxFloorPlaneLarge.getSymbol());
		boxFloorPlaneLarge.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-01"), boxFloorPlaneLarge.getSymbol());

		boxFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneLargeSchemaArrowhead.getSymbol(), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneLarge.getSymbol(), boxFloorPlaneLargeEmptyArrowhead.getSymbol());
		boxFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-01"), boxFloorPlaneLargeEmptyArrowhead.getSymbol());

		boxFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneLarge.getSymbol(), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(boxFloorPlaneLargeEmptyArrowhead.getSymbol(), boxFloorPlaneLargeSchemaArrowhead.getSymbol());
		boxFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-01"), boxFloorPlaneLargeSchemaArrowhead.getSymbol());

		boxFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(), boxFloorPlaneLargeMirrored.getSymbol());
		boxFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-01-09"), boxFloorPlaneLargeMirrored.getSymbol());

		boxFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneLargeMirrored.getSymbol(), boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-02-09"),
				boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		boxFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneLargeMirrored.getSymbol(), boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(boxFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		boxFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-010-03-03-09"),
				boxFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmall.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallEmptyArrowhead.getSymbol(), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallSchemaArrowhead.getSymbol(), zigzagFloorPlaneSmall.getSymbol());
		zigzagFloorPlaneSmall.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-01"), zigzagFloorPlaneSmall.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallSchemaArrowhead.getSymbol(), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmall.getSymbol(), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-01"), zigzagFloorPlaneSmallEmptyArrowhead.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmall.getSymbol(), zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallEmptyArrowhead.getSymbol(), zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-01"),
				zigzagFloorPlaneSmallSchemaArrowhead.getSymbol());

		zigzagFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneSmallMirrored.getSymbol());
		zigzagFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-01-09"), zigzagFloorPlaneSmallMirrored.getSymbol());

		zigzagFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallMirrored.getSymbol(),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-02-09"),
				zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallMirrored.getSymbol(),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-01-03-09"),
				zigzagFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMedium.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumEmptyArrowhead.getSymbol(), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumSchemaArrowhead.getSymbol(), zigzagFloorPlaneMedium.getSymbol());
		zigzagFloorPlaneMedium.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-01"), zigzagFloorPlaneMedium.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumSchemaArrowhead.getSymbol(),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneMedium.getSymbol(), zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-01"),
				zigzagFloorPlaneMediumEmptyArrowhead.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneMedium.getSymbol(), zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumEmptyArrowhead.getSymbol(),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-01"),
				zigzagFloorPlaneMediumSchemaArrowhead.getSymbol());

		zigzagFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneMediumMirrored.getSymbol());
		zigzagFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-01-09"), zigzagFloorPlaneMediumMirrored.getSymbol());

		zigzagFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumMirrored.getSymbol(),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-02-09"),
				zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumMirrored.getSymbol(),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-02-03-09"),
				zigzagFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLarge.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeEmptyArrowhead.getSymbol(), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeSchemaArrowhead.getSymbol(), zigzagFloorPlaneLarge.getSymbol());
		zigzagFloorPlaneLarge.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-01"), zigzagFloorPlaneLarge.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeSchemaArrowhead.getSymbol(), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneLarge.getSymbol(), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-01"), zigzagFloorPlaneLargeEmptyArrowhead.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneLarge.getSymbol(), zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeEmptyArrowhead.getSymbol(), zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-01"),
				zigzagFloorPlaneLargeSchemaArrowhead.getSymbol());

		zigzagFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneLargeMirrored.getSymbol());
		zigzagFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-01-09"), zigzagFloorPlaneLargeMirrored.getSymbol());

		zigzagFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeMirrored.getSymbol(),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-02-09"),
				zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		zigzagFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeMirrored.getSymbol(),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(zigzagFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		zigzagFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-011-03-03-09"),
				zigzagFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmall.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallEmptyArrowhead.getSymbol(), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallSchemaArrowhead.getSymbol(), peaksFloorPlaneSmall.getSymbol());
		peaksFloorPlaneSmall.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-01"), peaksFloorPlaneSmall.getSymbol());

		peaksFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallSchemaArrowhead.getSymbol(), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneSmall.getSymbol(), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());
		peaksFloorPlaneSmallEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-01"), peaksFloorPlaneSmallEmptyArrowhead.getSymbol());

		peaksFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneSmall.getSymbol(), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallEmptyArrowhead.getSymbol(), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());
		peaksFloorPlaneSmallSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-01"), peaksFloorPlaneSmallSchemaArrowhead.getSymbol());

		peaksFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(), peaksFloorPlaneSmallMirrored.getSymbol());
		peaksFloorPlaneSmallMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-01-09"), peaksFloorPlaneSmallMirrored.getSymbol());

		peaksFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol(),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallMirrored.getSymbol(), peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-02-09"),
				peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallMirrored.getSymbol(), peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneSmallEmptyArrowheadMirrored.getSymbol(),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneSmallSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-01-03-09"),
				peaksFloorPlaneSmallSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneMedium.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumEmptyArrowhead.getSymbol(), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumSchemaArrowhead.getSymbol(), peaksFloorPlaneMedium.getSymbol());
		peaksFloorPlaneMedium.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-01"), peaksFloorPlaneMedium.getSymbol());

		peaksFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumSchemaArrowhead.getSymbol(), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneMedium.getSymbol(), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());
		peaksFloorPlaneMediumEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-01"), peaksFloorPlaneMediumEmptyArrowhead.getSymbol());

		peaksFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneMedium.getSymbol(), peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumEmptyArrowhead.getSymbol(), peaksFloorPlaneMediumSchemaArrowhead.getSymbol());
		peaksFloorPlaneMediumSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-01"),
				peaksFloorPlaneMediumSchemaArrowhead.getSymbol());

		peaksFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				peaksFloorPlaneMediumMirrored.getSymbol());
		peaksFloorPlaneMediumMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-01-09"), peaksFloorPlaneMediumMirrored.getSymbol());

		peaksFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol(),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumMirrored.getSymbol(),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-02-09"),
				peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumMirrored.getSymbol(),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneMediumEmptyArrowheadMirrored.getSymbol(),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneMediumSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-02-03-09"),
				peaksFloorPlaneMediumSchemaArrowheadMirrored.getSymbol());

		peaksFloorPlaneLarge.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeEmptyArrowhead.getSymbol(), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeSchemaArrowhead.getSymbol(), peaksFloorPlaneLarge.getSymbol());
		peaksFloorPlaneLarge.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-01"), peaksFloorPlaneLarge.getSymbol());

		peaksFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeSchemaArrowhead.getSymbol(), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneLarge.getSymbol(), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());
		peaksFloorPlaneLargeEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-01"), peaksFloorPlaneLargeEmptyArrowhead.getSymbol());

		peaksFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneLarge.getSymbol(), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeEmptyArrowhead.getSymbol(), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());
		peaksFloorPlaneLargeSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-01"), peaksFloorPlaneLargeSchemaArrowhead.getSymbol());

		peaksFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(), peaksFloorPlaneLargeMirrored.getSymbol());
		peaksFloorPlaneLargeMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-01-09"), peaksFloorPlaneLargeMirrored.getSymbol());

		peaksFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol(),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeMirrored.getSymbol(), peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-02-09"),
				peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol());

		peaksFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeMirrored.getSymbol(), peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(peaksFloorPlaneLargeEmptyArrowheadMirrored.getSymbol(),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());
		peaksFloorPlaneLargeSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-012-03-03-09"),
				peaksFloorPlaneLargeSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-01"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrow.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-01"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrow.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-01"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-09"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-09"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-09"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-01"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrow.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-01"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrow.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-01"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-09"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-09"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-09"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-01"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-01"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-01"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-09"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-09"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-09"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-01"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrow.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-01"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrow.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-01"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-09"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-09"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-09"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-01"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrow.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-01"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrow.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-01"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-09"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-09"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-09"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-01"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-01"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-01"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-09"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-09"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-09"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelShakingFloorPlane.switchArrowHead();
		assertEquals(travelShakingFloorPlaneEmptyArrowhead.getSymbol(), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.switchArrowHead();
		assertEquals(travelShakingFloorPlaneSchemaArrowhead.getSymbol(), travelShakingFloorPlane.getSymbol());
		travelShakingFloorPlane.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-01-01"), travelShakingFloorPlane.getSymbol());

		travelShakingFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(travelShakingFloorPlaneSchemaArrowhead.getSymbol(),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(travelShakingFloorPlane.getSymbol(), travelShakingFloorPlaneEmptyArrowhead.getSymbol());
		travelShakingFloorPlaneEmptyArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-02-01"),
				travelShakingFloorPlaneEmptyArrowhead.getSymbol());

		travelShakingFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(travelShakingFloorPlane.getSymbol(), travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(travelShakingFloorPlaneEmptyArrowhead.getSymbol(),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());
		travelShakingFloorPlaneSchemaArrowhead.switchArrowHead();
		assertEquals(symbolFactory.createSymbol("02-05-019-01-03-01"),
				travelShakingFloorPlaneSchemaArrowhead.getSymbol());

	}

	@Override
	public void testCanSwitchToNormalArrows() {

		assertFalse(singleStraightMovementFloorPlaneSmall.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canSwitchToNormalArrows());

		assertFalse(singleStraightMovementFloorPlaneMedium.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canSwitchToNormalArrows());

		assertFalse(singleStraightMovementFloorPlaneLarge.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canSwitchToNormalArrows());

		assertFalse(singleStraightMovementFloorPlaneLargest.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canSwitchToNormalArrows());

		assertFalse(singleWristFlexFloorPlane.canSwitchToNormalArrows());
		assertFalse(singleWristFlexFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(singleWristFlexFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());

		assertFalse(doubleWristFlexFloorPlane.canSwitchToNormalArrows());
		assertFalse(doubleWristFlexFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(doubleWristFlexFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());

		assertFalse(tripleWristFlexFloorPlane.canSwitchToNormalArrows());
		assertFalse(tripleWristFlexFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(tripleWristFlexFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());

		assertTrue(doubleAlternatingWristFlexFloorPlane.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingWristFlexFloorPlaneMirrored.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertTrue(tripleAlternatingWristFlexFloorPlane.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingWristFlexFloorPlaneMirrored.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(doubleStraightMovementFloorPlane.canSwitchToNormalArrows());
		assertFalse(doubleStraightMovementFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(doubleStraightMovementFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());

		assertFalse(tripleStraightMovementFloorPlane.canSwitchToNormalArrows());
		assertFalse(tripleStraightMovementFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(tripleStraightMovementFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());

		assertTrue(doubleAlternatingMovementFloorPlane.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingMovementFloorPlaneMirrored.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertTrue(tripleAlternatingMovementFloorPlane.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingMovementFloorPlaneMirrored.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(crossMovementFloorPlane.canSwitchToNormalArrows());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(crossMovementFloorPlaneMirrored.canSwitchToNormalArrows());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(bendFloorPlane.canSwitchToNormalArrows());
		assertFalse(bendFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(bendFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(bendFloorPlaneMirrored.canSwitchToNormalArrows());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(cornerFloorPlaneSmall.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneSmallMirrored.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(cornerFloorPlaneMedium.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneMediumMirrored.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(cornerFloorPlaneLarge.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneLargeMirrored.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(checkFloorPlane.canSwitchToNormalArrows());
		assertFalse(checkFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(checkFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(checkFloorPlaneMirrored.canSwitchToNormalArrows());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(boxFloorPlaneSmall.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneSmallMirrored.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(boxFloorPlaneMedium.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneMediumMirrored.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(boxFloorPlaneLarge.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneLargeMirrored.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(zigzagFloorPlaneSmall.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneSmallMirrored.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(zigzagFloorPlaneMedium.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneMediumMirrored.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(zigzagFloorPlaneLarge.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneLargeMirrored.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(peaksFloorPlaneSmall.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneSmallMirrored.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(peaksFloorPlaneMedium.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneMediumMirrored.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(peaksFloorPlaneLarge.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneLargeMirrored.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(travelRotationSingleWallPlaneFilledArrow.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(travelRotationDoubleWallPlaneFilledArrow.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertTrue(travelRotationAlternatingWallPlaneFilledArrow.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowMirrored.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(travelRotationSingleFloorPlaneFilledArrow.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(travelRotationDoubleFloorPlaneFilledArrow.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertTrue(travelRotationAlternatingFloorPlaneFilledArrow.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToNormalArrows());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToNormalArrows());

		assertFalse(travelShakingFloorPlane.canSwitchToNormalArrows());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canSwitchToNormalArrows());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canSwitchToNormalArrows());

	}

	@Override
	public void testSwitchToNormalArrows() {

		doubleAlternatingWristFlexFloorPlane.switchToNormalArrows();
		assertEquals(doubleWristFlexFloorPlane.getSymbol(), doubleAlternatingWristFlexFloorPlane.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchToNormalArrows();
		assertEquals(doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchToNormalArrows();
		assertEquals(doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingWristFlexFloorPlaneMirrored.switchToNormalArrows();
		assertEquals(doubleWristFlexFloorPlane.getSymbol(), doubleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchToNormalArrows();
		assertEquals(doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchToNormalArrows();
		assertEquals(doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingWristFlexFloorPlane.switchToNormalArrows();
		assertEquals(tripleWristFlexFloorPlane.getSymbol(), tripleAlternatingWristFlexFloorPlane.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.switchToNormalArrows();
		assertEquals(tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.switchToNormalArrows();
		assertEquals(tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingWristFlexFloorPlaneMirrored.switchToNormalArrows();
		assertEquals(tripleWristFlexFloorPlane.getSymbol(), tripleAlternatingWristFlexFloorPlaneMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.switchToNormalArrows();
		assertEquals(tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.switchToNormalArrows();
		assertEquals(tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.getSymbol());

		doubleAlternatingMovementFloorPlane.switchToNormalArrows();
		assertEquals(doubleStraightMovementFloorPlane.getSymbol(), doubleAlternatingMovementFloorPlane.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowhead.switchToNormalArrows();
		assertEquals(doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowhead.switchToNormalArrows();
		assertEquals(doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		doubleAlternatingMovementFloorPlaneMirrored.switchToNormalArrows();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-01-05"),
				doubleAlternatingMovementFloorPlaneMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchToNormalArrows();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-02-05"),
				doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchToNormalArrows();
		assertEquals(symbolFactory.createSymbol("02-05-002-01-03-05"),
				doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		tripleAlternatingMovementFloorPlane.switchToNormalArrows();
		assertEquals(tripleStraightMovementFloorPlane.getSymbol(), tripleAlternatingMovementFloorPlane.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowhead.switchToNormalArrows();
		assertEquals(tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowhead.switchToNormalArrows();
		assertEquals(tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol());
		tripleAlternatingMovementFloorPlaneMirrored.switchToNormalArrows();
		assertEquals(tripleStraightMovementFloorPlane.getSymbol(),
				tripleAlternatingMovementFloorPlaneMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.switchToNormalArrows();
		assertEquals(tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.getSymbol());
		tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.switchToNormalArrows();
		assertEquals(tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrow.switchToNormalArrows();
		assertEquals(travelRotationDoubleWallPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.switchToNormalArrows();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.switchToNormalArrows();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.switchToNormalArrows();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.switchToNormalArrows();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.switchToNormalArrows();
		assertEquals(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrow.switchToNormalArrows();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrow.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.switchToNormalArrows();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.switchToNormalArrows();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.switchToNormalArrows();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.switchToNormalArrows();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.switchToNormalArrows();
		assertEquals(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
	}

	@Override
	public void testCanSwitchToAlternatingArrows() {

		assertFalse(singleStraightMovementFloorPlaneSmall.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canSwitchToAlternatingArrows());

		assertFalse(singleStraightMovementFloorPlaneMedium.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canSwitchToAlternatingArrows());

		assertFalse(singleStraightMovementFloorPlaneLarge.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canSwitchToAlternatingArrows());

		assertFalse(singleStraightMovementFloorPlaneLargest.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canSwitchToAlternatingArrows());

		assertFalse(singleWristFlexFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(singleWristFlexFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(singleWristFlexFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());

		assertTrue(doubleWristFlexFloorPlane.canSwitchToAlternatingArrows());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());

		assertTrue(tripleWristFlexFloorPlane.canSwitchToAlternatingArrows());
		assertTrue(tripleWristFlexFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertTrue(tripleWristFlexFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());

		assertFalse(doubleAlternatingWristFlexFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingWristFlexFloorPlaneMirrored.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(tripleAlternatingWristFlexFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingWristFlexFloorPlaneMirrored.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertTrue(doubleStraightMovementFloorPlane.canSwitchToAlternatingArrows());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());

		assertTrue(tripleStraightMovementFloorPlane.canSwitchToAlternatingArrows());
		assertTrue(tripleStraightMovementFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertTrue(tripleStraightMovementFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());

		assertFalse(doubleAlternatingMovementFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingMovementFloorPlaneMirrored.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(tripleAlternatingMovementFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingMovementFloorPlaneMirrored.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(crossMovementFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(crossMovementFloorPlaneMirrored.canSwitchToAlternatingArrows());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(bendFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(bendFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(bendFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(bendFloorPlaneMirrored.canSwitchToAlternatingArrows());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(cornerFloorPlaneSmall.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneSmallMirrored.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(cornerFloorPlaneMedium.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneMediumMirrored.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(cornerFloorPlaneLarge.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneLargeMirrored.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(checkFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(checkFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(checkFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(checkFloorPlaneMirrored.canSwitchToAlternatingArrows());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(boxFloorPlaneSmall.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneSmallMirrored.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(boxFloorPlaneMedium.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneMediumMirrored.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(boxFloorPlaneLarge.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneLargeMirrored.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(zigzagFloorPlaneSmall.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneSmallMirrored.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(zigzagFloorPlaneMedium.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneMediumMirrored.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(zigzagFloorPlaneLarge.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneLargeMirrored.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(peaksFloorPlaneSmall.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneSmallMirrored.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(peaksFloorPlaneMedium.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneMediumMirrored.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(peaksFloorPlaneLarge.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneLargeMirrored.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(travelRotationSingleWallPlaneFilledArrow.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowMirrored.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertTrue(travelRotationDoubleWallPlaneFilledArrow.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowMirrored.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(travelRotationAlternatingWallPlaneFilledArrow.canSwitchToAlternatingArrows());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowMirrored.canSwitchToAlternatingArrows());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(travelRotationSingleFloorPlaneFilledArrow.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowMirrored.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertTrue(travelRotationDoubleFloorPlaneFilledArrow.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowMirrored.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(travelRotationAlternatingFloorPlaneFilledArrow.canSwitchToAlternatingArrows());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canSwitchToAlternatingArrows());
		assertFalse(
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchToAlternatingArrows());
		assertFalse(
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchToAlternatingArrows());

		assertFalse(travelShakingFloorPlane.canSwitchToAlternatingArrows());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canSwitchToAlternatingArrows());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canSwitchToAlternatingArrows());

	}

	@Override
	public void testSwitchToAlternatingArrows() {

		doubleWristFlexFloorPlane.switchToAlternatingArrows();
		assertEquals(doubleAlternatingWristFlexFloorPlane.getSymbol(), doubleWristFlexFloorPlane.getSymbol());
		doubleWristFlexFloorPlaneEmptyArrowhead.switchToAlternatingArrows();
		assertEquals(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		doubleWristFlexFloorPlaneSchemaArrowhead.switchToAlternatingArrows();
		assertEquals(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				doubleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		tripleWristFlexFloorPlane.switchToAlternatingArrows();
		assertEquals(tripleAlternatingWristFlexFloorPlane.getSymbol(), tripleWristFlexFloorPlane.getSymbol());
		tripleWristFlexFloorPlaneEmptyArrowhead.switchToAlternatingArrows();
		assertEquals(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.getSymbol(),
				tripleWristFlexFloorPlaneEmptyArrowhead.getSymbol());
		tripleWristFlexFloorPlaneSchemaArrowhead.switchToAlternatingArrows();
		assertEquals(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.getSymbol(),
				tripleWristFlexFloorPlaneSchemaArrowhead.getSymbol());

		doubleStraightMovementFloorPlane.switchToAlternatingArrows();
		assertEquals(doubleAlternatingMovementFloorPlane.getSymbol(), doubleStraightMovementFloorPlane.getSymbol());
		doubleStraightMovementFloorPlaneEmptyArrowhead.switchToAlternatingArrows();
		assertEquals(doubleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		doubleStraightMovementFloorPlaneSchemaArrowhead.switchToAlternatingArrows();
		assertEquals(doubleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				doubleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		tripleStraightMovementFloorPlane.switchToAlternatingArrows();
		assertEquals(tripleAlternatingMovementFloorPlane.getSymbol(), tripleStraightMovementFloorPlane.getSymbol());
		tripleStraightMovementFloorPlaneEmptyArrowhead.switchToAlternatingArrows();
		assertEquals(tripleAlternatingMovementFloorPlaneEmptyArrowhead.getSymbol(),
				tripleStraightMovementFloorPlaneEmptyArrowhead.getSymbol());
		tripleStraightMovementFloorPlaneSchemaArrowhead.switchToAlternatingArrows();
		assertEquals(tripleAlternatingMovementFloorPlaneSchemaArrowhead.getSymbol(),
				tripleStraightMovementFloorPlaneSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrow.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrow.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchToAlternatingArrows();
		assertEquals(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol(),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

	}

	@Override
	public void testCanSwitchStartingPoint() {

		assertFalse(singleStraightMovementFloorPlaneSmall.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(singleStraightMovementFloorPlaneMedium.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(singleStraightMovementFloorPlaneLarge.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(singleStraightMovementFloorPlaneLargest.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(singleWristFlexFloorPlane.canSwitchStartingPoint());
		assertFalse(singleWristFlexFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(singleWristFlexFloorPlaneSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(doubleWristFlexFloorPlane.canSwitchStartingPoint());
		assertFalse(doubleWristFlexFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(doubleWristFlexFloorPlaneSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(tripleWristFlexFloorPlane.canSwitchStartingPoint());
		assertFalse(tripleWristFlexFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(tripleWristFlexFloorPlaneSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(doubleAlternatingWristFlexFloorPlane.canSwitchStartingPoint());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(doubleAlternatingWristFlexFloorPlaneMirrored.canSwitchStartingPoint());
		assertFalse(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(tripleAlternatingWristFlexFloorPlane.canSwitchStartingPoint());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(tripleAlternatingWristFlexFloorPlaneMirrored.canSwitchStartingPoint());
		assertFalse(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(doubleStraightMovementFloorPlane.canSwitchStartingPoint());
		assertFalse(doubleStraightMovementFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(doubleStraightMovementFloorPlaneSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(tripleStraightMovementFloorPlane.canSwitchStartingPoint());
		assertFalse(tripleStraightMovementFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(tripleStraightMovementFloorPlaneSchemaArrowhead.canSwitchStartingPoint());

		assertFalse(doubleAlternatingMovementFloorPlane.canSwitchStartingPoint());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(doubleAlternatingMovementFloorPlaneMirrored.canSwitchStartingPoint());
		assertFalse(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(tripleAlternatingMovementFloorPlane.canSwitchStartingPoint());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(tripleAlternatingMovementFloorPlaneMirrored.canSwitchStartingPoint());
		assertFalse(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(crossMovementFloorPlane.canSwitchStartingPoint());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(crossMovementFloorPlaneMirrored.canSwitchStartingPoint());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(bendFloorPlane.canSwitchStartingPoint());
		assertFalse(bendFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(bendFloorPlaneSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(bendFloorPlaneMirrored.canSwitchStartingPoint());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(cornerFloorPlaneSmall.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneSmallMirrored.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(cornerFloorPlaneMedium.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneMediumMirrored.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(cornerFloorPlaneLarge.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneLargeMirrored.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(checkFloorPlane.canSwitchStartingPoint());
		assertFalse(checkFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(checkFloorPlaneSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(checkFloorPlaneMirrored.canSwitchStartingPoint());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(boxFloorPlaneSmall.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneSmallMirrored.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(boxFloorPlaneMedium.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneMediumMirrored.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(boxFloorPlaneLarge.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneLargeMirrored.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(zigzagFloorPlaneSmall.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneSmallMirrored.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(zigzagFloorPlaneMedium.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneMediumMirrored.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(zigzagFloorPlaneLarge.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneLargeMirrored.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(peaksFloorPlaneSmall.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneSmallMirrored.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(peaksFloorPlaneMedium.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneMediumMirrored.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(peaksFloorPlaneLarge.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneLargeMirrored.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertTrue(travelRotationSingleWallPlaneFilledArrow.canSwitchStartingPoint());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationSingleWallPlaneFilledArrowMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertTrue(travelRotationDoubleWallPlaneFilledArrow.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertTrue(travelRotationAlternatingWallPlaneFilledArrow.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertTrue(travelRotationSingleFloorPlaneFilledArrow.canSwitchStartingPoint());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertTrue(travelRotationDoubleFloorPlaneFilledArrow.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertTrue(travelRotationAlternatingFloorPlaneFilledArrow.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchStartingPoint());
		assertTrue(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchStartingPoint());

		assertFalse(travelShakingFloorPlane.canSwitchStartingPoint());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canSwitchStartingPoint());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canSwitchStartingPoint());

	}

	@Override
	public void testSwitchStartingPoint() {
		travelRotationSingleWallPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-04-01"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());
		travelRotationSingleWallPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-01"),
				travelRotationSingleWallPlaneFilledArrow.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-05-01"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-01"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-06-01"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-01"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleWallPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-04-09"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-01-09"),
				travelRotationSingleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-05-09"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-02-09"),
				travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-06-09"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-016-01-03-09"),
				travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-04-01"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());
		travelRotationDoubleWallPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-01"),
				travelRotationDoubleWallPlaneFilledArrow.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-05-01"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-01"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-06-01"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-01"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-04-09"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-01-09"),
				travelRotationDoubleWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-05-09"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-02-09"),
				travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-06-09"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-017-01-03-09"),
				travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-04-01"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-01"),
				travelRotationAlternatingWallPlaneFilledArrow.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-05-01"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-01"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-06-01"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-01"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-04-09"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-01-09"),
				travelRotationAlternatingWallPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-05-09"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-02-09"),
				travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-06-09"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-018-01-03-09"),
				travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-04-01"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());
		travelRotationSingleFloorPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-01"),
				travelRotationSingleFloorPlaneFilledArrow.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-05-01"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-01"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-06-01"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-01"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-04-09"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-01-09"),
				travelRotationSingleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-05-09"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-02-09"),
				travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-06-09"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-013-01-03-09"),
				travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-04-01"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-01"),
				travelRotationDoubleFloorPlaneFilledArrow.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-05-01"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-01"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-06-01"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-01"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-04-09"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-01-09"),
				travelRotationDoubleFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-05-09"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-02-09"),
				travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-06-09"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-014-01-03-09"),
				travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-04-01"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrow.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-01"),
				travelRotationAlternatingFloorPlaneFilledArrow.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-05-01"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-01"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-06-01"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-01"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-04-09"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-01-09"),
				travelRotationAlternatingFloorPlaneFilledArrowMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-05-09"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-02-09"),
				travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.getSymbol());

		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-06-09"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());
		travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.switchStartingPoint();
		assertEquals(symbolFactory.createSymbol("02-05-015-01-03-09"),
				travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.getSymbol());

	}

	@Override
	public void testCanSwitchPlane() {

		assertTrue(singleStraightMovementFloorPlaneSmall.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneSmallEmptyArrowhead.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneSmallSchemaArrowhead.canSwitchPlane());

		assertTrue(singleStraightMovementFloorPlaneMedium.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneMediumEmptyArrowhead.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneMediumSchemaArrowhead.canSwitchPlane());

		assertTrue(singleStraightMovementFloorPlaneLarge.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneLargeEmptyArrowhead.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneLargeSchemaArrowhead.canSwitchPlane());

		assertTrue(singleStraightMovementFloorPlaneLargest.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneLargestEmptyArrowhead.canSwitchPlane());
		assertTrue(singleStraightMovementFloorPlaneLargestSchemaArrowhead.canSwitchPlane());

		assertTrue(singleWristFlexFloorPlane.canSwitchPlane());
		assertTrue(singleWristFlexFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(singleWristFlexFloorPlaneSchemaArrowhead.canSwitchPlane());

		assertTrue(doubleWristFlexFloorPlane.canSwitchPlane());
		assertTrue(doubleWristFlexFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(doubleWristFlexFloorPlaneSchemaArrowhead.canSwitchPlane());

		assertTrue(tripleWristFlexFloorPlane.canSwitchPlane());
		assertTrue(tripleWristFlexFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(tripleWristFlexFloorPlaneSchemaArrowhead.canSwitchPlane());

		assertTrue(doubleAlternatingWristFlexFloorPlane.canSwitchPlane());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchPlane());
		assertTrue(doubleAlternatingWristFlexFloorPlaneMirrored.canSwitchPlane());
		assertTrue(doubleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchPlane());
		assertTrue(doubleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchPlane());

		assertTrue(tripleAlternatingWristFlexFloorPlane.canSwitchPlane());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowhead.canSwitchPlane());
		assertTrue(tripleAlternatingWristFlexFloorPlaneMirrored.canSwitchPlane());
		assertTrue(tripleAlternatingWristFlexFloorPlaneEmptyArrowheadMirrored.canSwitchPlane());
		assertTrue(tripleAlternatingWristFlexFloorPlaneSchemaArrowheadMirrored.canSwitchPlane());

		assertTrue(doubleStraightMovementFloorPlane.canSwitchPlane());
		assertTrue(doubleStraightMovementFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(doubleStraightMovementFloorPlaneSchemaArrowhead.canSwitchPlane());

		assertTrue(tripleStraightMovementFloorPlane.canSwitchPlane());
		assertTrue(tripleStraightMovementFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(tripleStraightMovementFloorPlaneSchemaArrowhead.canSwitchPlane());

		assertTrue(doubleAlternatingMovementFloorPlane.canSwitchPlane());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchPlane());
		assertTrue(doubleAlternatingMovementFloorPlaneMirrored.canSwitchPlane());
		assertTrue(doubleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchPlane());
		assertTrue(doubleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchPlane());

		assertTrue(tripleAlternatingMovementFloorPlane.canSwitchPlane());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowhead.canSwitchPlane());
		assertTrue(tripleAlternatingMovementFloorPlaneMirrored.canSwitchPlane());
		assertTrue(tripleAlternatingMovementFloorPlaneEmptyArrowheadMirrored.canSwitchPlane());
		assertTrue(tripleAlternatingMovementFloorPlaneSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(crossMovementFloorPlane.canSwitchPlane());
		assertFalse(crossMovementFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertFalse(crossMovementFloorPlaneSchemaArrowhead.canSwitchPlane());
		assertFalse(crossMovementFloorPlaneMirrored.canSwitchPlane());
		assertFalse(crossMovementFloorPlaneEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(crossMovementFloorPlaneSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(bendFloorPlane.canSwitchPlane());
		assertFalse(bendFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertFalse(bendFloorPlaneSchemaArrowhead.canSwitchPlane());
		assertFalse(bendFloorPlaneMirrored.canSwitchPlane());
		assertFalse(bendFloorPlaneEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(bendFloorPlaneSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(cornerFloorPlaneSmall.canSwitchPlane());
		assertFalse(cornerFloorPlaneSmallEmptyArrowhead.canSwitchPlane());
		assertFalse(cornerFloorPlaneSmallSchemaArrowhead.canSwitchPlane());
		assertFalse(cornerFloorPlaneSmallMirrored.canSwitchPlane());
		assertFalse(cornerFloorPlaneSmallEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(cornerFloorPlaneSmallSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(cornerFloorPlaneMedium.canSwitchPlane());
		assertFalse(cornerFloorPlaneMediumEmptyArrowhead.canSwitchPlane());
		assertFalse(cornerFloorPlaneMediumSchemaArrowhead.canSwitchPlane());
		assertFalse(cornerFloorPlaneMediumMirrored.canSwitchPlane());
		assertFalse(cornerFloorPlaneMediumEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(cornerFloorPlaneMediumSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(cornerFloorPlaneLarge.canSwitchPlane());
		assertFalse(cornerFloorPlaneLargeEmptyArrowhead.canSwitchPlane());
		assertFalse(cornerFloorPlaneLargeSchemaArrowhead.canSwitchPlane());
		assertFalse(cornerFloorPlaneLargeMirrored.canSwitchPlane());
		assertFalse(cornerFloorPlaneLargeEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(cornerFloorPlaneLargeSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(checkFloorPlane.canSwitchPlane());
		assertFalse(checkFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertFalse(checkFloorPlaneSchemaArrowhead.canSwitchPlane());
		assertFalse(checkFloorPlaneMirrored.canSwitchPlane());
		assertFalse(checkFloorPlaneEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(checkFloorPlaneSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(boxFloorPlaneSmall.canSwitchPlane());
		assertFalse(boxFloorPlaneSmallEmptyArrowhead.canSwitchPlane());
		assertFalse(boxFloorPlaneSmallSchemaArrowhead.canSwitchPlane());
		assertFalse(boxFloorPlaneSmallMirrored.canSwitchPlane());
		assertFalse(boxFloorPlaneSmallEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(boxFloorPlaneSmallSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(boxFloorPlaneMedium.canSwitchPlane());
		assertFalse(boxFloorPlaneMediumEmptyArrowhead.canSwitchPlane());
		assertFalse(boxFloorPlaneMediumSchemaArrowhead.canSwitchPlane());
		assertFalse(boxFloorPlaneMediumMirrored.canSwitchPlane());
		assertFalse(boxFloorPlaneMediumEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(boxFloorPlaneMediumSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(boxFloorPlaneLarge.canSwitchPlane());
		assertFalse(boxFloorPlaneLargeEmptyArrowhead.canSwitchPlane());
		assertFalse(boxFloorPlaneLargeSchemaArrowhead.canSwitchPlane());
		assertFalse(boxFloorPlaneLargeMirrored.canSwitchPlane());
		assertFalse(boxFloorPlaneLargeEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(boxFloorPlaneLargeSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(zigzagFloorPlaneSmall.canSwitchPlane());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowhead.canSwitchPlane());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowhead.canSwitchPlane());
		assertFalse(zigzagFloorPlaneSmallMirrored.canSwitchPlane());
		assertFalse(zigzagFloorPlaneSmallEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(zigzagFloorPlaneSmallSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(zigzagFloorPlaneMedium.canSwitchPlane());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowhead.canSwitchPlane());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowhead.canSwitchPlane());
		assertFalse(zigzagFloorPlaneMediumMirrored.canSwitchPlane());
		assertFalse(zigzagFloorPlaneMediumEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(zigzagFloorPlaneMediumSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(zigzagFloorPlaneLarge.canSwitchPlane());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowhead.canSwitchPlane());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowhead.canSwitchPlane());
		assertFalse(zigzagFloorPlaneLargeMirrored.canSwitchPlane());
		assertFalse(zigzagFloorPlaneLargeEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(zigzagFloorPlaneLargeSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(peaksFloorPlaneSmall.canSwitchPlane());
		assertFalse(peaksFloorPlaneSmallEmptyArrowhead.canSwitchPlane());
		assertFalse(peaksFloorPlaneSmallSchemaArrowhead.canSwitchPlane());
		assertFalse(peaksFloorPlaneSmallMirrored.canSwitchPlane());
		assertFalse(peaksFloorPlaneSmallEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(peaksFloorPlaneSmallSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(peaksFloorPlaneMedium.canSwitchPlane());
		assertFalse(peaksFloorPlaneMediumEmptyArrowhead.canSwitchPlane());
		assertFalse(peaksFloorPlaneMediumSchemaArrowhead.canSwitchPlane());
		assertFalse(peaksFloorPlaneMediumMirrored.canSwitchPlane());
		assertFalse(peaksFloorPlaneMediumEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(peaksFloorPlaneMediumSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(peaksFloorPlaneLarge.canSwitchPlane());
		assertFalse(peaksFloorPlaneLargeEmptyArrowhead.canSwitchPlane());
		assertFalse(peaksFloorPlaneLargeSchemaArrowhead.canSwitchPlane());
		assertFalse(peaksFloorPlaneLargeMirrored.canSwitchPlane());
		assertFalse(peaksFloorPlaneLargeEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(peaksFloorPlaneLargeSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(travelRotationSingleWallPlaneFilledArrow.canSwitchPlane());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowhead.canSwitchPlane());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowhead.canSwitchPlane());
		assertFalse(travelRotationSingleWallPlaneFilledArrowMirrored.canSwitchPlane());
		assertFalse(travelRotationSingleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(travelRotationSingleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(travelRotationDoubleWallPlaneFilledArrow.canSwitchPlane());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowhead.canSwitchPlane());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowhead.canSwitchPlane());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowMirrored.canSwitchPlane());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(travelRotationDoubleWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(travelRotationAlternatingWallPlaneFilledArrow.canSwitchPlane());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowhead.canSwitchPlane());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowhead.canSwitchPlane());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowMirrored.canSwitchPlane());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(travelRotationAlternatingWallPlaneFilledArrowSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(travelRotationSingleFloorPlaneFilledArrow.canSwitchPlane());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowhead.canSwitchPlane());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowhead.canSwitchPlane());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowMirrored.canSwitchPlane());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(travelRotationSingleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(travelRotationDoubleFloorPlaneFilledArrow.canSwitchPlane());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowhead.canSwitchPlane());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowhead.canSwitchPlane());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowMirrored.canSwitchPlane());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(travelRotationDoubleFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(travelRotationAlternatingFloorPlaneFilledArrow.canSwitchPlane());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowhead.canSwitchPlane());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowhead.canSwitchPlane());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowMirrored.canSwitchPlane());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowEmptyArrowheadMirrored.canSwitchPlane());
		assertFalse(travelRotationAlternatingFloorPlaneFilledArrowSchemaArrowheadMirrored.canSwitchPlane());

		assertFalse(travelShakingFloorPlane.canSwitchPlane());
		assertFalse(travelShakingFloorPlaneEmptyArrowhead.canSwitchPlane());
		assertFalse(travelShakingFloorPlaneSchemaArrowhead.canSwitchPlane());

	}

	@Override
	public void testSwitchPlane() {

		singleStraightMovementFloorPlaneSmall.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-01-01-01"),
				singleStraightMovementFloorPlaneSmall.getSymbol());
		singleStraightMovementFloorPlaneSmallEmptyArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-01-02-01"),
				singleStraightMovementFloorPlaneSmallEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneSmallSchemaArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-01-03-01"),
				singleStraightMovementFloorPlaneSmallSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneMedium.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-02-01-01"),
				singleStraightMovementFloorPlaneMedium.getSymbol());
		singleStraightMovementFloorPlaneMediumEmptyArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-02-02-01"),
				singleStraightMovementFloorPlaneMediumEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneMediumSchemaArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-02-03-01"),
				singleStraightMovementFloorPlaneMediumSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLarge.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-03-01-01"),
				singleStraightMovementFloorPlaneLarge.getSymbol());
		singleStraightMovementFloorPlaneLargeEmptyArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-03-02-01"),
				singleStraightMovementFloorPlaneLargeEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargeSchemaArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-03-03-01"),
				singleStraightMovementFloorPlaneLargeSchemaArrowhead.getSymbol());

		singleStraightMovementFloorPlaneLargest.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-04-01-01"),
				singleStraightMovementFloorPlaneLargest.getSymbol());
		singleStraightMovementFloorPlaneLargestEmptyArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-04-02-01"),
				singleStraightMovementFloorPlaneLargestEmptyArrowhead.getSymbol());
		singleStraightMovementFloorPlaneLargestSchemaArrowhead.switchPlane();
		assertEquals(symbolFactory.createSymbol("02-03-001-04-03-01"),
				singleStraightMovementFloorPlaneLargestSchemaArrowhead.getSymbol());

	}

}
