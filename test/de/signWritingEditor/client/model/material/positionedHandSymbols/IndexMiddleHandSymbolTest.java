package de.signWritingEditor.client.model.material.positionedHandSymbols;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import de.signWritingEditor.shared.model.domainValue.Symbol;
import de.signWritingEditor.shared.model.material.HandBaseSymbol;
import de.signWritingEditor.shared.model.material.PositionedHandSymbol;
import de.signWritingEditor.shared.model.material.SymbolFactory;

public class IndexMiddleHandSymbolTest implements PositionedHandSymbolTestInterface {

	private PositionedHandSymbol indexMiddleRightHand;
	private PositionedHandSymbol indexMiddleLeftHand;
	private PositionedHandSymbol indexMiddleRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleRightHandFullTurn;
	private PositionedHandSymbol indexMiddleLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleRightHandPitched;
	private PositionedHandSymbol indexMiddleLeftHandPitched;
	private PositionedHandSymbol indexMiddleRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleOnCircleRightHand;
	private PositionedHandSymbol indexMiddleOnCircleLeftHand;
	private PositionedHandSymbol indexMiddleOnCircleRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleOnCircleLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleOnCircleRightHandFullTurn;
	private PositionedHandSymbol indexMiddleOnCircleLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleOnCircleRightHandPitched;
	private PositionedHandSymbol indexMiddleOnCircleLeftHandPitched;
	private PositionedHandSymbol indexMiddleOnCircleRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleOnCircleLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleOnCircleRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleOnCircleLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleBentRightHand;
	private PositionedHandSymbol indexMiddleBentLeftHand;
	private PositionedHandSymbol indexMiddleBentRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleBentLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleBentRightHandFullTurn;
	private PositionedHandSymbol indexMiddleBentLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleBentRightHandPitched;
	private PositionedHandSymbol indexMiddleBentLeftHandPitched;
	private PositionedHandSymbol indexMiddleBentRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleBentLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleBentRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleBentLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleRaisedKnucklesRightHand;
	private PositionedHandSymbol indexMiddleRaisedKnucklesLeftHand;
	private PositionedHandSymbol indexMiddleRaisedKnucklesRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleRaisedKnucklesLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleRaisedKnucklesRightHandFullTurn;
	private PositionedHandSymbol indexMiddleRaisedKnucklesLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleRaisedKnucklesRightHandPitched;
	private PositionedHandSymbol indexMiddleRaisedKnucklesLeftHandPitched;
	private PositionedHandSymbol indexMiddleRaisedKnucklesRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleRaisedKnucklesLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleRaisedKnucklesRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleRaisedKnucklesLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleHingedRightHand;
	private PositionedHandSymbol indexMiddleHingedLeftHand;
	private PositionedHandSymbol indexMiddleHingedRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleHingedLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleHingedRightHandFullTurn;
	private PositionedHandSymbol indexMiddleHingedLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleHingedRightHandPitched;
	private PositionedHandSymbol indexMiddleHingedLeftHandPitched;
	private PositionedHandSymbol indexMiddleHingedRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleHingedLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleHingedRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleHingedLeftHandFullTurnPitched;

	private PositionedHandSymbol indexUpMiddleHingeRightHand;
	private PositionedHandSymbol indexUpMiddleHingeLeftHand;
	private PositionedHandSymbol indexUpMiddleHingeRightHandHalfTurn;
	private PositionedHandSymbol indexUpMiddleHingeLeftHandHalfTurn;
	private PositionedHandSymbol indexUpMiddleHingeRightHandFullTurn;
	private PositionedHandSymbol indexUpMiddleHingeLeftHandFullTurn;
	private PositionedHandSymbol indexUpMiddleHingeRightHandPitched;
	private PositionedHandSymbol indexUpMiddleHingeLeftHandPitched;
	private PositionedHandSymbol indexUpMiddleHingeRightHandHalfTurnPitched;
	private PositionedHandSymbol indexUpMiddleHingeLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexUpMiddleHingeRightHandFullTurnPitched;
	private PositionedHandSymbol indexUpMiddleHingeLeftHandFullTurnPitched;

	private PositionedHandSymbol indexHingeMiddleUpRightHand;
	private PositionedHandSymbol indexHingeMiddleUpLeftHand;
	private PositionedHandSymbol indexHingeMiddleUpRightHandHalfTurn;
	private PositionedHandSymbol indexHingeMiddleUpLeftHandHalfTurn;
	private PositionedHandSymbol indexHingeMiddleUpRightHandFullTurn;
	private PositionedHandSymbol indexHingeMiddleUpLeftHandFullTurn;
	private PositionedHandSymbol indexHingeMiddleUpRightHandPitched;
	private PositionedHandSymbol indexHingeMiddleUpLeftHandPitched;
	private PositionedHandSymbol indexHingeMiddleUpRightHandHalfTurnPitched;
	private PositionedHandSymbol indexHingeMiddleUpLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexHingeMiddleUpRightHandFullTurnPitched;
	private PositionedHandSymbol indexHingeMiddleUpLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleUnitRightHand;
	private PositionedHandSymbol indexMiddleUnitLeftHand;
	private PositionedHandSymbol indexMiddleUnitRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitRightHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitRightHandPitched;
	private PositionedHandSymbol indexMiddleUnitLeftHandPitched;
	private PositionedHandSymbol indexMiddleUnitRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleUnitLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleUnitIndexBentRightHand;
	private PositionedHandSymbol indexMiddleUnitIndexBentLeftHand;
	private PositionedHandSymbol indexMiddleUnitIndexBentRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitIndexBentLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitIndexBentRightHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitIndexBentLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitIndexBentRightHandPitched;
	private PositionedHandSymbol indexMiddleUnitIndexBentLeftHandPitched;
	private PositionedHandSymbol indexMiddleUnitIndexBentRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitIndexBentLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitIndexBentRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleUnitIndexBentLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleUnitMiddleBentRightHand;
	private PositionedHandSymbol indexMiddleUnitMiddleBentLeftHand;
	private PositionedHandSymbol indexMiddleUnitMiddleBentRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitMiddleBentLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitMiddleBentRightHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitMiddleBentLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitMiddleBentRightHandPitched;
	private PositionedHandSymbol indexMiddleUnitMiddleBentLeftHandPitched;
	private PositionedHandSymbol indexMiddleUnitMiddleBentRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitMiddleBentLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitMiddleBentRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleUnitMiddleBentLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleUnitCupRightHand;
	private PositionedHandSymbol indexMiddleUnitCupLeftHand;
	private PositionedHandSymbol indexMiddleUnitCupRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitCupLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitCupRightHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitCupLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitCupRightHandPitched;
	private PositionedHandSymbol indexMiddleUnitCupLeftHandPitched;
	private PositionedHandSymbol indexMiddleUnitCupRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitCupLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitCupRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleUnitCupLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleUnitHingeRightHand;
	private PositionedHandSymbol indexMiddleUnitHingeLeftHand;
	private PositionedHandSymbol indexMiddleUnitHingeRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitHingeLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleUnitHingeRightHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitHingeLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleUnitHingeRightHandPitched;
	private PositionedHandSymbol indexMiddleUnitHingeLeftHandPitched;
	private PositionedHandSymbol indexMiddleUnitHingeRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitHingeLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleUnitHingeRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleUnitHingeLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleCrossRightHand;
	private PositionedHandSymbol indexMiddleCrossLeftHand;
	private PositionedHandSymbol indexMiddleCrossRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleCrossLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleCrossRightHandFullTurn;
	private PositionedHandSymbol indexMiddleCrossLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleCrossRightHandPitched;
	private PositionedHandSymbol indexMiddleCrossLeftHandPitched;
	private PositionedHandSymbol indexMiddleCrossRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleCrossLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleCrossRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleCrossLeftHandFullTurnPitched;

	private PositionedHandSymbol indexMiddleCrossOnCircleRightHand;
	private PositionedHandSymbol indexMiddleCrossOnCircleLeftHand;
	private PositionedHandSymbol indexMiddleCrossOnCircleRightHandHalfTurn;
	private PositionedHandSymbol indexMiddleCrossOnCircleLeftHandHalfTurn;
	private PositionedHandSymbol indexMiddleCrossOnCircleRightHandFullTurn;
	private PositionedHandSymbol indexMiddleCrossOnCircleLeftHandFullTurn;
	private PositionedHandSymbol indexMiddleCrossOnCircleRightHandPitched;
	private PositionedHandSymbol indexMiddleCrossOnCircleLeftHandPitched;
	private PositionedHandSymbol indexMiddleCrossOnCircleRightHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleCrossOnCircleLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexMiddleCrossOnCircleRightHandFullTurnPitched;
	private PositionedHandSymbol indexMiddleCrossOnCircleLeftHandFullTurnPitched;

	private PositionedHandSymbol middleBentOverIndexRightHand;
	private PositionedHandSymbol middleBentOverIndexLeftHand;
	private PositionedHandSymbol middleBentOverIndexRightHandHalfTurn;
	private PositionedHandSymbol middleBentOverIndexLeftHandHalfTurn;
	private PositionedHandSymbol middleBentOverIndexRightHandFullTurn;
	private PositionedHandSymbol middleBentOverIndexLeftHandFullTurn;
	private PositionedHandSymbol middleBentOverIndexRightHandPitched;
	private PositionedHandSymbol middleBentOverIndexLeftHandPitched;
	private PositionedHandSymbol middleBentOverIndexRightHandHalfTurnPitched;
	private PositionedHandSymbol middleBentOverIndexLeftHandHalfTurnPitched;
	private PositionedHandSymbol middleBentOverIndexRightHandFullTurnPitched;
	private PositionedHandSymbol middleBentOverIndexLeftHandFullTurnPitched;

	private PositionedHandSymbol indexBentOverMiddleRightHand;
	private PositionedHandSymbol indexBentOverMiddleLeftHand;
	private PositionedHandSymbol indexBentOverMiddleRightHandHalfTurn;
	private PositionedHandSymbol indexBentOverMiddleLeftHandHalfTurn;
	private PositionedHandSymbol indexBentOverMiddleRightHandFullTurn;
	private PositionedHandSymbol indexBentOverMiddleLeftHandFullTurn;
	private PositionedHandSymbol indexBentOverMiddleRightHandPitched;
	private PositionedHandSymbol indexBentOverMiddleLeftHandPitched;
	private PositionedHandSymbol indexBentOverMiddleRightHandHalfTurnPitched;
	private PositionedHandSymbol indexBentOverMiddleLeftHandHalfTurnPitched;
	private PositionedHandSymbol indexBentOverMiddleRightHandFullTurnPitched;
	private PositionedHandSymbol indexBentOverMiddleLeftHandFullTurnPitched;

	private SymbolFactory symbolFactory;

	@Override
	public void setUp(SymbolFactory symbolFactory) {

		this.symbolFactory = symbolFactory;

		indexMiddleRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(HandBaseSymbol.INDEX_MIDDLE.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleLeftHandSymbol = symbolFactory.createSymbol("01-02-001-01-01-09");
		indexMiddleLeftHand = new PositionedHandSymbol(indexMiddleLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-001-01-02-01");
		indexMiddleRightHandHalfTurn = new PositionedHandSymbol(indexMiddleRightHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-001-01-02-09");
		indexMiddleLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-001-01-03-01");
		indexMiddleRightHandFullTurn = new PositionedHandSymbol(indexMiddleRightHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-001-01-03-09");
		indexMiddleLeftHandFullTurn = new PositionedHandSymbol(indexMiddleLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-001-01-04-01");
		indexMiddleRightHandPitched = new PositionedHandSymbol(indexMiddleRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-001-01-04-09");
		indexMiddleLeftHandPitched = new PositionedHandSymbol(indexMiddleLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-001-01-05-01");
		indexMiddleRightHandHalfTurnPitched = new PositionedHandSymbol(indexMiddleRightHandHalfTurnPitchedSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-001-01-05-09");
		indexMiddleLeftHandHalfTurnPitched = new PositionedHandSymbol(indexMiddleLeftHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-001-01-06-01");
		indexMiddleRightHandFullTurnPitched = new PositionedHandSymbol(indexMiddleRightHandFullTurnPitchedSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-001-01-06-09");
		indexMiddleLeftHandFullTurnPitched = new PositionedHandSymbol(indexMiddleLeftHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleOnCircleRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE_ON_CIRCLE.getIswaSymbol(),
				0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_MIDDLE_ON_CIRCLE.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleOnCircleLeftHandSymbol = symbolFactory.createSymbol("01-02-002-01-01-09");
		indexMiddleOnCircleLeftHand = new PositionedHandSymbol(indexMiddleOnCircleLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleOnCircleLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-002-01-02-01");
		indexMiddleOnCircleRightHandHalfTurn = new PositionedHandSymbol(indexMiddleOnCircleRightHandHalfTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleOnCircleRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-002-01-02-09");
		indexMiddleOnCircleLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleOnCircleLeftHandHalfTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleOnCircleLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-002-01-03-01");
		indexMiddleOnCircleRightHandFullTurn = new PositionedHandSymbol(indexMiddleOnCircleRightHandFullTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleOnCircleRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-002-01-03-09");
		indexMiddleOnCircleLeftHandFullTurn = new PositionedHandSymbol(indexMiddleOnCircleLeftHandFullTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleOnCircleLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-002-01-04-01");
		indexMiddleOnCircleRightHandPitched = new PositionedHandSymbol(indexMiddleOnCircleRightHandPitchedSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleOnCircleRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-002-01-04-09");
		indexMiddleOnCircleLeftHandPitched = new PositionedHandSymbol(indexMiddleOnCircleLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleOnCircleLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-002-01-05-01");
		indexMiddleOnCircleRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleOnCircleRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleOnCircleRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-002-01-05-09");
		indexMiddleOnCircleLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleOnCircleLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleOnCircleLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-002-01-06-01");
		indexMiddleOnCircleRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleOnCircleRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleOnCircleRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleOnCircleLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-002-01-06-09");
		indexMiddleOnCircleLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleOnCircleLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleOnCircleLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleBentRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE_BENT.getIswaSymbol(), 0, 0, 2,
				symbolFactory
						.getAllRotationsAndFillsFor(HandBaseSymbol.INDEX_MIDDLE_BENT.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleBentLeftHandSymbol = symbolFactory.createSymbol("01-02-003-01-01-09");
		indexMiddleBentLeftHand = new PositionedHandSymbol(indexMiddleBentLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleBentRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-003-01-02-01");
		indexMiddleBentRightHandHalfTurn = new PositionedHandSymbol(indexMiddleBentRightHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleBentLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-003-01-02-09");
		indexMiddleBentLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleBentLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleBentRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-003-01-03-01");
		indexMiddleBentRightHandFullTurn = new PositionedHandSymbol(indexMiddleBentRightHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleBentLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-003-01-03-09");
		indexMiddleBentLeftHandFullTurn = new PositionedHandSymbol(indexMiddleBentLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleBentRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-003-01-04-01");
		indexMiddleBentRightHandPitched = new PositionedHandSymbol(indexMiddleBentRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleBentLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-003-01-04-09");
		indexMiddleBentLeftHandPitched = new PositionedHandSymbol(indexMiddleBentLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleBentRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-003-01-05-01");
		indexMiddleBentRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleBentRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleBentRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleBentLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-003-01-05-09");
		indexMiddleBentLeftHandHalfTurnPitched = new PositionedHandSymbol(indexMiddleBentLeftHandHalfTurnPitchedSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleBentRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-003-01-06-01");
		indexMiddleBentRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleBentRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleBentRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleBentLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-003-01-06-09");
		indexMiddleBentLeftHandFullTurnPitched = new PositionedHandSymbol(indexMiddleBentLeftHandFullTurnPitchedSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleBentLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleRaisedKnucklesRightHand = new PositionedHandSymbol(
				HandBaseSymbol.INDEX_MIDDLE_RAISED_KNUCKLES.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_MIDDLE_RAISED_KNUCKLES.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesLeftHandSymbol = symbolFactory.createSymbol("01-02-004-01-01-09");
		indexMiddleRaisedKnucklesLeftHand = new PositionedHandSymbol(indexMiddleRaisedKnucklesLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleRaisedKnucklesLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-004-01-02-01");
		indexMiddleRaisedKnucklesRightHandHalfTurn = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesRightHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleRaisedKnucklesRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-004-01-02-09");
		indexMiddleRaisedKnucklesLeftHandHalfTurn = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesLeftHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleRaisedKnucklesLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-004-01-03-01");
		indexMiddleRaisedKnucklesRightHandFullTurn = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesRightHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleRaisedKnucklesRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-004-01-03-09");
		indexMiddleRaisedKnucklesLeftHandFullTurn = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesLeftHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleRaisedKnucklesLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-004-01-04-01");
		indexMiddleRaisedKnucklesRightHandPitched = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesRightHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleRaisedKnucklesRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-004-01-04-09");
		indexMiddleRaisedKnucklesLeftHandPitched = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesLeftHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleRaisedKnucklesLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesRightHandHalfTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-004-01-05-01");
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesRightHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleRaisedKnucklesRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesLeftHandHalfTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-004-01-05-09");
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleRaisedKnucklesLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesRightHandFullTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-004-01-06-01");
		indexMiddleRaisedKnucklesRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesRightHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleRaisedKnucklesRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleRaisedKnucklesLeftHandFullTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-004-01-06-09");
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleRaisedKnucklesLeftHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleRaisedKnucklesLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleHingedRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE_HINGE.getIswaSymbol(), 0, 0,
				2, symbolFactory
						.getAllRotationsAndFillsFor(HandBaseSymbol.INDEX_MIDDLE_HINGE.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleHingedLeftHandSymbol = symbolFactory.createSymbol("01-02-005-01-01-09");
		indexMiddleHingedLeftHand = new PositionedHandSymbol(indexMiddleHingedLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleHingedLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-005-01-02-01");
		indexMiddleHingedRightHandHalfTurn = new PositionedHandSymbol(indexMiddleHingedRightHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleHingedRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-005-01-02-09");
		indexMiddleHingedLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleHingedLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleHingedLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-005-01-03-01");
		indexMiddleHingedRightHandFullTurn = new PositionedHandSymbol(indexMiddleHingedRightHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleHingedRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-005-01-03-09");
		indexMiddleHingedLeftHandFullTurn = new PositionedHandSymbol(indexMiddleHingedLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleHingedLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-005-01-04-01");
		indexMiddleHingedRightHandPitched = new PositionedHandSymbol(indexMiddleHingedRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleHingedRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-005-01-04-09");
		indexMiddleHingedLeftHandPitched = new PositionedHandSymbol(indexMiddleHingedLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleHingedLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-005-01-05-01");
		indexMiddleHingedRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleHingedRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleHingedRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-005-01-05-09");
		indexMiddleHingedLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleHingedLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleHingedLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-005-01-06-01");
		indexMiddleHingedRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleHingedRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleHingedRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleHingedLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-005-01-06-09");
		indexMiddleHingedLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleHingedLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleHingedLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexUpMiddleHingeRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_UP_MIDDLE_HINGE.getIswaSymbol(), 0,
				0, 2, symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_UP_MIDDLE_HINGE.getIswaSymbol().getBaseSymbol()));
		Symbol indexUpMiddleHingeLeftHandSymbol = symbolFactory.createSymbol("01-02-006-01-01-09");
		indexUpMiddleHingeLeftHand = new PositionedHandSymbol(indexUpMiddleHingeLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexUpMiddleHingeLeftHandSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-006-01-02-01");
		indexUpMiddleHingeRightHandHalfTurn = new PositionedHandSymbol(indexUpMiddleHingeRightHandHalfTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexUpMiddleHingeRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-006-01-02-09");
		indexUpMiddleHingeLeftHandHalfTurn = new PositionedHandSymbol(indexUpMiddleHingeLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexUpMiddleHingeLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-006-01-03-01");
		indexUpMiddleHingeRightHandFullTurn = new PositionedHandSymbol(indexUpMiddleHingeRightHandFullTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexUpMiddleHingeRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-006-01-03-09");
		indexUpMiddleHingeLeftHandFullTurn = new PositionedHandSymbol(indexUpMiddleHingeLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexUpMiddleHingeLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-006-01-04-01");
		indexUpMiddleHingeRightHandPitched = new PositionedHandSymbol(indexUpMiddleHingeRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexUpMiddleHingeRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-006-01-04-09");
		indexUpMiddleHingeLeftHandPitched = new PositionedHandSymbol(indexUpMiddleHingeLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexUpMiddleHingeLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-006-01-05-01");
		indexUpMiddleHingeRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexUpMiddleHingeRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexUpMiddleHingeRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-006-01-05-09");
		indexUpMiddleHingeLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexUpMiddleHingeLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexUpMiddleHingeLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-006-01-06-01");
		indexUpMiddleHingeRightHandFullTurnPitched = new PositionedHandSymbol(
				indexUpMiddleHingeRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexUpMiddleHingeRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexUpMiddleHingeLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-006-01-06-09");
		indexUpMiddleHingeLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexUpMiddleHingeLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexUpMiddleHingeLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexHingeMiddleUpRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_HINGE_MIDDLE_UP.getIswaSymbol(), 0,
				0, 2, symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_HINGE_MIDDLE_UP.getIswaSymbol().getBaseSymbol()));
		Symbol indexHingeMiddleUpLeftHandSymbol = symbolFactory.createSymbol("01-02-007-01-01-09");
		indexHingeMiddleUpLeftHand = new PositionedHandSymbol(indexHingeMiddleUpLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexHingeMiddleUpLeftHandSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-007-01-02-01");
		indexHingeMiddleUpRightHandHalfTurn = new PositionedHandSymbol(indexHingeMiddleUpRightHandHalfTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexHingeMiddleUpRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-007-01-02-09");
		indexHingeMiddleUpLeftHandHalfTurn = new PositionedHandSymbol(indexHingeMiddleUpLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexHingeMiddleUpLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-007-01-03-01");
		indexHingeMiddleUpRightHandFullTurn = new PositionedHandSymbol(indexHingeMiddleUpRightHandFullTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexHingeMiddleUpRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-007-01-03-09");
		indexHingeMiddleUpLeftHandFullTurn = new PositionedHandSymbol(indexHingeMiddleUpLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexHingeMiddleUpLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-007-01-04-01");
		indexHingeMiddleUpRightHandPitched = new PositionedHandSymbol(indexHingeMiddleUpRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexHingeMiddleUpRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-007-01-04-09");
		indexHingeMiddleUpLeftHandPitched = new PositionedHandSymbol(indexHingeMiddleUpLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexHingeMiddleUpLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-007-01-05-01");
		indexHingeMiddleUpRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexHingeMiddleUpRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexHingeMiddleUpRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-007-01-05-09");
		indexHingeMiddleUpLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexHingeMiddleUpLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexHingeMiddleUpLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-007-01-06-01");
		indexHingeMiddleUpRightHandFullTurnPitched = new PositionedHandSymbol(
				indexHingeMiddleUpRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexHingeMiddleUpRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexHingeMiddleUpLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-007-01-06-09");
		indexHingeMiddleUpLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexHingeMiddleUpLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexHingeMiddleUpLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleUnitRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE_UNIT.getIswaSymbol(), 0, 0, 2,
				symbolFactory
						.getAllRotationsAndFillsFor(HandBaseSymbol.INDEX_MIDDLE_UNIT.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleUnitLeftHandSymbol = symbolFactory.createSymbol("01-02-008-01-01-09");
		indexMiddleUnitLeftHand = new PositionedHandSymbol(indexMiddleUnitLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-008-01-02-01");
		indexMiddleUnitRightHandHalfTurn = new PositionedHandSymbol(indexMiddleUnitRightHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-008-01-02-09");
		indexMiddleUnitLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleUnitLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-008-01-03-01");
		indexMiddleUnitRightHandFullTurn = new PositionedHandSymbol(indexMiddleUnitRightHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-008-01-03-09");
		indexMiddleUnitLeftHandFullTurn = new PositionedHandSymbol(indexMiddleUnitLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-008-01-04-01");
		indexMiddleUnitRightHandPitched = new PositionedHandSymbol(indexMiddleUnitRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-008-01-04-09");
		indexMiddleUnitLeftHandPitched = new PositionedHandSymbol(indexMiddleUnitLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-008-01-05-01");
		indexMiddleUnitRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-008-01-05-09");
		indexMiddleUnitLeftHandHalfTurnPitched = new PositionedHandSymbol(indexMiddleUnitLeftHandHalfTurnPitchedSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-008-01-06-01");
		indexMiddleUnitRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-008-01-06-09");
		indexMiddleUnitLeftHandFullTurnPitched = new PositionedHandSymbol(indexMiddleUnitLeftHandFullTurnPitchedSymbol,
				0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleUnitIndexBentRightHand = new PositionedHandSymbol(
				HandBaseSymbol.INDEX_MIDDLE_UNIT_INDEX_BENT.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_MIDDLE_UNIT_INDEX_BENT.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentLeftHandSymbol = symbolFactory.createSymbol("01-02-009-01-01-09");
		indexMiddleUnitIndexBentLeftHand = new PositionedHandSymbol(indexMiddleUnitIndexBentLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitIndexBentLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-009-01-02-01");
		indexMiddleUnitIndexBentRightHandHalfTurn = new PositionedHandSymbol(
				indexMiddleUnitIndexBentRightHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitIndexBentRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-009-01-02-09");
		indexMiddleUnitIndexBentLeftHandHalfTurn = new PositionedHandSymbol(
				indexMiddleUnitIndexBentLeftHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitIndexBentLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-009-01-03-01");
		indexMiddleUnitIndexBentRightHandFullTurn = new PositionedHandSymbol(
				indexMiddleUnitIndexBentRightHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitIndexBentRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-009-01-03-09");
		indexMiddleUnitIndexBentLeftHandFullTurn = new PositionedHandSymbol(
				indexMiddleUnitIndexBentLeftHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitIndexBentLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-009-01-04-01");
		indexMiddleUnitIndexBentRightHandPitched = new PositionedHandSymbol(
				indexMiddleUnitIndexBentRightHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitIndexBentRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-009-01-04-09");
		indexMiddleUnitIndexBentLeftHandPitched = new PositionedHandSymbol(
				indexMiddleUnitIndexBentLeftHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitIndexBentLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentRightHandHalfTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-009-01-05-01");
		indexMiddleUnitIndexBentRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitIndexBentRightHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitIndexBentRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-009-01-05-09");
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitIndexBentLeftHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitIndexBentLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentRightHandFullTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-009-01-06-01");
		indexMiddleUnitIndexBentRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitIndexBentRightHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitIndexBentRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitIndexBentLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-009-01-06-09");
		indexMiddleUnitIndexBentLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitIndexBentLeftHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitIndexBentLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleUnitMiddleBentRightHand = new PositionedHandSymbol(
				HandBaseSymbol.INDEX_MIDDLE_UNIT_MIDDLE_BENT.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_MIDDLE_UNIT_MIDDLE_BENT.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentLeftHandSymbol = symbolFactory.createSymbol("01-02-010-01-01-09");
		indexMiddleUnitMiddleBentLeftHand = new PositionedHandSymbol(indexMiddleUnitMiddleBentLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitMiddleBentLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-010-01-02-01");
		indexMiddleUnitMiddleBentRightHandHalfTurn = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentRightHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitMiddleBentRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-010-01-02-09");
		indexMiddleUnitMiddleBentLeftHandHalfTurn = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentLeftHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitMiddleBentLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-010-01-03-01");
		indexMiddleUnitMiddleBentRightHandFullTurn = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentRightHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitMiddleBentRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-010-01-03-09");
		indexMiddleUnitMiddleBentLeftHandFullTurn = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentLeftHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitMiddleBentLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-010-01-04-01");
		indexMiddleUnitMiddleBentRightHandPitched = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentRightHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitMiddleBentRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-010-01-04-09");
		indexMiddleUnitMiddleBentLeftHandPitched = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentLeftHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitMiddleBentLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentRightHandHalfTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-010-01-05-01");
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentRightHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitMiddleBentRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentLeftHandHalfTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-010-01-05-09");
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitMiddleBentLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentRightHandFullTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-010-01-06-01");
		indexMiddleUnitMiddleBentRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentRightHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitMiddleBentRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitMiddleBentLeftHandFullTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-010-01-06-09");
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitMiddleBentLeftHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitMiddleBentLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleUnitCupRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE_UNIT_CUP.getIswaSymbol(), 0,
				0, 2, symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_MIDDLE_UNIT_CUP.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleUnitCupLeftHandSymbol = symbolFactory.createSymbol("01-02-011-01-01-09");
		indexMiddleUnitCupLeftHand = new PositionedHandSymbol(indexMiddleUnitCupLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitCupLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-011-01-02-01");
		indexMiddleUnitCupRightHandHalfTurn = new PositionedHandSymbol(indexMiddleUnitCupRightHandHalfTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitCupRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-011-01-02-09");
		indexMiddleUnitCupLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleUnitCupLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitCupLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-011-01-03-01");
		indexMiddleUnitCupRightHandFullTurn = new PositionedHandSymbol(indexMiddleUnitCupRightHandFullTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitCupRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-011-01-03-09");
		indexMiddleUnitCupLeftHandFullTurn = new PositionedHandSymbol(indexMiddleUnitCupLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitCupLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-011-01-04-01");
		indexMiddleUnitCupRightHandPitched = new PositionedHandSymbol(indexMiddleUnitCupRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitCupRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-011-01-04-09");
		indexMiddleUnitCupLeftHandPitched = new PositionedHandSymbol(indexMiddleUnitCupLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitCupLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-011-01-05-01");
		indexMiddleUnitCupRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitCupRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitCupRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-011-01-05-09");
		indexMiddleUnitCupLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitCupLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitCupLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-011-01-06-01");
		indexMiddleUnitCupRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitCupRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitCupRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitCupLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-011-01-06-09");
		indexMiddleUnitCupLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitCupLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitCupLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleUnitHingeRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE_UNIT_HINGE.getIswaSymbol(),
				0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_MIDDLE_UNIT_HINGE.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleUnitHingeLeftHandSymbol = symbolFactory.createSymbol("01-02-012-01-01-09");
		indexMiddleUnitHingeLeftHand = new PositionedHandSymbol(indexMiddleUnitHingeLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitHingeLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-012-01-02-01");
		indexMiddleUnitHingeRightHandHalfTurn = new PositionedHandSymbol(indexMiddleUnitHingeRightHandHalfTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitHingeRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-012-01-02-09");
		indexMiddleUnitHingeLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleUnitHingeLeftHandHalfTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitHingeLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-012-01-03-01");
		indexMiddleUnitHingeRightHandFullTurn = new PositionedHandSymbol(indexMiddleUnitHingeRightHandFullTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitHingeRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-012-01-03-09");
		indexMiddleUnitHingeLeftHandFullTurn = new PositionedHandSymbol(indexMiddleUnitHingeLeftHandFullTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitHingeLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-012-01-04-01");
		indexMiddleUnitHingeRightHandPitched = new PositionedHandSymbol(indexMiddleUnitHingeRightHandPitchedSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitHingeRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-012-01-04-09");
		indexMiddleUnitHingeLeftHandPitched = new PositionedHandSymbol(indexMiddleUnitHingeLeftHandPitchedSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(indexMiddleUnitHingeLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-012-01-05-01");
		indexMiddleUnitHingeRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitHingeRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitHingeRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-012-01-05-09");
		indexMiddleUnitHingeLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitHingeLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitHingeLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-012-01-06-01");
		indexMiddleUnitHingeRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitHingeRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleUnitHingeRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleUnitHingeLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-012-01-06-09");
		indexMiddleUnitHingeLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleUnitHingeLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleUnitHingeLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleCrossRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_MIDDLE_CROSS.getIswaSymbol(), 0, 0, 2,
				symbolFactory
						.getAllRotationsAndFillsFor(HandBaseSymbol.INDEX_MIDDLE_CROSS.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleCrossLeftHandSymbol = symbolFactory.createSymbol("01-02-013-01-01-09");
		indexMiddleCrossLeftHand = new PositionedHandSymbol(indexMiddleCrossLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-013-01-02-01");
		indexMiddleCrossRightHandHalfTurn = new PositionedHandSymbol(indexMiddleCrossRightHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-013-01-02-09");
		indexMiddleCrossLeftHandHalfTurn = new PositionedHandSymbol(indexMiddleCrossLeftHandHalfTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-013-01-03-01");
		indexMiddleCrossRightHandFullTurn = new PositionedHandSymbol(indexMiddleCrossRightHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-013-01-03-09");
		indexMiddleCrossLeftHandFullTurn = new PositionedHandSymbol(indexMiddleCrossLeftHandFullTurnSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-013-01-04-01");
		indexMiddleCrossRightHandPitched = new PositionedHandSymbol(indexMiddleCrossRightHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-013-01-04-09");
		indexMiddleCrossLeftHandPitched = new PositionedHandSymbol(indexMiddleCrossLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-013-01-05-01");
		indexMiddleCrossRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-013-01-05-09");
		indexMiddleCrossLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-013-01-06-01");
		indexMiddleCrossRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-013-01-06-09");
		indexMiddleCrossLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexMiddleCrossOnCircleRightHand = new PositionedHandSymbol(
				HandBaseSymbol.INDEX_MIDDLE_CROSS_ON_CIRCLE.getIswaSymbol(), 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_MIDDLE_CROSS_ON_CIRCLE.getIswaSymbol().getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleLeftHandSymbol = symbolFactory.createSymbol("01-02-014-01-01-09");
		indexMiddleCrossOnCircleLeftHand = new PositionedHandSymbol(indexMiddleCrossOnCircleLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexMiddleCrossOnCircleLeftHandSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-014-01-02-01");
		indexMiddleCrossOnCircleRightHandHalfTurn = new PositionedHandSymbol(
				indexMiddleCrossOnCircleRightHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossOnCircleRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-014-01-02-09");
		indexMiddleCrossOnCircleLeftHandHalfTurn = new PositionedHandSymbol(
				indexMiddleCrossOnCircleLeftHandHalfTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossOnCircleLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-014-01-03-01");
		indexMiddleCrossOnCircleRightHandFullTurn = new PositionedHandSymbol(
				indexMiddleCrossOnCircleRightHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossOnCircleRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-014-01-03-09");
		indexMiddleCrossOnCircleLeftHandFullTurn = new PositionedHandSymbol(
				indexMiddleCrossOnCircleLeftHandFullTurnSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossOnCircleLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-014-01-04-01");
		indexMiddleCrossOnCircleRightHandPitched = new PositionedHandSymbol(
				indexMiddleCrossOnCircleRightHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossOnCircleRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-014-01-04-09");
		indexMiddleCrossOnCircleLeftHandPitched = new PositionedHandSymbol(
				indexMiddleCrossOnCircleLeftHandPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexMiddleCrossOnCircleLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleRightHandHalfTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-014-01-05-01");
		indexMiddleCrossOnCircleRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossOnCircleRightHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleCrossOnCircleRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-014-01-05-09");
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossOnCircleLeftHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleCrossOnCircleLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleRightHandFullTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-014-01-06-01");
		indexMiddleCrossOnCircleRightHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossOnCircleRightHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleCrossOnCircleRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexMiddleCrossOnCircleLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-014-01-06-09");
		indexMiddleCrossOnCircleLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexMiddleCrossOnCircleLeftHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexMiddleCrossOnCircleLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		middleBentOverIndexRightHand = new PositionedHandSymbol(HandBaseSymbol.MIDDLE_BENT_OVER_INDEX.getIswaSymbol(),
				0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.MIDDLE_BENT_OVER_INDEX.getIswaSymbol().getBaseSymbol()));
		Symbol middleBentOverIndexLeftHandSymbol = symbolFactory.createSymbol("01-02-015-01-01-09");
		middleBentOverIndexLeftHand = new PositionedHandSymbol(middleBentOverIndexLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(middleBentOverIndexLeftHandSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-015-01-02-01");
		middleBentOverIndexRightHandHalfTurn = new PositionedHandSymbol(middleBentOverIndexRightHandHalfTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(middleBentOverIndexRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-015-01-02-09");
		middleBentOverIndexLeftHandHalfTurn = new PositionedHandSymbol(middleBentOverIndexLeftHandHalfTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(middleBentOverIndexLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-015-01-03-01");
		middleBentOverIndexRightHandFullTurn = new PositionedHandSymbol(middleBentOverIndexRightHandFullTurnSymbol, 0,
				0, 2,
				symbolFactory.getAllRotationsAndFillsFor(middleBentOverIndexRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-015-01-03-09");
		middleBentOverIndexLeftHandFullTurn = new PositionedHandSymbol(middleBentOverIndexLeftHandFullTurnSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(middleBentOverIndexLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-015-01-04-01");
		middleBentOverIndexRightHandPitched = new PositionedHandSymbol(middleBentOverIndexRightHandPitchedSymbol, 0, 0,
				2, symbolFactory.getAllRotationsAndFillsFor(middleBentOverIndexRightHandPitchedSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-015-01-04-09");
		middleBentOverIndexLeftHandPitched = new PositionedHandSymbol(middleBentOverIndexLeftHandPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(middleBentOverIndexLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexRightHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-015-01-05-01");
		middleBentOverIndexRightHandHalfTurnPitched = new PositionedHandSymbol(
				middleBentOverIndexRightHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(middleBentOverIndexRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-015-01-05-09");
		middleBentOverIndexLeftHandHalfTurnPitched = new PositionedHandSymbol(
				middleBentOverIndexLeftHandHalfTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(middleBentOverIndexLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexRightHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-015-01-06-01");
		middleBentOverIndexRightHandFullTurnPitched = new PositionedHandSymbol(
				middleBentOverIndexRightHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(middleBentOverIndexRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol middleBentOverIndexLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-015-01-06-09");
		middleBentOverIndexLeftHandFullTurnPitched = new PositionedHandSymbol(
				middleBentOverIndexLeftHandFullTurnPitchedSymbol, 0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(middleBentOverIndexLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

		indexBentOverMiddleRightHand = new PositionedHandSymbol(HandBaseSymbol.INDEX_BENT_OVER_MIDDLE.getIswaSymbol(),
				0, 0, 2, symbolFactory.getAllRotationsAndFillsFor(
						HandBaseSymbol.INDEX_BENT_OVER_MIDDLE.getIswaSymbol().getBaseSymbol()));
		Symbol indexBentOverMiddleCrossLeftHandSymbol = symbolFactory.createSymbol("01-02-016-01-01-09");
		indexBentOverMiddleLeftHand = new PositionedHandSymbol(indexBentOverMiddleCrossLeftHandSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(indexBentOverMiddleCrossLeftHandSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossRightHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-016-01-02-01");
		indexBentOverMiddleRightHandHalfTurn = new PositionedHandSymbol(indexBentOverMiddleCrossRightHandHalfTurnSymbol,
				0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexBentOverMiddleCrossRightHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossLeftHandHalfTurnSymbol = symbolFactory.createSymbol("01-02-016-01-02-09");
		indexBentOverMiddleLeftHandHalfTurn = new PositionedHandSymbol(indexBentOverMiddleCrossLeftHandHalfTurnSymbol,
				0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexBentOverMiddleCrossLeftHandHalfTurnSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossRightHandFullTurnSymbol = symbolFactory.createSymbol("01-02-016-01-03-01");
		indexBentOverMiddleRightHandFullTurn = new PositionedHandSymbol(indexBentOverMiddleCrossRightHandFullTurnSymbol,
				0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexBentOverMiddleCrossRightHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossLeftHandFullTurnSymbol = symbolFactory.createSymbol("01-02-016-01-03-09");
		indexBentOverMiddleLeftHandFullTurn = new PositionedHandSymbol(indexBentOverMiddleCrossLeftHandFullTurnSymbol,
				0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexBentOverMiddleCrossLeftHandFullTurnSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossRightHandPitchedSymbol = symbolFactory.createSymbol("01-02-016-01-04-01");
		indexBentOverMiddleRightHandPitched = new PositionedHandSymbol(indexBentOverMiddleCrossRightHandPitchedSymbol,
				0, 0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexBentOverMiddleCrossRightHandPitchedSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossLeftHandPitchedSymbol = symbolFactory.createSymbol("01-02-016-01-04-09");
		indexBentOverMiddleLeftHandPitched = new PositionedHandSymbol(indexBentOverMiddleCrossLeftHandPitchedSymbol, 0,
				0, 2, symbolFactory
						.getAllRotationsAndFillsFor(indexBentOverMiddleCrossLeftHandPitchedSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossRightHandHalfTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-016-01-05-01");
		indexBentOverMiddleRightHandHalfTurnPitched = new PositionedHandSymbol(
				indexBentOverMiddleCrossRightHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexBentOverMiddleCrossRightHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossLeftHandHalfTurnPitchedSymbol = symbolFactory.createSymbol("01-02-016-01-05-09");
		indexBentOverMiddleLeftHandHalfTurnPitched = new PositionedHandSymbol(
				indexBentOverMiddleCrossLeftHandHalfTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexBentOverMiddleCrossLeftHandHalfTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossRightHandFullTurnPitchedSymbol = symbolFactory
				.createSymbol("01-02-016-01-06-01");
		indexBentOverMiddleRightHandFullTurnPitched = new PositionedHandSymbol(
				indexBentOverMiddleCrossRightHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexBentOverMiddleCrossRightHandFullTurnPitchedSymbol.getBaseSymbol()));
		Symbol indexBentOverMiddleCrossLeftHandFullTurnPitchedSymbol = symbolFactory.createSymbol("01-02-016-01-06-09");
		indexBentOverMiddleLeftHandFullTurnPitched = new PositionedHandSymbol(
				indexBentOverMiddleCrossLeftHandFullTurnPitchedSymbol, 0, 0, 2,
				symbolFactory.getAllRotationsAndFillsFor(
						indexBentOverMiddleCrossLeftHandFullTurnPitchedSymbol.getBaseSymbol()));

	}

	@Override
	public void testIsRightHand() {

		assertTrue(indexMiddleRightHand.isRightHand());
		assertTrue(indexMiddleRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleRightHandPitched.isRightHand());
		assertTrue(indexMiddleRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleLeftHand.isRightHand());
		assertFalse(indexMiddleLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleLeftHandPitched.isRightHand());
		assertFalse(indexMiddleLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleOnCircleRightHand.isRightHand());
		assertTrue(indexMiddleOnCircleRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleOnCircleRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleOnCircleRightHandPitched.isRightHand());
		assertTrue(indexMiddleOnCircleRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleOnCircleRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleOnCircleLeftHand.isRightHand());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleOnCircleLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleOnCircleLeftHandPitched.isRightHand());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleOnCircleLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleBentRightHand.isRightHand());
		assertTrue(indexMiddleBentRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleBentRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleBentRightHandPitched.isRightHand());
		assertTrue(indexMiddleBentRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleBentRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleBentLeftHand.isRightHand());
		assertFalse(indexMiddleBentLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleBentLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleBentLeftHandPitched.isRightHand());
		assertFalse(indexMiddleBentLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleBentLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleRaisedKnucklesRightHand.isRightHand());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleRaisedKnucklesRightHandPitched.isRightHand());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleRaisedKnucklesLeftHand.isRightHand());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleRaisedKnucklesLeftHandPitched.isRightHand());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleHingedRightHand.isRightHand());
		assertTrue(indexMiddleHingedRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleHingedRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleHingedRightHandPitched.isRightHand());
		assertTrue(indexMiddleHingedRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleHingedRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleHingedLeftHand.isRightHand());
		assertFalse(indexMiddleHingedLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleHingedLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleHingedLeftHandPitched.isRightHand());
		assertFalse(indexMiddleHingedLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleHingedLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexUpMiddleHingeRightHand.isRightHand());
		assertTrue(indexUpMiddleHingeRightHandHalfTurn.isRightHand());
		assertTrue(indexUpMiddleHingeRightHandFullTurn.isRightHand());
		assertTrue(indexUpMiddleHingeRightHandPitched.isRightHand());
		assertTrue(indexUpMiddleHingeRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexUpMiddleHingeRightHandFullTurnPitched.isRightHand());

		assertFalse(indexUpMiddleHingeLeftHand.isRightHand());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurn.isRightHand());
		assertFalse(indexUpMiddleHingeLeftHandFullTurn.isRightHand());
		assertFalse(indexUpMiddleHingeLeftHandPitched.isRightHand());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexUpMiddleHingeLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexHingeMiddleUpRightHand.isRightHand());
		assertTrue(indexHingeMiddleUpRightHandHalfTurn.isRightHand());
		assertTrue(indexHingeMiddleUpRightHandFullTurn.isRightHand());
		assertTrue(indexHingeMiddleUpRightHandPitched.isRightHand());
		assertTrue(indexHingeMiddleUpRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexHingeMiddleUpRightHandFullTurnPitched.isRightHand());

		assertFalse(indexHingeMiddleUpLeftHand.isRightHand());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurn.isRightHand());
		assertFalse(indexHingeMiddleUpLeftHandFullTurn.isRightHand());
		assertFalse(indexHingeMiddleUpLeftHandPitched.isRightHand());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexHingeMiddleUpLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleUnitRightHand.isRightHand());
		assertTrue(indexMiddleUnitRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleUnitRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleUnitRightHandPitched.isRightHand());
		assertTrue(indexMiddleUnitRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleUnitRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleUnitLeftHand.isRightHand());
		assertFalse(indexMiddleUnitLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleUnitLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleUnitLeftHandPitched.isRightHand());
		assertFalse(indexMiddleUnitLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleUnitLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleUnitIndexBentRightHand.isRightHand());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleUnitIndexBentRightHandPitched.isRightHand());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleUnitIndexBentLeftHand.isRightHand());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleUnitIndexBentLeftHandPitched.isRightHand());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleUnitMiddleBentRightHand.isRightHand());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleUnitMiddleBentRightHandPitched.isRightHand());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleUnitMiddleBentLeftHand.isRightHand());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleUnitMiddleBentLeftHandPitched.isRightHand());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleUnitCupRightHand.isRightHand());
		assertTrue(indexMiddleUnitCupRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleUnitCupRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleUnitCupRightHandPitched.isRightHand());
		assertTrue(indexMiddleUnitCupRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleUnitCupRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleUnitCupLeftHand.isRightHand());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleUnitCupLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleUnitCupLeftHandPitched.isRightHand());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleUnitCupLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleUnitHingeRightHand.isRightHand());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleUnitHingeRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleUnitHingeRightHandPitched.isRightHand());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleUnitHingeRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleUnitHingeLeftHand.isRightHand());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleUnitHingeLeftHandPitched.isRightHand());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleCrossRightHand.isRightHand());
		assertTrue(indexMiddleCrossRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleCrossRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleCrossRightHandPitched.isRightHand());
		assertTrue(indexMiddleCrossRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleCrossRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleCrossLeftHand.isRightHand());
		assertFalse(indexMiddleCrossLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleCrossLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleCrossLeftHandPitched.isRightHand());
		assertFalse(indexMiddleCrossLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleCrossLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexMiddleCrossOnCircleRightHand.isRightHand());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurn.isRightHand());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurn.isRightHand());
		assertTrue(indexMiddleCrossOnCircleRightHandPitched.isRightHand());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurnPitched.isRightHand());

		assertFalse(indexMiddleCrossOnCircleLeftHand.isRightHand());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurn.isRightHand());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurn.isRightHand());
		assertFalse(indexMiddleCrossOnCircleLeftHandPitched.isRightHand());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurnPitched.isRightHand());

		assertTrue(middleBentOverIndexRightHand.isRightHand());
		assertTrue(middleBentOverIndexRightHandHalfTurn.isRightHand());
		assertTrue(middleBentOverIndexRightHandFullTurn.isRightHand());
		assertTrue(middleBentOverIndexRightHandPitched.isRightHand());
		assertTrue(middleBentOverIndexRightHandHalfTurnPitched.isRightHand());
		assertTrue(middleBentOverIndexRightHandFullTurnPitched.isRightHand());

		assertFalse(middleBentOverIndexLeftHand.isRightHand());
		assertFalse(middleBentOverIndexLeftHandHalfTurn.isRightHand());
		assertFalse(middleBentOverIndexLeftHandFullTurn.isRightHand());
		assertFalse(middleBentOverIndexLeftHandPitched.isRightHand());
		assertFalse(middleBentOverIndexLeftHandHalfTurnPitched.isRightHand());
		assertFalse(middleBentOverIndexLeftHandFullTurnPitched.isRightHand());

		assertTrue(indexBentOverMiddleRightHand.isRightHand());
		assertTrue(indexBentOverMiddleRightHandHalfTurn.isRightHand());
		assertTrue(indexBentOverMiddleRightHandFullTurn.isRightHand());
		assertTrue(indexBentOverMiddleRightHandPitched.isRightHand());
		assertTrue(indexBentOverMiddleRightHandHalfTurnPitched.isRightHand());
		assertTrue(indexBentOverMiddleRightHandFullTurnPitched.isRightHand());

		assertFalse(indexBentOverMiddleLeftHand.isRightHand());
		assertFalse(indexBentOverMiddleLeftHandHalfTurn.isRightHand());
		assertFalse(indexBentOverMiddleLeftHandFullTurn.isRightHand());
		assertFalse(indexBentOverMiddleLeftHandPitched.isRightHand());
		assertFalse(indexBentOverMiddleLeftHandHalfTurnPitched.isRightHand());
		assertFalse(indexBentOverMiddleLeftHandFullTurnPitched.isRightHand());

	}

	@Override
	public void testIsLeftHand() {

		assertFalse(indexMiddleRightHand.isLeftHand());
		assertFalse(indexMiddleRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleRightHandPitched.isLeftHand());
		assertFalse(indexMiddleRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleLeftHand.isLeftHand());
		assertTrue(indexMiddleLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleOnCircleRightHand.isLeftHand());
		assertFalse(indexMiddleOnCircleRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleOnCircleRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleOnCircleRightHandPitched.isLeftHand());
		assertFalse(indexMiddleOnCircleRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleOnCircleRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleOnCircleLeftHand.isLeftHand());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleOnCircleLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleOnCircleLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleOnCircleLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleBentRightHand.isLeftHand());
		assertFalse(indexMiddleBentRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleBentRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleBentRightHandPitched.isLeftHand());
		assertFalse(indexMiddleBentRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleBentRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleBentLeftHand.isLeftHand());
		assertTrue(indexMiddleBentLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleBentLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleBentLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleBentLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleBentLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleRaisedKnucklesRightHand.isLeftHand());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleRaisedKnucklesRightHandPitched.isLeftHand());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleRaisedKnucklesLeftHand.isLeftHand());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleRaisedKnucklesLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleHingedRightHand.isLeftHand());
		assertFalse(indexMiddleHingedRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleHingedRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleHingedRightHandPitched.isLeftHand());
		assertFalse(indexMiddleHingedRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleHingedRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleHingedLeftHand.isLeftHand());
		assertTrue(indexMiddleHingedLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleHingedLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleHingedLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleHingedLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleHingedLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexUpMiddleHingeRightHand.isLeftHand());
		assertFalse(indexUpMiddleHingeRightHandHalfTurn.isLeftHand());
		assertFalse(indexUpMiddleHingeRightHandFullTurn.isLeftHand());
		assertFalse(indexUpMiddleHingeRightHandPitched.isLeftHand());
		assertFalse(indexUpMiddleHingeRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexUpMiddleHingeRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexUpMiddleHingeLeftHand.isLeftHand());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurn.isLeftHand());
		assertTrue(indexUpMiddleHingeLeftHandFullTurn.isLeftHand());
		assertTrue(indexUpMiddleHingeLeftHandPitched.isLeftHand());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexUpMiddleHingeLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexHingeMiddleUpRightHand.isLeftHand());
		assertFalse(indexHingeMiddleUpRightHandHalfTurn.isLeftHand());
		assertFalse(indexHingeMiddleUpRightHandFullTurn.isLeftHand());
		assertFalse(indexHingeMiddleUpRightHandPitched.isLeftHand());
		assertFalse(indexHingeMiddleUpRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexHingeMiddleUpRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexHingeMiddleUpLeftHand.isLeftHand());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurn.isLeftHand());
		assertTrue(indexHingeMiddleUpLeftHandFullTurn.isLeftHand());
		assertTrue(indexHingeMiddleUpLeftHandPitched.isLeftHand());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexHingeMiddleUpLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleUnitRightHand.isLeftHand());
		assertFalse(indexMiddleUnitRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleUnitRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleUnitRightHandPitched.isLeftHand());
		assertFalse(indexMiddleUnitRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleUnitRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleUnitLeftHand.isLeftHand());
		assertTrue(indexMiddleUnitLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleUnitLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleUnitLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleUnitLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleUnitLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleUnitIndexBentRightHand.isLeftHand());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleUnitIndexBentRightHandPitched.isLeftHand());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleUnitIndexBentLeftHand.isLeftHand());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleUnitIndexBentLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleUnitMiddleBentRightHand.isLeftHand());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleUnitMiddleBentRightHandPitched.isLeftHand());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleUnitMiddleBentLeftHand.isLeftHand());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleUnitMiddleBentLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleUnitCupRightHand.isLeftHand());
		assertFalse(indexMiddleUnitCupRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleUnitCupRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleUnitCupRightHandPitched.isLeftHand());
		assertFalse(indexMiddleUnitCupRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleUnitCupRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleUnitCupLeftHand.isLeftHand());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleUnitCupLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleUnitCupLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleUnitCupLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleUnitHingeRightHand.isLeftHand());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleUnitHingeRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleUnitHingeRightHandPitched.isLeftHand());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleUnitHingeRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleUnitHingeLeftHand.isLeftHand());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleUnitHingeLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleCrossRightHand.isLeftHand());
		assertFalse(indexMiddleCrossRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleCrossRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleCrossRightHandPitched.isLeftHand());
		assertFalse(indexMiddleCrossRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleCrossRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleCrossLeftHand.isLeftHand());
		assertTrue(indexMiddleCrossLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleCrossLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleCrossLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleCrossLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleCrossLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexMiddleCrossOnCircleRightHand.isLeftHand());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurn.isLeftHand());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurn.isLeftHand());
		assertFalse(indexMiddleCrossOnCircleRightHandPitched.isLeftHand());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexMiddleCrossOnCircleLeftHand.isLeftHand());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurn.isLeftHand());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurn.isLeftHand());
		assertTrue(indexMiddleCrossOnCircleLeftHandPitched.isLeftHand());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurnPitched.isLeftHand());

		assertFalse(middleBentOverIndexRightHand.isLeftHand());
		assertFalse(middleBentOverIndexRightHandHalfTurn.isLeftHand());
		assertFalse(middleBentOverIndexRightHandFullTurn.isLeftHand());
		assertFalse(middleBentOverIndexRightHandPitched.isLeftHand());
		assertFalse(middleBentOverIndexRightHandHalfTurnPitched.isLeftHand());
		assertFalse(middleBentOverIndexRightHandFullTurnPitched.isLeftHand());

		assertTrue(middleBentOverIndexLeftHand.isLeftHand());
		assertTrue(middleBentOverIndexLeftHandHalfTurn.isLeftHand());
		assertTrue(middleBentOverIndexLeftHandFullTurn.isLeftHand());
		assertTrue(middleBentOverIndexLeftHandPitched.isLeftHand());
		assertTrue(middleBentOverIndexLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(middleBentOverIndexLeftHandFullTurnPitched.isLeftHand());

		assertFalse(indexBentOverMiddleRightHand.isLeftHand());
		assertFalse(indexBentOverMiddleRightHandHalfTurn.isLeftHand());
		assertFalse(indexBentOverMiddleRightHandFullTurn.isLeftHand());
		assertFalse(indexBentOverMiddleRightHandPitched.isLeftHand());
		assertFalse(indexBentOverMiddleRightHandHalfTurnPitched.isLeftHand());
		assertFalse(indexBentOverMiddleRightHandFullTurnPitched.isLeftHand());

		assertTrue(indexBentOverMiddleLeftHand.isLeftHand());
		assertTrue(indexBentOverMiddleLeftHandHalfTurn.isLeftHand());
		assertTrue(indexBentOverMiddleLeftHandFullTurn.isLeftHand());
		assertTrue(indexBentOverMiddleLeftHandPitched.isLeftHand());
		assertTrue(indexBentOverMiddleLeftHandHalfTurnPitched.isLeftHand());
		assertTrue(indexBentOverMiddleLeftHandFullTurnPitched.isLeftHand());

	}

	@Override
	public void testCanIncrease() {

		assertFalse(indexMiddleRightHand.canIncrease());
		assertFalse(indexMiddleLeftHand.canIncrease());
		assertFalse(indexMiddleRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleRightHandPitched.canIncrease());
		assertFalse(indexMiddleLeftHandPitched.canIncrease());
		assertFalse(indexMiddleRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleOnCircleRightHand.canIncrease());
		assertFalse(indexMiddleOnCircleLeftHand.canIncrease());
		assertFalse(indexMiddleOnCircleRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleOnCircleRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleOnCircleLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleOnCircleRightHandPitched.canIncrease());
		assertFalse(indexMiddleOnCircleLeftHandPitched.canIncrease());
		assertFalse(indexMiddleOnCircleRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleOnCircleRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleOnCircleLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleBentRightHand.canIncrease());
		assertFalse(indexMiddleBentLeftHand.canIncrease());
		assertFalse(indexMiddleBentRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleBentLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleBentRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleBentLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleBentRightHandPitched.canIncrease());
		assertFalse(indexMiddleBentLeftHandPitched.canIncrease());
		assertFalse(indexMiddleBentRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleBentLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleBentRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleBentLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleRaisedKnucklesRightHand.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHand.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandPitched.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandPitched.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleHingedRightHand.canIncrease());
		assertFalse(indexMiddleHingedLeftHand.canIncrease());
		assertFalse(indexMiddleHingedRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleHingedLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleHingedRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleHingedLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleHingedRightHandPitched.canIncrease());
		assertFalse(indexMiddleHingedLeftHandPitched.canIncrease());
		assertFalse(indexMiddleHingedRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleHingedLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleHingedRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleHingedLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexUpMiddleHingeRightHand.canIncrease());
		assertFalse(indexUpMiddleHingeLeftHand.canIncrease());
		assertFalse(indexUpMiddleHingeRightHandHalfTurn.canIncrease());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurn.canIncrease());
		assertFalse(indexUpMiddleHingeRightHandFullTurn.canIncrease());
		assertFalse(indexUpMiddleHingeLeftHandFullTurn.canIncrease());
		assertFalse(indexUpMiddleHingeRightHandPitched.canIncrease());
		assertFalse(indexUpMiddleHingeLeftHandPitched.canIncrease());
		assertFalse(indexUpMiddleHingeRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexUpMiddleHingeRightHandFullTurnPitched.canIncrease());
		assertFalse(indexUpMiddleHingeLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexHingeMiddleUpRightHand.canIncrease());
		assertFalse(indexHingeMiddleUpLeftHand.canIncrease());
		assertFalse(indexHingeMiddleUpRightHandHalfTurn.canIncrease());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurn.canIncrease());
		assertFalse(indexHingeMiddleUpRightHandFullTurn.canIncrease());
		assertFalse(indexHingeMiddleUpLeftHandFullTurn.canIncrease());
		assertFalse(indexHingeMiddleUpRightHandPitched.canIncrease());
		assertFalse(indexHingeMiddleUpLeftHandPitched.canIncrease());
		assertFalse(indexHingeMiddleUpRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexHingeMiddleUpRightHandFullTurnPitched.canIncrease());
		assertFalse(indexHingeMiddleUpLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleUnitRightHand.canIncrease());
		assertFalse(indexMiddleUnitLeftHand.canIncrease());
		assertFalse(indexMiddleUnitRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitRightHandPitched.canIncrease());
		assertFalse(indexMiddleUnitLeftHandPitched.canIncrease());
		assertFalse(indexMiddleUnitRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleUnitIndexBentRightHand.canIncrease());
		assertFalse(indexMiddleUnitIndexBentLeftHand.canIncrease());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitIndexBentRightHandPitched.canIncrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandPitched.canIncrease());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleUnitMiddleBentRightHand.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHand.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandPitched.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandPitched.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleUnitCupRightHand.canIncrease());
		assertFalse(indexMiddleUnitCupLeftHand.canIncrease());
		assertFalse(indexMiddleUnitCupRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitCupRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitCupLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitCupRightHandPitched.canIncrease());
		assertFalse(indexMiddleUnitCupLeftHandPitched.canIncrease());
		assertFalse(indexMiddleUnitCupRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitCupRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitCupLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleUnitHingeRightHand.canIncrease());
		assertFalse(indexMiddleUnitHingeLeftHand.canIncrease());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleUnitHingeRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleUnitHingeRightHandPitched.canIncrease());
		assertFalse(indexMiddleUnitHingeLeftHandPitched.canIncrease());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitHingeRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleCrossRightHand.canIncrease());
		assertFalse(indexMiddleCrossLeftHand.canIncrease());
		assertFalse(indexMiddleCrossRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleCrossLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleCrossRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleCrossLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleCrossRightHandPitched.canIncrease());
		assertFalse(indexMiddleCrossLeftHandPitched.canIncrease());
		assertFalse(indexMiddleCrossRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleCrossLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleCrossRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleCrossLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexMiddleCrossOnCircleRightHand.canIncrease());
		assertFalse(indexMiddleCrossOnCircleLeftHand.canIncrease());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurn.canIncrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurn.canIncrease());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurn.canIncrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurn.canIncrease());
		assertFalse(indexMiddleCrossOnCircleRightHandPitched.canIncrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandPitched.canIncrease());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurnPitched.canIncrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canIncrease());

		assertFalse(middleBentOverIndexRightHand.canIncrease());
		assertFalse(middleBentOverIndexLeftHand.canIncrease());
		assertFalse(middleBentOverIndexRightHandHalfTurn.canIncrease());
		assertFalse(middleBentOverIndexLeftHandHalfTurn.canIncrease());
		assertFalse(middleBentOverIndexRightHandFullTurn.canIncrease());
		assertFalse(middleBentOverIndexLeftHandFullTurn.canIncrease());
		assertFalse(middleBentOverIndexRightHandPitched.canIncrease());
		assertFalse(middleBentOverIndexLeftHandPitched.canIncrease());
		assertFalse(middleBentOverIndexRightHandHalfTurnPitched.canIncrease());
		assertFalse(middleBentOverIndexLeftHandHalfTurnPitched.canIncrease());
		assertFalse(middleBentOverIndexRightHandFullTurnPitched.canIncrease());
		assertFalse(middleBentOverIndexLeftHandFullTurnPitched.canIncrease());

		assertFalse(indexBentOverMiddleRightHand.canIncrease());
		assertFalse(indexBentOverMiddleLeftHand.canIncrease());
		assertFalse(indexBentOverMiddleRightHandHalfTurn.canIncrease());
		assertFalse(indexBentOverMiddleLeftHandHalfTurn.canIncrease());
		assertFalse(indexBentOverMiddleRightHandFullTurn.canIncrease());
		assertFalse(indexBentOverMiddleLeftHandFullTurn.canIncrease());
		assertFalse(indexBentOverMiddleRightHandPitched.canIncrease());
		assertFalse(indexBentOverMiddleLeftHandPitched.canIncrease());
		assertFalse(indexBentOverMiddleRightHandHalfTurnPitched.canIncrease());
		assertFalse(indexBentOverMiddleLeftHandHalfTurnPitched.canIncrease());
		assertFalse(indexBentOverMiddleRightHandFullTurnPitched.canIncrease());
		assertFalse(indexBentOverMiddleLeftHandFullTurnPitched.canIncrease());

	}

	@Override
	public void testIncrease() {

	}

	@Override
	public void testCanDecrease() {

		assertFalse(indexMiddleRightHand.canDecrease());
		assertFalse(indexMiddleLeftHand.canDecrease());
		assertFalse(indexMiddleRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleRightHandPitched.canDecrease());
		assertFalse(indexMiddleLeftHandPitched.canDecrease());
		assertFalse(indexMiddleRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleOnCircleRightHand.canDecrease());
		assertFalse(indexMiddleOnCircleLeftHand.canDecrease());
		assertFalse(indexMiddleOnCircleRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleOnCircleRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleOnCircleLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleOnCircleRightHandPitched.canDecrease());
		assertFalse(indexMiddleOnCircleLeftHandPitched.canDecrease());
		assertFalse(indexMiddleOnCircleRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleOnCircleRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleOnCircleLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleBentRightHand.canDecrease());
		assertFalse(indexMiddleBentLeftHand.canDecrease());
		assertFalse(indexMiddleBentRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleBentLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleBentRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleBentLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleBentRightHandPitched.canDecrease());
		assertFalse(indexMiddleBentLeftHandPitched.canDecrease());
		assertFalse(indexMiddleBentRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleBentLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleBentRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleBentLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleRaisedKnucklesRightHand.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHand.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandPitched.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandPitched.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleHingedRightHand.canDecrease());
		assertFalse(indexMiddleHingedLeftHand.canDecrease());
		assertFalse(indexMiddleHingedRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleHingedLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleHingedRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleHingedLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleHingedRightHandPitched.canDecrease());
		assertFalse(indexMiddleHingedLeftHandPitched.canDecrease());
		assertFalse(indexMiddleHingedRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleHingedLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleHingedRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleHingedLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexUpMiddleHingeRightHand.canDecrease());
		assertFalse(indexUpMiddleHingeLeftHand.canDecrease());
		assertFalse(indexUpMiddleHingeRightHandHalfTurn.canDecrease());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurn.canDecrease());
		assertFalse(indexUpMiddleHingeRightHandFullTurn.canDecrease());
		assertFalse(indexUpMiddleHingeLeftHandFullTurn.canDecrease());
		assertFalse(indexUpMiddleHingeRightHandPitched.canDecrease());
		assertFalse(indexUpMiddleHingeLeftHandPitched.canDecrease());
		assertFalse(indexUpMiddleHingeRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexUpMiddleHingeRightHandFullTurnPitched.canDecrease());
		assertFalse(indexUpMiddleHingeLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexHingeMiddleUpRightHand.canDecrease());
		assertFalse(indexHingeMiddleUpLeftHand.canDecrease());
		assertFalse(indexHingeMiddleUpRightHandHalfTurn.canDecrease());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurn.canDecrease());
		assertFalse(indexHingeMiddleUpRightHandFullTurn.canDecrease());
		assertFalse(indexHingeMiddleUpLeftHandFullTurn.canDecrease());
		assertFalse(indexHingeMiddleUpRightHandPitched.canDecrease());
		assertFalse(indexHingeMiddleUpLeftHandPitched.canDecrease());
		assertFalse(indexHingeMiddleUpRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexHingeMiddleUpRightHandFullTurnPitched.canDecrease());
		assertFalse(indexHingeMiddleUpLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleUnitRightHand.canDecrease());
		assertFalse(indexMiddleUnitLeftHand.canDecrease());
		assertFalse(indexMiddleUnitRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitRightHandPitched.canDecrease());
		assertFalse(indexMiddleUnitLeftHandPitched.canDecrease());
		assertFalse(indexMiddleUnitRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleUnitIndexBentRightHand.canDecrease());
		assertFalse(indexMiddleUnitIndexBentLeftHand.canDecrease());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitIndexBentRightHandPitched.canDecrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandPitched.canDecrease());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleUnitMiddleBentRightHand.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHand.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandPitched.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandPitched.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleUnitCupRightHand.canDecrease());
		assertFalse(indexMiddleUnitCupLeftHand.canDecrease());
		assertFalse(indexMiddleUnitCupRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitCupRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitCupLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitCupRightHandPitched.canDecrease());
		assertFalse(indexMiddleUnitCupLeftHandPitched.canDecrease());
		assertFalse(indexMiddleUnitCupRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitCupRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitCupLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleUnitHingeRightHand.canDecrease());
		assertFalse(indexMiddleUnitHingeLeftHand.canDecrease());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleUnitHingeRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleUnitHingeRightHandPitched.canDecrease());
		assertFalse(indexMiddleUnitHingeLeftHandPitched.canDecrease());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitHingeRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleCrossRightHand.canDecrease());
		assertFalse(indexMiddleCrossLeftHand.canDecrease());
		assertFalse(indexMiddleCrossRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleCrossLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleCrossRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleCrossLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleCrossRightHandPitched.canDecrease());
		assertFalse(indexMiddleCrossLeftHandPitched.canDecrease());
		assertFalse(indexMiddleCrossRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleCrossLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleCrossRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleCrossLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexMiddleCrossOnCircleRightHand.canDecrease());
		assertFalse(indexMiddleCrossOnCircleLeftHand.canDecrease());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurn.canDecrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurn.canDecrease());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurn.canDecrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurn.canDecrease());
		assertFalse(indexMiddleCrossOnCircleRightHandPitched.canDecrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandPitched.canDecrease());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurnPitched.canDecrease());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canDecrease());

		assertFalse(middleBentOverIndexRightHand.canDecrease());
		assertFalse(middleBentOverIndexLeftHand.canDecrease());
		assertFalse(middleBentOverIndexRightHandHalfTurn.canDecrease());
		assertFalse(middleBentOverIndexLeftHandHalfTurn.canDecrease());
		assertFalse(middleBentOverIndexRightHandFullTurn.canDecrease());
		assertFalse(middleBentOverIndexLeftHandFullTurn.canDecrease());
		assertFalse(middleBentOverIndexRightHandPitched.canDecrease());
		assertFalse(middleBentOverIndexLeftHandPitched.canDecrease());
		assertFalse(middleBentOverIndexRightHandHalfTurnPitched.canDecrease());
		assertFalse(middleBentOverIndexLeftHandHalfTurnPitched.canDecrease());
		assertFalse(middleBentOverIndexRightHandFullTurnPitched.canDecrease());
		assertFalse(middleBentOverIndexLeftHandFullTurnPitched.canDecrease());

		assertFalse(indexBentOverMiddleRightHand.canDecrease());
		assertFalse(indexBentOverMiddleLeftHand.canDecrease());
		assertFalse(indexBentOverMiddleRightHandHalfTurn.canDecrease());
		assertFalse(indexBentOverMiddleLeftHandHalfTurn.canDecrease());
		assertFalse(indexBentOverMiddleRightHandFullTurn.canDecrease());
		assertFalse(indexBentOverMiddleLeftHandFullTurn.canDecrease());
		assertFalse(indexBentOverMiddleRightHandPitched.canDecrease());
		assertFalse(indexBentOverMiddleLeftHandPitched.canDecrease());
		assertFalse(indexBentOverMiddleRightHandHalfTurnPitched.canDecrease());
		assertFalse(indexBentOverMiddleLeftHandHalfTurnPitched.canDecrease());
		assertFalse(indexBentOverMiddleRightHandFullTurnPitched.canDecrease());
		assertFalse(indexBentOverMiddleLeftHandFullTurnPitched.canDecrease());

	}

	@Override
	public void testDecrease() {

	}

	@Override
	public void testCanRotate() {

		assertTrue(indexMiddleRightHand.canRotate());
		assertTrue(indexMiddleLeftHand.canRotate());
		assertTrue(indexMiddleRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleRightHandFullTurn.canRotate());
		assertTrue(indexMiddleLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleRightHandPitched.canRotate());
		assertTrue(indexMiddleLeftHandPitched.canRotate());
		assertTrue(indexMiddleRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleOnCircleRightHand.canRotate());
		assertTrue(indexMiddleOnCircleLeftHand.canRotate());
		assertTrue(indexMiddleOnCircleRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleOnCircleRightHandFullTurn.canRotate());
		assertTrue(indexMiddleOnCircleLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleOnCircleRightHandPitched.canRotate());
		assertTrue(indexMiddleOnCircleLeftHandPitched.canRotate());
		assertTrue(indexMiddleOnCircleRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleOnCircleRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleOnCircleLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleBentRightHand.canRotate());
		assertTrue(indexMiddleBentLeftHand.canRotate());
		assertTrue(indexMiddleBentRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleBentLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleBentRightHandFullTurn.canRotate());
		assertTrue(indexMiddleBentLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleBentRightHandPitched.canRotate());
		assertTrue(indexMiddleBentLeftHandPitched.canRotate());
		assertTrue(indexMiddleBentRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleBentLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleBentRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleBentLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleRaisedKnucklesRightHand.canRotate());
		assertTrue(indexMiddleRaisedKnucklesLeftHand.canRotate());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurn.canRotate());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleRaisedKnucklesRightHandPitched.canRotate());
		assertTrue(indexMiddleRaisedKnucklesLeftHandPitched.canRotate());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleHingedRightHand.canRotate());
		assertTrue(indexMiddleHingedLeftHand.canRotate());
		assertTrue(indexMiddleHingedRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleHingedLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleHingedRightHandFullTurn.canRotate());
		assertTrue(indexMiddleHingedLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleHingedRightHandPitched.canRotate());
		assertTrue(indexMiddleHingedLeftHandPitched.canRotate());
		assertTrue(indexMiddleHingedRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleHingedLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleHingedRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleHingedLeftHandFullTurnPitched.canRotate());

		assertTrue(indexUpMiddleHingeRightHand.canRotate());
		assertTrue(indexUpMiddleHingeLeftHand.canRotate());
		assertTrue(indexUpMiddleHingeRightHandHalfTurn.canRotate());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurn.canRotate());
		assertTrue(indexUpMiddleHingeRightHandFullTurn.canRotate());
		assertTrue(indexUpMiddleHingeLeftHandFullTurn.canRotate());
		assertTrue(indexUpMiddleHingeRightHandPitched.canRotate());
		assertTrue(indexUpMiddleHingeLeftHandPitched.canRotate());
		assertTrue(indexUpMiddleHingeRightHandHalfTurnPitched.canRotate());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexUpMiddleHingeRightHandFullTurnPitched.canRotate());
		assertTrue(indexUpMiddleHingeLeftHandFullTurnPitched.canRotate());

		assertTrue(indexHingeMiddleUpRightHand.canRotate());
		assertTrue(indexHingeMiddleUpLeftHand.canRotate());
		assertTrue(indexHingeMiddleUpRightHandHalfTurn.canRotate());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurn.canRotate());
		assertTrue(indexHingeMiddleUpRightHandFullTurn.canRotate());
		assertTrue(indexHingeMiddleUpLeftHandFullTurn.canRotate());
		assertTrue(indexHingeMiddleUpRightHandPitched.canRotate());
		assertTrue(indexHingeMiddleUpLeftHandPitched.canRotate());
		assertTrue(indexHingeMiddleUpRightHandHalfTurnPitched.canRotate());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexHingeMiddleUpRightHandFullTurnPitched.canRotate());
		assertTrue(indexHingeMiddleUpLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleUnitRightHand.canRotate());
		assertTrue(indexMiddleUnitLeftHand.canRotate());
		assertTrue(indexMiddleUnitRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitRightHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitRightHandPitched.canRotate());
		assertTrue(indexMiddleUnitLeftHandPitched.canRotate());
		assertTrue(indexMiddleUnitRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleUnitLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleUnitIndexBentRightHand.canRotate());
		assertTrue(indexMiddleUnitIndexBentLeftHand.canRotate());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitIndexBentRightHandPitched.canRotate());
		assertTrue(indexMiddleUnitIndexBentLeftHandPitched.canRotate());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleUnitMiddleBentRightHand.canRotate());
		assertTrue(indexMiddleUnitMiddleBentLeftHand.canRotate());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitMiddleBentRightHandPitched.canRotate());
		assertTrue(indexMiddleUnitMiddleBentLeftHandPitched.canRotate());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleUnitCupRightHand.canRotate());
		assertTrue(indexMiddleUnitCupLeftHand.canRotate());
		assertTrue(indexMiddleUnitCupRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitCupRightHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitCupLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitCupRightHandPitched.canRotate());
		assertTrue(indexMiddleUnitCupLeftHandPitched.canRotate());
		assertTrue(indexMiddleUnitCupRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitCupRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleUnitCupLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleUnitHingeRightHand.canRotate());
		assertTrue(indexMiddleUnitHingeLeftHand.canRotate());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleUnitHingeRightHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleUnitHingeRightHandPitched.canRotate());
		assertTrue(indexMiddleUnitHingeLeftHandPitched.canRotate());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleUnitHingeRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleCrossRightHand.canRotate());
		assertTrue(indexMiddleCrossLeftHand.canRotate());
		assertTrue(indexMiddleCrossRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleCrossLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleCrossRightHandFullTurn.canRotate());
		assertTrue(indexMiddleCrossLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleCrossRightHandPitched.canRotate());
		assertTrue(indexMiddleCrossLeftHandPitched.canRotate());
		assertTrue(indexMiddleCrossRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleCrossLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleCrossRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleCrossLeftHandFullTurnPitched.canRotate());

		assertTrue(indexMiddleCrossOnCircleRightHand.canRotate());
		assertTrue(indexMiddleCrossOnCircleLeftHand.canRotate());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurn.canRotate());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurn.canRotate());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurn.canRotate());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurn.canRotate());
		assertTrue(indexMiddleCrossOnCircleRightHandPitched.canRotate());
		assertTrue(indexMiddleCrossOnCircleLeftHandPitched.canRotate());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurnPitched.canRotate());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canRotate());

		assertTrue(middleBentOverIndexRightHand.canRotate());
		assertTrue(middleBentOverIndexLeftHand.canRotate());
		assertTrue(middleBentOverIndexRightHandHalfTurn.canRotate());
		assertTrue(middleBentOverIndexLeftHandHalfTurn.canRotate());
		assertTrue(middleBentOverIndexRightHandFullTurn.canRotate());
		assertTrue(middleBentOverIndexLeftHandFullTurn.canRotate());
		assertTrue(middleBentOverIndexRightHandPitched.canRotate());
		assertTrue(middleBentOverIndexLeftHandPitched.canRotate());
		assertTrue(middleBentOverIndexRightHandHalfTurnPitched.canRotate());
		assertTrue(middleBentOverIndexLeftHandHalfTurnPitched.canRotate());
		assertTrue(middleBentOverIndexRightHandFullTurnPitched.canRotate());
		assertTrue(middleBentOverIndexLeftHandFullTurnPitched.canRotate());

		assertTrue(indexBentOverMiddleRightHand.canRotate());
		assertTrue(indexBentOverMiddleLeftHand.canRotate());
		assertTrue(indexBentOverMiddleRightHandHalfTurn.canRotate());
		assertTrue(indexBentOverMiddleLeftHandHalfTurn.canRotate());
		assertTrue(indexBentOverMiddleRightHandFullTurn.canRotate());
		assertTrue(indexBentOverMiddleLeftHandFullTurn.canRotate());
		assertTrue(indexBentOverMiddleRightHandPitched.canRotate());
		assertTrue(indexBentOverMiddleLeftHandPitched.canRotate());
		assertTrue(indexBentOverMiddleRightHandHalfTurnPitched.canRotate());
		assertTrue(indexBentOverMiddleLeftHandHalfTurnPitched.canRotate());
		assertTrue(indexBentOverMiddleRightHandFullTurnPitched.canRotate());
		assertTrue(indexBentOverMiddleLeftHandFullTurnPitched.canRotate());

	}

	@Override
	public void testRotateClockwise() {

		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-08"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-07"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-06"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-05"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-04"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-03"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-02"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHand.getSymbol());

		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-10"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-11"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-12"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-13"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-14"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-15"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-16"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHand.getSymbol());

		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-08"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-07"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-06"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-05"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-04"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-03"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-02"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHandHalfTurn.getSymbol());

		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-10"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-11"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-12"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-13"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-14"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-15"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-16"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHandHalfTurn.getSymbol());

		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-08"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-07"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-06"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-05"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-04"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-03"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-02"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHandFullTurn.getSymbol());

		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-10"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-11"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-12"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-13"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-14"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-15"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-16"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHandFullTurn.getSymbol());

		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-08"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-07"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-06"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-05"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-04"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-03"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-02"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHandPitched.getSymbol());

		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-10"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-11"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-12"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-13"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-14"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-15"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-16"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHandPitched.getSymbol());

		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-08"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-07"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-06"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-05"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-04"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-03"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-02"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());

		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-10"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-11"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-12"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-13"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-14"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-15"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-16"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-08"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-07"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-06"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-05"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-04"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-03"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-02"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandFullTurnPitched.getSymbol());

		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-10"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-11"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-12"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-13"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-14"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-15"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-16"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-08"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-07"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-06"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-05"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-04"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-03"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-02"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"), indexMiddleOnCircleRightHand.getSymbol());

		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-10"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-11"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-12"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-13"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-14"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-15"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-16"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHand.getSymbol());

		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-08"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-07"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-06"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-05"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-04"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-03"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-02"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-10"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-11"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-12"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-13"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-14"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-15"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-16"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-08"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-07"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-06"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-05"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-04"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-03"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-02"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());

		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-10"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-11"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-12"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-13"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-14"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-15"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-16"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-08"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-07"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-06"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-05"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-04"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-03"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-02"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"), indexMiddleOnCircleRightHandPitched.getSymbol());

		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-10"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-11"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-12"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-13"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-14"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-15"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-16"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());

		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-08"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-07"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-06"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-05"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-04"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-03"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-02"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-10"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-11"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-12"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-13"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-14"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-15"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-16"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-08"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-07"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-06"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-05"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-04"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-03"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-02"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-10"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-11"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-12"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-13"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-14"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-15"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-16"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());

		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-08"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-07"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-06"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-05"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-04"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-03"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-02"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHand.getSymbol());

		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-10"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-11"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-12"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-13"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-14"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-15"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-16"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHand.getSymbol());

		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-08"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-07"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-06"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-05"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-04"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-03"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-02"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-10"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-11"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-12"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-13"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-14"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-15"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-16"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-08"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-07"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-06"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-05"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-04"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-03"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-02"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-10"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-11"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-12"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-13"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-14"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-15"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-16"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-08"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-07"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-06"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-05"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-04"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-03"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-02"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"), indexMiddleBentRightHandPitched.getSymbol());

		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-10"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-11"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-12"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-13"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-14"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-15"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-16"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"), indexMiddleBentLeftHandPitched.getSymbol());

		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-08"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-07"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-06"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-05"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-04"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-03"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-02"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-10"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-11"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-12"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-13"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-14"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-15"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-16"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-08"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-07"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-06"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-05"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-04"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-03"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-02"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-10"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-11"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-12"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-13"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-14"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-15"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-16"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-08"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-07"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-06"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-05"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-04"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-03"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-02"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());

		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-10"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-11"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-12"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-13"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-14"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-15"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-16"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-08"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-07"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-06"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-05"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-04"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-03"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-02"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-10"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-11"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-12"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-13"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-14"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-15"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-16"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-08"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-07"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-06"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-05"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-04"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-03"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-02"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-10"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-11"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-12"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-13"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-14"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-15"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-16"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-08"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-07"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-06"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-05"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-04"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-03"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-02"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-10"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-11"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-12"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-13"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-14"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-15"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-16"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-08"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-07"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-06"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-05"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-04"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-03"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-02"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-10"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-11"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-12"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-13"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-14"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-15"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-16"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-08"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-07"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-06"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-05"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-04"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-03"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-02"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-10"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-11"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-12"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-13"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-14"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-15"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-16"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());

		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-08"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-07"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-06"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-05"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-04"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-03"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-02"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHand.getSymbol());

		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-10"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-11"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-12"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-13"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-14"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-15"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-16"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHand.getSymbol());

		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-08"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-07"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-06"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-05"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-04"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-03"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-02"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());

		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-10"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-11"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-12"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-13"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-14"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-15"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-16"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());

		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-08"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-07"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-06"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-05"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-04"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-03"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-02"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedRightHandFullTurn.getSymbol());

		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-10"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-11"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-12"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-13"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-14"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-15"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-16"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());

		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-08"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-07"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-06"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-05"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-04"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-03"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-02"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"), indexMiddleHingedRightHandPitched.getSymbol());

		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-10"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-11"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-12"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-13"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-14"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-15"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-16"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"), indexMiddleHingedLeftHandPitched.getSymbol());

		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-08"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-07"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-06"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-05"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-04"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-03"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-02"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());

		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-10"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-11"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-12"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-13"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-14"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-15"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-16"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());

		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-08"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-07"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-06"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-05"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-04"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-03"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-02"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());

		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-10"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-11"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-12"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-13"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-14"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-15"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-16"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-08"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-07"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-06"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-05"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-04"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-03"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-02"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHand.getSymbol());

		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-10"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-11"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-12"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-13"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-14"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-15"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-16"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHand.getSymbol());

		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-08"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-07"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-06"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-05"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-04"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-03"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-02"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-10"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-11"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-12"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-13"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-14"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-15"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-16"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());

		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-08"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-07"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-06"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-05"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-04"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-03"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-02"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());

		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-10"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-11"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-12"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-13"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-14"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-15"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-16"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());

		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-08"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-07"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-06"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-05"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-04"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-03"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-02"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"), indexUpMiddleHingeRightHandPitched.getSymbol());

		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-10"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-11"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-12"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-13"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-14"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-15"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-16"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());

		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-08"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-07"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-06"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-05"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-04"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-03"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-02"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-10"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-11"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-12"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-13"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-14"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-15"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-16"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-08"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-07"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-06"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-05"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-04"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-03"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-02"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-10"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-11"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-12"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-13"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-14"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-15"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-16"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-08"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-07"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-06"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-05"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-04"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-03"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-02"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHand.getSymbol());

		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-10"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-11"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-12"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-13"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-14"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-15"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-16"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHand.getSymbol());

		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-08"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-07"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-06"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-05"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-04"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-03"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-02"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-10"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-11"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-12"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-13"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-14"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-15"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-16"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());

		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-08"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-07"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-06"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-05"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-04"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-03"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-02"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());

		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-10"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-11"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-12"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-13"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-14"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-15"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-16"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());

		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-08"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-07"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-06"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-05"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-04"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-03"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-02"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"), indexHingeMiddleUpRightHandPitched.getSymbol());

		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-10"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-11"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-12"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-13"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-14"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-15"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-16"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());

		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-08"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-07"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-06"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-05"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-04"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-03"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-02"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-10"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-11"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-12"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-13"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-14"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-15"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-16"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-08"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-07"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-06"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-05"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-04"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-03"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-02"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-10"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-11"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-12"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-13"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-14"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-15"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-16"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-08"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-07"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-06"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-05"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-04"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-03"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-02"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHand.getSymbol());

		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-10"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-11"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-12"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-13"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-14"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-15"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-16"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHand.getSymbol());

		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-08"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-07"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-06"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-05"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-04"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-03"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-02"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());

		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-10"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-11"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-12"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-13"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-14"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-15"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-16"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());

		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-08"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-07"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-06"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-05"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-04"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-03"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-02"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitRightHandFullTurn.getSymbol());

		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-10"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-11"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-12"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-13"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-14"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-15"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-16"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());

		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-08"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-07"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-06"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-05"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-04"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-03"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-02"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"), indexMiddleUnitRightHandPitched.getSymbol());

		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-10"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-11"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-12"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-13"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-14"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-15"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-16"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"), indexMiddleUnitLeftHandPitched.getSymbol());

		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-08"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-07"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-06"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-05"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-04"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-03"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-02"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-10"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-11"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-12"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-13"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-14"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-15"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-16"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-08"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-07"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-06"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-05"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-04"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-03"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-02"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-10"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-11"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-12"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-13"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-14"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-15"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-16"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-08"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-07"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-06"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-05"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-04"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-03"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-02"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"), indexMiddleUnitIndexBentRightHand.getSymbol());

		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-10"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-11"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-12"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-13"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-14"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-15"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-16"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-08"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-07"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-06"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-05"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-04"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-03"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-02"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-10"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-11"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-12"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-13"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-14"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-15"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-16"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-08"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-07"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-06"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-05"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-04"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-03"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-02"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-10"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-11"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-12"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-13"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-14"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-15"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-16"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-08"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-07"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-06"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-05"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-04"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-03"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-02"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-10"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-11"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-12"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-13"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-14"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-15"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-16"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-08"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-07"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-06"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-05"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-04"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-03"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-02"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-10"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-11"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-12"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-13"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-14"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-15"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-16"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-08"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-07"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-06"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-05"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-04"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-03"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-02"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-10"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-11"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-12"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-13"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-14"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-15"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-16"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-08"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-07"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-06"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-05"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-04"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-03"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-02"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());

		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-10"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-11"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-12"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-13"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-14"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-15"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-16"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-08"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-07"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-06"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-05"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-04"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-03"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-02"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-10"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-11"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-12"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-13"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-14"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-15"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-16"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-08"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-07"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-06"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-05"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-04"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-03"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-02"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-10"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-11"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-12"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-13"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-14"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-15"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-16"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-08"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-07"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-06"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-05"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-04"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-03"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-02"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-10"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-11"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-12"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-13"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-14"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-15"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-16"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-08"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-07"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-06"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-05"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-04"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-03"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-02"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-10"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-11"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-12"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-13"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-14"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-15"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-16"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-08"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-07"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-06"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-05"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-04"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-03"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-02"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-10"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-11"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-12"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-13"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-14"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-15"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-16"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-08"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-07"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-06"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-05"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-04"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-03"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-02"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHand.getSymbol());

		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-10"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-11"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-12"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-13"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-14"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-15"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-16"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHand.getSymbol());

		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-08"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-07"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-06"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-05"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-04"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-03"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-02"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-10"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-11"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-12"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-13"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-14"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-15"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-16"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());

		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-08"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-07"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-06"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-05"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-04"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-03"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-02"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());

		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-10"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-11"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-12"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-13"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-14"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-15"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-16"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());

		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-08"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-07"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-06"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-05"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-04"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-03"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-02"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"), indexMiddleUnitCupRightHandPitched.getSymbol());

		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-10"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-11"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-12"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-13"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-14"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-15"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-16"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());

		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-08"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-07"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-06"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-05"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-04"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-03"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-02"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-10"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-11"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-12"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-13"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-14"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-15"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-16"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-08"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-07"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-06"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-05"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-04"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-03"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-02"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-10"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-11"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-12"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-13"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-14"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-15"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-16"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-08"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-07"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-06"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-05"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-04"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-03"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-02"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"), indexMiddleUnitHingeRightHand.getSymbol());

		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-10"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-11"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-12"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-13"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-14"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-15"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-16"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"), indexMiddleUnitHingeLeftHand.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-08"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-07"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-06"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-05"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-04"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-03"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-02"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-10"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-11"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-12"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-13"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-14"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-15"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-16"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());

		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-08"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-07"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-06"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-05"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-04"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-03"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-02"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-10"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-11"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-12"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-13"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-14"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-15"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-16"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());

		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-08"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-07"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-06"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-05"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-04"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-03"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-02"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());

		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-10"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-11"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-12"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-13"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-14"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-15"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-16"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-08"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-07"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-06"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-05"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-04"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-03"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-02"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-10"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-11"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-12"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-13"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-14"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-15"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-16"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-08"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-07"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-06"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-05"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-04"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-03"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-02"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-10"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-11"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-12"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-13"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-14"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-15"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-16"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-08"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-07"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-06"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-05"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-04"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-03"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-02"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHand.getSymbol());

		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-10"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-11"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-12"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-13"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-14"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-15"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-16"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHand.getSymbol());

		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-08"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-07"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-06"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-05"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-04"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-03"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-02"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());

		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-10"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-11"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-12"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-13"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-14"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-15"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-16"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());

		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-08"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-07"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-06"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-05"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-04"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-03"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-02"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossRightHandFullTurn.getSymbol());

		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-10"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-11"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-12"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-13"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-14"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-15"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-16"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());

		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-08"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-07"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-06"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-05"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-04"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-03"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-02"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"), indexMiddleCrossRightHandPitched.getSymbol());

		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-10"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-11"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-12"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-13"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-14"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-15"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-16"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"), indexMiddleCrossLeftHandPitched.getSymbol());

		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-08"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-07"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-06"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-05"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-04"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-03"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-02"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-10"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-11"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-12"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-13"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-14"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-15"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-16"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-08"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-07"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-06"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-05"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-04"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-03"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-02"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-10"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-11"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-12"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-13"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-14"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-15"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-16"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-08"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-07"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-06"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-05"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-04"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-03"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-02"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"), indexMiddleCrossOnCircleRightHand.getSymbol());

		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-10"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-11"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-12"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-13"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-14"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-15"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-16"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-08"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-07"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-06"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-05"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-04"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-03"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-02"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-10"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-11"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-12"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-13"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-14"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-15"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-16"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-08"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-07"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-06"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-05"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-04"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-03"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-02"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-10"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-11"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-12"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-13"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-14"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-15"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-16"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-08"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-07"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-06"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-05"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-04"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-03"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-02"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-10"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-11"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-12"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-13"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-14"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-15"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-16"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-08"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-07"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-06"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-05"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-04"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-03"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-02"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-10"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-11"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-12"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-13"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-14"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-15"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-16"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-08"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-07"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-06"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-05"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-04"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-03"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-02"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-10"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-11"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-12"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-13"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-14"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-15"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-16"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());

		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-08"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-07"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-06"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-05"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-04"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-03"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-02"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"), middleBentOverIndexRightHand.getSymbol());

		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-10"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-11"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-12"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-13"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-14"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-15"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-16"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHand.getSymbol());

		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-08"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-07"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-06"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-05"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-04"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-03"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-02"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());

		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-10"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-11"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-12"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-13"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-14"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-15"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-16"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());

		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-08"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-07"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-06"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-05"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-04"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-03"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-02"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());

		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-10"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-11"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-12"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-13"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-14"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-15"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-16"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());

		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-08"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-07"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-06"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-05"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-04"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-03"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-02"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"), middleBentOverIndexRightHandPitched.getSymbol());

		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-10"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-11"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-12"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-13"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-14"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-15"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-16"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"), middleBentOverIndexLeftHandPitched.getSymbol());

		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-08"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-07"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-06"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-05"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-04"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-03"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-02"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());

		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-10"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-11"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-12"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-13"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-14"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-15"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-16"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());

		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-08"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-07"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-06"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-05"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-04"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-03"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-02"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());

		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-10"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-11"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-12"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-13"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-14"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-15"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-16"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());

		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-08"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-07"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-06"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-05"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-04"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-03"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-02"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"), indexBentOverMiddleRightHand.getSymbol());

		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-10"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-11"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-12"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-13"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-14"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-15"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-16"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHand.getSymbol());

		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-08"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-07"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-06"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-05"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-04"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-03"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-02"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());

		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-10"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-11"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-12"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-13"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-14"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-15"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-16"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());

		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-08"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-07"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-06"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-05"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-04"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-03"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-02"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());

		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-10"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-11"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-12"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-13"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-14"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-15"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-16"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());

		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-08"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-07"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-06"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-05"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-04"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-03"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-02"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"), indexBentOverMiddleRightHandPitched.getSymbol());

		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-10"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-11"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-12"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-13"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-14"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-15"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-16"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"), indexBentOverMiddleLeftHandPitched.getSymbol());

		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-08"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-07"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-06"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-05"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-04"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-03"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-02"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-10"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-11"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-12"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-13"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-14"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-15"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-16"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-08"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-07"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-06"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-05"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-04"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-03"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-02"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-10"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-11"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-12"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-13"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-14"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-15"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-16"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());

	}

	@Override
	public void testRotateCounterClockwise() {

		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-02"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-03"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-04"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-05"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-06"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-07"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-08"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHand.getSymbol());

		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-16"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-15"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-14"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-13"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-12"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-11"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-10"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHand.getSymbol());

		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-02"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-03"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-04"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-05"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-06"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-07"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-08"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHandHalfTurn.getSymbol());

		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-16"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-15"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-14"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-13"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-12"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-11"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-10"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHandHalfTurn.getSymbol());

		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-02"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-03"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-04"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-05"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-06"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-07"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-08"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHandFullTurn.getSymbol());

		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-16"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-15"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-14"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-13"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-12"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-11"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-10"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHandFullTurn.getSymbol());

		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-02"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-03"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-04"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-05"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-06"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-07"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-08"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHandPitched.getSymbol());

		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-16"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-15"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-14"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-13"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-12"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-11"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-10"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHandPitched.getSymbol());

		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-02"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-03"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-04"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-05"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-06"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-07"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-08"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());

		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-16"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-15"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-14"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-13"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-12"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-11"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-10"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-02"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-03"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-04"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-05"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-06"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-07"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-08"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandFullTurnPitched.getSymbol());

		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-16"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-15"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-14"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-13"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-12"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-11"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-10"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-02"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-03"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-04"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-05"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-06"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-07"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-08"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"), indexMiddleOnCircleRightHand.getSymbol());

		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-16"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-15"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-14"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-13"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-12"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-11"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-10"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHand.getSymbol());

		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-02"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-03"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-04"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-05"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-06"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-07"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-08"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-16"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-15"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-14"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-13"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-12"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-11"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-10"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-02"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-03"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-04"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-05"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-06"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-07"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-08"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());

		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-16"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-15"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-14"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-13"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-12"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-11"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-10"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-02"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-03"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-04"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-05"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-06"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-07"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-08"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"), indexMiddleOnCircleRightHandPitched.getSymbol());

		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-16"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-15"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-14"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-13"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-12"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-11"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-10"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());

		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-02"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-03"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-04"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-05"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-06"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-07"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-08"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-16"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-15"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-14"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-13"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-12"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-11"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-10"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-02"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-03"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-04"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-05"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-06"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-07"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-08"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-16"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-15"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-14"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-13"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-12"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-11"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-10"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());

		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-02"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-03"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-04"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-05"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-06"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-07"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-08"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHand.getSymbol());

		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-16"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-15"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-14"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-13"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-12"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-11"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-10"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHand.getSymbol());

		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-02"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-03"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-04"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-05"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-06"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-07"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-08"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-16"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-15"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-14"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-13"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-12"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-11"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-10"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-02"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-03"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-04"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-05"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-06"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-07"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-08"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-16"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-15"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-14"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-13"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-12"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-11"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-10"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-02"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-03"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-04"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-05"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-06"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-07"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-08"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"), indexMiddleBentRightHandPitched.getSymbol());

		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-16"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-15"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-14"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-13"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-12"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-11"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-10"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"), indexMiddleBentLeftHandPitched.getSymbol());

		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-02"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-03"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-04"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-05"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-06"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-07"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-08"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-16"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-15"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-14"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-13"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-12"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-11"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-10"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-02"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-03"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-04"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-05"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-06"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-07"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-08"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-16"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-15"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-14"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-13"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-12"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-11"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-10"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-02"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-03"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-04"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-05"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-06"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-07"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-08"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());

		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-16"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-15"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-14"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-13"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-12"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-11"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-10"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-02"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-03"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-04"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-05"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-06"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-07"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-08"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-16"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-15"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-14"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-13"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-12"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-11"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-10"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-02"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-03"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-04"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-05"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-06"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-07"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-08"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-16"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-15"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-14"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-13"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-12"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-11"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-10"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-02"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-03"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-04"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-05"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-06"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-07"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-08"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-16"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-15"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-14"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-13"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-12"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-11"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-10"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-02"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-03"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-04"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-05"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-06"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-07"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-08"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-16"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-15"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-14"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-13"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-12"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-11"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-10"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-02"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-03"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-04"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-05"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-06"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-07"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-08"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-16"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-15"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-14"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-13"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-12"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-11"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-10"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());

		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-02"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-03"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-04"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-05"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-06"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-07"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-08"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHand.getSymbol());

		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-16"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-15"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-14"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-13"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-12"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-11"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-10"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHand.getSymbol());

		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-02"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-03"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-04"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-05"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-06"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-07"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-08"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());

		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-16"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-15"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-14"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-13"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-12"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-11"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-10"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());

		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-02"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-03"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-04"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-05"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-06"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-07"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-08"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedRightHandFullTurn.getSymbol());

		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-16"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-15"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-14"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-13"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-12"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-11"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-10"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());

		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-02"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-03"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-04"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-05"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-06"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-07"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-08"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"), indexMiddleHingedRightHandPitched.getSymbol());

		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-16"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-15"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-14"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-13"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-12"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-11"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-10"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"), indexMiddleHingedLeftHandPitched.getSymbol());

		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-02"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-03"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-04"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-05"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-06"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-07"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-08"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());

		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-16"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-15"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-14"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-13"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-12"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-11"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-10"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());

		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-02"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-03"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-04"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-05"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-06"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-07"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-08"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());

		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-16"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-15"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-14"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-13"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-12"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-11"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-10"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-02"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-03"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-04"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-05"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-06"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-07"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-08"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHand.getSymbol());

		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-16"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-15"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-14"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-13"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-12"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-11"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-10"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHand.getSymbol());

		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-02"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-03"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-04"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-05"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-06"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-07"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-08"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-16"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-15"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-14"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-13"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-12"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-11"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-10"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());

		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-02"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-03"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-04"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-05"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-06"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-07"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-08"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());

		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-16"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-15"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-14"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-13"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-12"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-11"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-10"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());

		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-02"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-03"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-04"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-05"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-06"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-07"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-08"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"), indexUpMiddleHingeRightHandPitched.getSymbol());

		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-16"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-15"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-14"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-13"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-12"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-11"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-10"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());

		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-02"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-03"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-04"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-05"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-06"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-07"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-08"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-16"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-15"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-14"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-13"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-12"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-11"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-10"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-02"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-03"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-04"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-05"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-06"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-07"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-08"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-16"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-15"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-14"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-13"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-12"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-11"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-10"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-02"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-03"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-04"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-05"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-06"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-07"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-08"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHand.getSymbol());

		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-16"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-15"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-14"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-13"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-12"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-11"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-10"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHand.getSymbol());

		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-02"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-03"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-04"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-05"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-06"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-07"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-08"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-16"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-15"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-14"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-13"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-12"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-11"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-10"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());

		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-02"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-03"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-04"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-05"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-06"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-07"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-08"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());

		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-16"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-15"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-14"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-13"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-12"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-11"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-10"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());

		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-02"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-03"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-04"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-05"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-06"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-07"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-08"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"), indexHingeMiddleUpRightHandPitched.getSymbol());

		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-16"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-15"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-14"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-13"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-12"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-11"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-10"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());

		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-02"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-03"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-04"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-05"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-06"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-07"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-08"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-16"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-15"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-14"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-13"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-12"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-11"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-10"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-02"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-03"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-04"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-05"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-06"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-07"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-08"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-16"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-15"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-14"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-13"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-12"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-11"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-10"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-02"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-03"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-04"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-05"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-06"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-07"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-08"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHand.getSymbol());

		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-16"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-15"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-14"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-13"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-12"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-11"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-10"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHand.getSymbol());

		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-02"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-03"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-04"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-05"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-06"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-07"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-08"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());

		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-16"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-15"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-14"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-13"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-12"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-11"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-10"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());

		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-02"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-03"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-04"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-05"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-06"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-07"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-08"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitRightHandFullTurn.getSymbol());

		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-16"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-15"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-14"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-13"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-12"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-11"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-10"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());

		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-02"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-03"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-04"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-05"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-06"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-07"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-08"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"), indexMiddleUnitRightHandPitched.getSymbol());

		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-16"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-15"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-14"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-13"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-12"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-11"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-10"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"), indexMiddleUnitLeftHandPitched.getSymbol());

		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-02"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-03"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-04"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-05"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-06"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-07"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-08"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-16"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-15"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-14"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-13"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-12"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-11"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-10"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-02"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-03"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-04"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-05"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-06"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-07"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-08"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-16"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-15"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-14"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-13"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-12"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-11"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-10"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-02"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-03"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-04"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-05"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-06"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-07"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-08"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"), indexMiddleUnitIndexBentRightHand.getSymbol());

		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-16"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-15"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-14"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-13"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-12"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-11"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-10"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-02"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-03"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-04"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-05"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-06"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-07"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-08"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-16"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-15"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-14"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-13"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-12"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-11"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-10"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-02"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-03"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-04"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-05"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-06"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-07"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-08"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-16"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-15"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-14"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-13"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-12"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-11"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-10"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-02"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-03"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-04"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-05"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-06"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-07"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-08"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-16"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-15"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-14"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-13"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-12"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-11"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-10"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-02"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-03"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-04"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-05"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-06"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-07"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-08"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-16"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-15"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-14"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-13"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-12"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-11"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-10"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-02"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-03"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-04"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-05"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-06"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-07"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-08"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-16"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-15"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-14"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-13"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-12"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-11"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-10"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-02"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-03"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-04"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-05"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-06"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-07"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-08"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());

		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-16"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-15"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-14"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-13"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-12"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-11"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-10"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-02"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-03"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-04"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-05"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-06"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-07"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-08"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-16"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-15"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-14"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-13"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-12"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-11"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-10"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-02"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-03"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-04"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-05"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-06"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-07"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-08"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-16"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-15"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-14"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-13"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-12"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-11"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-10"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-02"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-03"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-04"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-05"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-06"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-07"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-08"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-16"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-15"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-14"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-13"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-12"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-11"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-10"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-02"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-03"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-04"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-05"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-06"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-07"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-08"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-16"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-15"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-14"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-13"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-12"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-11"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-10"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-02"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-03"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-04"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-05"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-06"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-07"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-08"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-16"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-15"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-14"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-13"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-12"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-11"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-10"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-02"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-03"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-04"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-05"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-06"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-07"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-08"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHand.getSymbol());

		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-16"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-15"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-14"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-13"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-12"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-11"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-10"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHand.getSymbol());

		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-02"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-03"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-04"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-05"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-06"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-07"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-08"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-16"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-15"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-14"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-13"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-12"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-11"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-10"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());

		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-02"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-03"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-04"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-05"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-06"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-07"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-08"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());

		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-16"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-15"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-14"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-13"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-12"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-11"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-10"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());

		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-02"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-03"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-04"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-05"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-06"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-07"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-08"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"), indexMiddleUnitCupRightHandPitched.getSymbol());

		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-16"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-15"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-14"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-13"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-12"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-11"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-10"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());

		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-02"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-03"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-04"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-05"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-06"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-07"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-08"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-16"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-15"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-14"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-13"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-12"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-11"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-10"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-02"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-03"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-04"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-05"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-06"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-07"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-08"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-16"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-15"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-14"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-13"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-12"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-11"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-10"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-02"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-03"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-04"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-05"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-06"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-07"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-08"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"), indexMiddleUnitHingeRightHand.getSymbol());

		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-16"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-15"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-14"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-13"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-12"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-11"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-10"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"), indexMiddleUnitHingeLeftHand.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-02"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-03"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-04"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-05"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-06"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-07"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-08"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-16"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-15"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-14"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-13"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-12"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-11"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-10"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());

		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-02"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-03"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-04"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-05"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-06"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-07"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-08"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-16"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-15"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-14"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-13"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-12"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-11"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-10"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());

		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-02"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-03"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-04"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-05"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-06"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-07"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-08"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());

		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-16"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-15"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-14"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-13"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-12"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-11"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-10"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-02"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-03"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-04"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-05"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-06"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-07"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-08"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-16"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-15"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-14"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-13"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-12"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-11"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-10"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-02"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-03"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-04"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-05"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-06"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-07"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-08"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-16"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-15"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-14"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-13"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-12"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-11"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-10"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-02"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-03"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-04"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-05"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-06"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-07"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-08"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHand.getSymbol());

		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-16"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-15"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-14"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-13"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-12"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-11"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-10"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHand.getSymbol());

		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-02"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-03"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-04"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-05"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-06"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-07"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-08"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());

		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-16"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-15"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-14"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-13"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-12"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-11"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-10"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());

		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-02"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-03"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-04"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-05"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-06"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-07"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-08"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossRightHandFullTurn.getSymbol());

		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-16"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-15"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-14"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-13"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-12"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-11"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-10"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());

		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-02"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-03"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-04"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-05"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-06"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-07"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-08"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"), indexMiddleCrossRightHandPitched.getSymbol());

		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-16"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-15"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-14"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-13"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-12"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-11"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-10"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"), indexMiddleCrossLeftHandPitched.getSymbol());

		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-02"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-03"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-04"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-05"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-06"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-07"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-08"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-16"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-15"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-14"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-13"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-12"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-11"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-10"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-02"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-03"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-04"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-05"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-06"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-07"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-08"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-16"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-15"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-14"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-13"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-12"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-11"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-10"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-02"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-03"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-04"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-05"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-06"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-07"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-08"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"), indexMiddleCrossOnCircleRightHand.getSymbol());

		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-16"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-15"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-14"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-13"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-12"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-11"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-10"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-02"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-03"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-04"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-05"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-06"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-07"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-08"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-16"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-15"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-14"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-13"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-12"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-11"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-10"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-02"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-03"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-04"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-05"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-06"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-07"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-08"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-16"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-15"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-14"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-13"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-12"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-11"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-10"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-02"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-03"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-04"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-05"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-06"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-07"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-08"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-16"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-15"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-14"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-13"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-12"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-11"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-10"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-02"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-03"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-04"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-05"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-06"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-07"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-08"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-16"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-15"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-14"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-13"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-12"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-11"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-10"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-02"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-03"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-04"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-05"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-06"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-07"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-08"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-16"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-15"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-14"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-13"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-12"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-11"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-10"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());

		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-02"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-03"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-04"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-05"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-06"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-07"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-08"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"), middleBentOverIndexRightHand.getSymbol());

		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-16"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-15"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-14"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-13"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-12"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-11"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-10"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHand.getSymbol());

		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-02"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-03"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-04"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-05"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-06"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-07"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-08"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());

		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-16"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-15"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-14"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-13"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-12"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-11"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-10"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());

		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-02"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-03"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-04"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-05"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-06"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-07"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-08"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());

		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-16"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-15"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-14"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-13"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-12"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-11"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-10"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());

		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-02"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-03"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-04"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-05"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-06"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-07"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-08"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"), middleBentOverIndexRightHandPitched.getSymbol());

		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-16"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-15"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-14"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-13"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-12"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-11"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-10"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"), middleBentOverIndexLeftHandPitched.getSymbol());

		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-02"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-03"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-04"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-05"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-06"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-07"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-08"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());

		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-16"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-15"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-14"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-13"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-12"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-11"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-10"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());

		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-02"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-03"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-04"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-05"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-06"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-07"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-08"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());

		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-16"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-15"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-14"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-13"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-12"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-11"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-10"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());

		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-02"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-03"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-04"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-05"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-06"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-07"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-08"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"), indexBentOverMiddleRightHand.getSymbol());

		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-16"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-15"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-14"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-13"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-12"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-11"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-10"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHand.getSymbol());

		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-02"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-03"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-04"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-05"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-06"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-07"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-08"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());

		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-16"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-15"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-14"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-13"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-12"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-11"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-10"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());

		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-02"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-03"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-04"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-05"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-06"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-07"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-08"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());

		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-16"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-15"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-14"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-13"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-12"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-11"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-10"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());

		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-02"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-03"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-04"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-05"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-06"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-07"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-08"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"), indexBentOverMiddleRightHandPitched.getSymbol());

		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-16"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-15"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-14"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-13"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-12"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-11"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-10"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"), indexBentOverMiddleLeftHandPitched.getSymbol());

		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-02"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-03"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-04"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-05"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-06"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-07"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-08"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-16"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-15"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-14"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-13"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-12"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-11"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-10"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-02"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-03"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-04"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-05"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-06"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-07"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-08"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-16"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-15"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-14"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-13"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-12"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-11"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-10"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.rotateCounterClockwise();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());

	}

	@Override
	public void testCanMirror() {

		assertTrue(indexMiddleRightHand.canMirror());
		assertTrue(indexMiddleLeftHand.canMirror());
		assertTrue(indexMiddleRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleRightHandFullTurn.canMirror());
		assertTrue(indexMiddleLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleRightHandPitched.canMirror());
		assertTrue(indexMiddleLeftHandPitched.canMirror());
		assertTrue(indexMiddleRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleOnCircleRightHand.canMirror());
		assertTrue(indexMiddleOnCircleLeftHand.canMirror());
		assertTrue(indexMiddleOnCircleRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleOnCircleRightHandFullTurn.canMirror());
		assertTrue(indexMiddleOnCircleLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleOnCircleRightHandPitched.canMirror());
		assertTrue(indexMiddleOnCircleLeftHandPitched.canMirror());
		assertTrue(indexMiddleOnCircleRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleOnCircleRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleOnCircleLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleBentRightHand.canMirror());
		assertTrue(indexMiddleBentLeftHand.canMirror());
		assertTrue(indexMiddleBentRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleBentLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleBentRightHandFullTurn.canMirror());
		assertTrue(indexMiddleBentLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleBentRightHandPitched.canMirror());
		assertTrue(indexMiddleBentLeftHandPitched.canMirror());
		assertTrue(indexMiddleBentRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleBentLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleBentRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleBentLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleRaisedKnucklesRightHand.canMirror());
		assertTrue(indexMiddleRaisedKnucklesLeftHand.canMirror());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurn.canMirror());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleRaisedKnucklesRightHandPitched.canMirror());
		assertTrue(indexMiddleRaisedKnucklesLeftHandPitched.canMirror());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleHingedRightHand.canMirror());
		assertTrue(indexMiddleHingedLeftHand.canMirror());
		assertTrue(indexMiddleHingedRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleHingedLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleHingedRightHandFullTurn.canMirror());
		assertTrue(indexMiddleHingedLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleHingedRightHandPitched.canMirror());
		assertTrue(indexMiddleHingedLeftHandPitched.canMirror());
		assertTrue(indexMiddleHingedRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleHingedLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleHingedRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleHingedLeftHandFullTurnPitched.canMirror());

		assertTrue(indexUpMiddleHingeRightHand.canMirror());
		assertTrue(indexUpMiddleHingeLeftHand.canMirror());
		assertTrue(indexUpMiddleHingeRightHandHalfTurn.canMirror());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurn.canMirror());
		assertTrue(indexUpMiddleHingeRightHandFullTurn.canMirror());
		assertTrue(indexUpMiddleHingeLeftHandFullTurn.canMirror());
		assertTrue(indexUpMiddleHingeRightHandPitched.canMirror());
		assertTrue(indexUpMiddleHingeLeftHandPitched.canMirror());
		assertTrue(indexUpMiddleHingeRightHandHalfTurnPitched.canMirror());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexUpMiddleHingeRightHandFullTurnPitched.canMirror());
		assertTrue(indexUpMiddleHingeLeftHandFullTurnPitched.canMirror());

		assertTrue(indexHingeMiddleUpRightHand.canMirror());
		assertTrue(indexHingeMiddleUpLeftHand.canMirror());
		assertTrue(indexHingeMiddleUpRightHandHalfTurn.canMirror());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurn.canMirror());
		assertTrue(indexHingeMiddleUpRightHandFullTurn.canMirror());
		assertTrue(indexHingeMiddleUpLeftHandFullTurn.canMirror());
		assertTrue(indexHingeMiddleUpRightHandPitched.canMirror());
		assertTrue(indexHingeMiddleUpLeftHandPitched.canMirror());
		assertTrue(indexHingeMiddleUpRightHandHalfTurnPitched.canMirror());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexHingeMiddleUpRightHandFullTurnPitched.canMirror());
		assertTrue(indexHingeMiddleUpLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleUnitRightHand.canMirror());
		assertTrue(indexMiddleUnitLeftHand.canMirror());
		assertTrue(indexMiddleUnitRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitRightHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitRightHandPitched.canMirror());
		assertTrue(indexMiddleUnitLeftHandPitched.canMirror());
		assertTrue(indexMiddleUnitRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleUnitLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleUnitIndexBentRightHand.canMirror());
		assertTrue(indexMiddleUnitIndexBentLeftHand.canMirror());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitIndexBentRightHandPitched.canMirror());
		assertTrue(indexMiddleUnitIndexBentLeftHandPitched.canMirror());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleUnitMiddleBentRightHand.canMirror());
		assertTrue(indexMiddleUnitMiddleBentLeftHand.canMirror());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitMiddleBentRightHandPitched.canMirror());
		assertTrue(indexMiddleUnitMiddleBentLeftHandPitched.canMirror());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleUnitCupRightHand.canMirror());
		assertTrue(indexMiddleUnitCupLeftHand.canMirror());
		assertTrue(indexMiddleUnitCupRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitCupRightHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitCupLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitCupRightHandPitched.canMirror());
		assertTrue(indexMiddleUnitCupLeftHandPitched.canMirror());
		assertTrue(indexMiddleUnitCupRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitCupRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleUnitCupLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleUnitHingeRightHand.canMirror());
		assertTrue(indexMiddleUnitHingeLeftHand.canMirror());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleUnitHingeRightHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleUnitHingeRightHandPitched.canMirror());
		assertTrue(indexMiddleUnitHingeLeftHandPitched.canMirror());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleUnitHingeRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleCrossRightHand.canMirror());
		assertTrue(indexMiddleCrossLeftHand.canMirror());
		assertTrue(indexMiddleCrossRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleCrossLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleCrossRightHandFullTurn.canMirror());
		assertTrue(indexMiddleCrossLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleCrossRightHandPitched.canMirror());
		assertTrue(indexMiddleCrossLeftHandPitched.canMirror());
		assertTrue(indexMiddleCrossRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleCrossLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleCrossRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleCrossLeftHandFullTurnPitched.canMirror());

		assertTrue(indexMiddleCrossOnCircleRightHand.canMirror());
		assertTrue(indexMiddleCrossOnCircleLeftHand.canMirror());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurn.canMirror());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurn.canMirror());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurn.canMirror());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurn.canMirror());
		assertTrue(indexMiddleCrossOnCircleRightHandPitched.canMirror());
		assertTrue(indexMiddleCrossOnCircleLeftHandPitched.canMirror());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurnPitched.canMirror());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canMirror());

		assertTrue(middleBentOverIndexRightHand.canMirror());
		assertTrue(middleBentOverIndexLeftHand.canMirror());
		assertTrue(middleBentOverIndexRightHandHalfTurn.canMirror());
		assertTrue(middleBentOverIndexLeftHandHalfTurn.canMirror());
		assertTrue(middleBentOverIndexRightHandFullTurn.canMirror());
		assertTrue(middleBentOverIndexLeftHandFullTurn.canMirror());
		assertTrue(middleBentOverIndexRightHandPitched.canMirror());
		assertTrue(middleBentOverIndexLeftHandPitched.canMirror());
		assertTrue(middleBentOverIndexRightHandHalfTurnPitched.canMirror());
		assertTrue(middleBentOverIndexLeftHandHalfTurnPitched.canMirror());
		assertTrue(middleBentOverIndexRightHandFullTurnPitched.canMirror());
		assertTrue(middleBentOverIndexLeftHandFullTurnPitched.canMirror());

		assertTrue(indexBentOverMiddleRightHand.canMirror());
		assertTrue(indexBentOverMiddleLeftHand.canMirror());
		assertTrue(indexBentOverMiddleRightHandHalfTurn.canMirror());
		assertTrue(indexBentOverMiddleLeftHandHalfTurn.canMirror());
		assertTrue(indexBentOverMiddleRightHandFullTurn.canMirror());
		assertTrue(indexBentOverMiddleLeftHandFullTurn.canMirror());
		assertTrue(indexBentOverMiddleRightHandPitched.canMirror());
		assertTrue(indexBentOverMiddleLeftHandPitched.canMirror());
		assertTrue(indexBentOverMiddleRightHandHalfTurnPitched.canMirror());
		assertTrue(indexBentOverMiddleLeftHandHalfTurnPitched.canMirror());
		assertTrue(indexBentOverMiddleRightHandFullTurnPitched.canMirror());
		assertTrue(indexBentOverMiddleLeftHandFullTurnPitched.canMirror());

	}

	@Override
	public void testMirror() {

		indexMiddleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHand.getSymbol());

		indexMiddleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHand.getSymbol());

		indexMiddleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHandHalfTurn.getSymbol());

		indexMiddleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHandHalfTurn.getSymbol());

		indexMiddleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHandFullTurn.getSymbol());

		indexMiddleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHandFullTurn.getSymbol());

		indexMiddleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHandPitched.getSymbol());

		indexMiddleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHandPitched.getSymbol());

		indexMiddleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());

		indexMiddleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandFullTurnPitched.getSymbol());

		indexMiddleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"), indexMiddleOnCircleRightHand.getSymbol());

		indexMiddleOnCircleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHand.getSymbol());

		indexMiddleOnCircleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleOnCircleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());

		indexMiddleOnCircleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleOnCircleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"), indexMiddleOnCircleRightHandPitched.getSymbol());

		indexMiddleOnCircleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());

		indexMiddleOnCircleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());

		indexMiddleBentRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHand.getSymbol());

		indexMiddleBentLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHand.getSymbol());

		indexMiddleBentRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleBentLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleBentRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleBentLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleBentRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"), indexMiddleBentRightHandPitched.getSymbol());

		indexMiddleBentLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"), indexMiddleBentLeftHandPitched.getSymbol());

		indexMiddleBentRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleBentLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleBentRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleBentLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());

		indexMiddleRaisedKnucklesLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());

		indexMiddleHingedRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHand.getSymbol());

		indexMiddleHingedLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHand.getSymbol());

		indexMiddleHingedRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());

		indexMiddleHingedLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());

		indexMiddleHingedRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedRightHandFullTurn.getSymbol());

		indexMiddleHingedLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());

		indexMiddleHingedRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"), indexMiddleHingedRightHandPitched.getSymbol());

		indexMiddleHingedLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"), indexMiddleHingedLeftHandPitched.getSymbol());

		indexMiddleHingedRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());

		indexMiddleHingedLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());

		indexMiddleHingedRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());

		indexMiddleHingedLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHand.getSymbol());

		indexUpMiddleHingeLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHand.getSymbol());

		indexUpMiddleHingeRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());

		indexUpMiddleHingeRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());

		indexUpMiddleHingeLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());

		indexUpMiddleHingeRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"), indexUpMiddleHingeRightHandPitched.getSymbol());

		indexUpMiddleHingeLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());

		indexUpMiddleHingeRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHand.getSymbol());

		indexHingeMiddleUpLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHand.getSymbol());

		indexHingeMiddleUpRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());

		indexHingeMiddleUpRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());

		indexHingeMiddleUpLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());

		indexHingeMiddleUpRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"), indexHingeMiddleUpRightHandPitched.getSymbol());

		indexHingeMiddleUpLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());

		indexHingeMiddleUpRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHand.getSymbol());

		indexMiddleUnitLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHand.getSymbol());

		indexMiddleUnitRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());

		indexMiddleUnitLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());

		indexMiddleUnitRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitRightHandFullTurn.getSymbol());

		indexMiddleUnitLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());

		indexMiddleUnitRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"), indexMiddleUnitRightHandPitched.getSymbol());

		indexMiddleUnitLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"), indexMiddleUnitLeftHandPitched.getSymbol());

		indexMiddleUnitRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"), indexMiddleUnitIndexBentRightHand.getSymbol());

		indexMiddleUnitIndexBentLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());

		indexMiddleUnitMiddleBentLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHand.getSymbol());

		indexMiddleUnitCupLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHand.getSymbol());

		indexMiddleUnitCupRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());

		indexMiddleUnitCupRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());

		indexMiddleUnitCupLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());

		indexMiddleUnitCupRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"), indexMiddleUnitCupRightHandPitched.getSymbol());

		indexMiddleUnitCupLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());

		indexMiddleUnitCupRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"), indexMiddleUnitHingeRightHand.getSymbol());

		indexMiddleUnitHingeLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"), indexMiddleUnitHingeLeftHand.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());

		indexMiddleUnitHingeRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());

		indexMiddleUnitHingeRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());

		indexMiddleUnitHingeLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHand.getSymbol());

		indexMiddleCrossLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHand.getSymbol());

		indexMiddleCrossRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());

		indexMiddleCrossLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());

		indexMiddleCrossRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossRightHandFullTurn.getSymbol());

		indexMiddleCrossLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());

		indexMiddleCrossRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"), indexMiddleCrossRightHandPitched.getSymbol());

		indexMiddleCrossLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"), indexMiddleCrossLeftHandPitched.getSymbol());

		indexMiddleCrossRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"), indexMiddleCrossOnCircleRightHand.getSymbol());

		indexMiddleCrossOnCircleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());

		middleBentOverIndexRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"), middleBentOverIndexRightHand.getSymbol());

		middleBentOverIndexLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHand.getSymbol());

		middleBentOverIndexRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());

		middleBentOverIndexLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());

		middleBentOverIndexRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());

		middleBentOverIndexLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());

		middleBentOverIndexRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"), middleBentOverIndexRightHandPitched.getSymbol());

		middleBentOverIndexLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"), middleBentOverIndexLeftHandPitched.getSymbol());

		middleBentOverIndexRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());

		middleBentOverIndexLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());

		middleBentOverIndexRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());

		middleBentOverIndexLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());

		indexBentOverMiddleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"), indexBentOverMiddleRightHand.getSymbol());

		indexBentOverMiddleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHand.getSymbol());

		indexBentOverMiddleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());

		indexBentOverMiddleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());

		indexBentOverMiddleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());

		indexBentOverMiddleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());

		indexBentOverMiddleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"), indexBentOverMiddleRightHandPitched.getSymbol());

		indexBentOverMiddleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"), indexBentOverMiddleLeftHandPitched.getSymbol());

		indexBentOverMiddleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.mirror();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());

	}

	@Override
	public void testCanMirrorVertically() {

		assertTrue(indexMiddleRightHand.canMirrorVertically());
		assertTrue(indexMiddleLeftHand.canMirrorVertically());
		assertTrue(indexMiddleRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleOnCircleRightHand.canMirrorVertically());
		assertTrue(indexMiddleOnCircleLeftHand.canMirrorVertically());
		assertTrue(indexMiddleOnCircleRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleOnCircleRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleOnCircleLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleOnCircleRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleOnCircleLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleOnCircleRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleOnCircleRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleOnCircleLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleBentRightHand.canMirrorVertically());
		assertTrue(indexMiddleBentLeftHand.canMirrorVertically());
		assertTrue(indexMiddleBentRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleBentLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleBentRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleBentLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleBentRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleBentLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleBentRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleBentLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleBentRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleBentLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleRaisedKnucklesRightHand.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesLeftHand.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleHingedRightHand.canMirrorVertically());
		assertTrue(indexMiddleHingedLeftHand.canMirrorVertically());
		assertTrue(indexMiddleHingedRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleHingedLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleHingedRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleHingedLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleHingedRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleHingedLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleHingedRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleHingedLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleHingedRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleHingedLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexUpMiddleHingeRightHand.canMirrorVertically());
		assertTrue(indexUpMiddleHingeLeftHand.canMirrorVertically());
		assertTrue(indexUpMiddleHingeRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexUpMiddleHingeRightHandFullTurn.canMirrorVertically());
		assertTrue(indexUpMiddleHingeLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexUpMiddleHingeRightHandPitched.canMirrorVertically());
		assertTrue(indexUpMiddleHingeLeftHandPitched.canMirrorVertically());
		assertTrue(indexUpMiddleHingeRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexUpMiddleHingeRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexUpMiddleHingeLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexHingeMiddleUpRightHand.canMirrorVertically());
		assertTrue(indexHingeMiddleUpLeftHand.canMirrorVertically());
		assertTrue(indexHingeMiddleUpRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexHingeMiddleUpRightHandFullTurn.canMirrorVertically());
		assertTrue(indexHingeMiddleUpLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexHingeMiddleUpRightHandPitched.canMirrorVertically());
		assertTrue(indexHingeMiddleUpLeftHandPitched.canMirrorVertically());
		assertTrue(indexHingeMiddleUpRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexHingeMiddleUpRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexHingeMiddleUpLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleUnitRightHand.canMirrorVertically());
		assertTrue(indexMiddleUnitLeftHand.canMirrorVertically());
		assertTrue(indexMiddleUnitRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleUnitIndexBentRightHand.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentLeftHand.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleUnitMiddleBentRightHand.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentLeftHand.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleUnitCupRightHand.canMirrorVertically());
		assertTrue(indexMiddleUnitCupLeftHand.canMirrorVertically());
		assertTrue(indexMiddleUnitCupRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitCupRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitCupLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitCupRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitCupLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitCupRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitCupRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitCupLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleUnitHingeRightHand.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeLeftHand.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleCrossRightHand.canMirrorVertically());
		assertTrue(indexMiddleCrossLeftHand.canMirrorVertically());
		assertTrue(indexMiddleCrossRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexMiddleCrossOnCircleRightHand.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleLeftHand.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleRightHandPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleLeftHandPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(middleBentOverIndexRightHand.canMirrorVertically());
		assertTrue(middleBentOverIndexLeftHand.canMirrorVertically());
		assertTrue(middleBentOverIndexRightHandHalfTurn.canMirrorVertically());
		assertTrue(middleBentOverIndexLeftHandHalfTurn.canMirrorVertically());
		assertTrue(middleBentOverIndexRightHandFullTurn.canMirrorVertically());
		assertTrue(middleBentOverIndexLeftHandFullTurn.canMirrorVertically());
		assertTrue(middleBentOverIndexRightHandPitched.canMirrorVertically());
		assertTrue(middleBentOverIndexLeftHandPitched.canMirrorVertically());
		assertTrue(middleBentOverIndexRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(middleBentOverIndexLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(middleBentOverIndexRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(middleBentOverIndexLeftHandFullTurnPitched.canMirrorVertically());

		assertTrue(indexBentOverMiddleRightHand.canMirrorVertically());
		assertTrue(indexBentOverMiddleLeftHand.canMirrorVertically());
		assertTrue(indexBentOverMiddleRightHandHalfTurn.canMirrorVertically());
		assertTrue(indexBentOverMiddleLeftHandHalfTurn.canMirrorVertically());
		assertTrue(indexBentOverMiddleRightHandFullTurn.canMirrorVertically());
		assertTrue(indexBentOverMiddleLeftHandFullTurn.canMirrorVertically());
		assertTrue(indexBentOverMiddleRightHandPitched.canMirrorVertically());
		assertTrue(indexBentOverMiddleLeftHandPitched.canMirrorVertically());
		assertTrue(indexBentOverMiddleRightHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexBentOverMiddleLeftHandHalfTurnPitched.canMirrorVertically());
		assertTrue(indexBentOverMiddleRightHandFullTurnPitched.canMirrorVertically());
		assertTrue(indexBentOverMiddleLeftHandFullTurnPitched.canMirrorVertically());

	}

	@Override
	public void testMirrorVertically() {

	}

	@Override
	public void testCanPitch() {

		assertTrue(indexMiddleRightHand.canPitch());
		assertTrue(indexMiddleLeftHand.canPitch());
		assertTrue(indexMiddleRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleRightHandFullTurn.canPitch());
		assertTrue(indexMiddleLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleRightHandPitched.canPitch());
		assertTrue(indexMiddleLeftHandPitched.canPitch());
		assertTrue(indexMiddleRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleOnCircleRightHand.canPitch());
		assertTrue(indexMiddleOnCircleLeftHand.canPitch());
		assertTrue(indexMiddleOnCircleRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleOnCircleRightHandFullTurn.canPitch());
		assertTrue(indexMiddleOnCircleLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleOnCircleRightHandPitched.canPitch());
		assertTrue(indexMiddleOnCircleLeftHandPitched.canPitch());
		assertTrue(indexMiddleOnCircleRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleOnCircleRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleOnCircleLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleBentRightHand.canPitch());
		assertTrue(indexMiddleBentLeftHand.canPitch());
		assertTrue(indexMiddleBentRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleBentLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleBentRightHandFullTurn.canPitch());
		assertTrue(indexMiddleBentLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleBentRightHandPitched.canPitch());
		assertTrue(indexMiddleBentLeftHandPitched.canPitch());
		assertTrue(indexMiddleBentRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleBentLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleBentRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleBentLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleRaisedKnucklesRightHand.canPitch());
		assertTrue(indexMiddleRaisedKnucklesLeftHand.canPitch());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurn.canPitch());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleRaisedKnucklesRightHandPitched.canPitch());
		assertTrue(indexMiddleRaisedKnucklesLeftHandPitched.canPitch());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleHingedRightHand.canPitch());
		assertTrue(indexMiddleHingedLeftHand.canPitch());
		assertTrue(indexMiddleHingedRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleHingedLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleHingedRightHandFullTurn.canPitch());
		assertTrue(indexMiddleHingedLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleHingedRightHandPitched.canPitch());
		assertTrue(indexMiddleHingedLeftHandPitched.canPitch());
		assertTrue(indexMiddleHingedRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleHingedLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleHingedRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleHingedLeftHandFullTurnPitched.canPitch());

		assertTrue(indexUpMiddleHingeRightHand.canPitch());
		assertTrue(indexUpMiddleHingeLeftHand.canPitch());
		assertTrue(indexUpMiddleHingeRightHandHalfTurn.canPitch());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurn.canPitch());
		assertTrue(indexUpMiddleHingeRightHandFullTurn.canPitch());
		assertTrue(indexUpMiddleHingeLeftHandFullTurn.canPitch());
		assertTrue(indexUpMiddleHingeRightHandPitched.canPitch());
		assertTrue(indexUpMiddleHingeLeftHandPitched.canPitch());
		assertTrue(indexUpMiddleHingeRightHandHalfTurnPitched.canPitch());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexUpMiddleHingeRightHandFullTurnPitched.canPitch());
		assertTrue(indexUpMiddleHingeLeftHandFullTurnPitched.canPitch());

		assertTrue(indexHingeMiddleUpRightHand.canPitch());
		assertTrue(indexHingeMiddleUpLeftHand.canPitch());
		assertTrue(indexHingeMiddleUpRightHandHalfTurn.canPitch());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurn.canPitch());
		assertTrue(indexHingeMiddleUpRightHandFullTurn.canPitch());
		assertTrue(indexHingeMiddleUpLeftHandFullTurn.canPitch());
		assertTrue(indexHingeMiddleUpRightHandPitched.canPitch());
		assertTrue(indexHingeMiddleUpLeftHandPitched.canPitch());
		assertTrue(indexHingeMiddleUpRightHandHalfTurnPitched.canPitch());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexHingeMiddleUpRightHandFullTurnPitched.canPitch());
		assertTrue(indexHingeMiddleUpLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleUnitRightHand.canPitch());
		assertTrue(indexMiddleUnitLeftHand.canPitch());
		assertTrue(indexMiddleUnitRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitRightHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitRightHandPitched.canPitch());
		assertTrue(indexMiddleUnitLeftHandPitched.canPitch());
		assertTrue(indexMiddleUnitRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleUnitLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleUnitIndexBentRightHand.canPitch());
		assertTrue(indexMiddleUnitIndexBentLeftHand.canPitch());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitIndexBentRightHandPitched.canPitch());
		assertTrue(indexMiddleUnitIndexBentLeftHandPitched.canPitch());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleUnitMiddleBentRightHand.canPitch());
		assertTrue(indexMiddleUnitMiddleBentLeftHand.canPitch());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitMiddleBentRightHandPitched.canPitch());
		assertTrue(indexMiddleUnitMiddleBentLeftHandPitched.canPitch());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleUnitCupRightHand.canPitch());
		assertTrue(indexMiddleUnitCupLeftHand.canPitch());
		assertTrue(indexMiddleUnitCupRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitCupRightHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitCupLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitCupRightHandPitched.canPitch());
		assertTrue(indexMiddleUnitCupLeftHandPitched.canPitch());
		assertTrue(indexMiddleUnitCupRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitCupRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleUnitCupLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleUnitHingeRightHand.canPitch());
		assertTrue(indexMiddleUnitHingeLeftHand.canPitch());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleUnitHingeRightHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleUnitHingeRightHandPitched.canPitch());
		assertTrue(indexMiddleUnitHingeLeftHandPitched.canPitch());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleUnitHingeRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleCrossRightHand.canPitch());
		assertTrue(indexMiddleCrossLeftHand.canPitch());
		assertTrue(indexMiddleCrossRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleCrossLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleCrossRightHandFullTurn.canPitch());
		assertTrue(indexMiddleCrossLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleCrossRightHandPitched.canPitch());
		assertTrue(indexMiddleCrossLeftHandPitched.canPitch());
		assertTrue(indexMiddleCrossRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleCrossLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleCrossRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleCrossLeftHandFullTurnPitched.canPitch());

		assertTrue(indexMiddleCrossOnCircleRightHand.canPitch());
		assertTrue(indexMiddleCrossOnCircleLeftHand.canPitch());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurn.canPitch());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurn.canPitch());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurn.canPitch());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurn.canPitch());
		assertTrue(indexMiddleCrossOnCircleRightHandPitched.canPitch());
		assertTrue(indexMiddleCrossOnCircleLeftHandPitched.canPitch());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurnPitched.canPitch());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canPitch());

		assertTrue(middleBentOverIndexRightHand.canPitch());
		assertTrue(middleBentOverIndexLeftHand.canPitch());
		assertTrue(middleBentOverIndexRightHandHalfTurn.canPitch());
		assertTrue(middleBentOverIndexLeftHandHalfTurn.canPitch());
		assertTrue(middleBentOverIndexRightHandFullTurn.canPitch());
		assertTrue(middleBentOverIndexLeftHandFullTurn.canPitch());
		assertTrue(middleBentOverIndexRightHandPitched.canPitch());
		assertTrue(middleBentOverIndexLeftHandPitched.canPitch());
		assertTrue(middleBentOverIndexRightHandHalfTurnPitched.canPitch());
		assertTrue(middleBentOverIndexLeftHandHalfTurnPitched.canPitch());
		assertTrue(middleBentOverIndexRightHandFullTurnPitched.canPitch());
		assertTrue(middleBentOverIndexLeftHandFullTurnPitched.canPitch());

		assertTrue(indexBentOverMiddleRightHand.canPitch());
		assertTrue(indexBentOverMiddleLeftHand.canPitch());
		assertTrue(indexBentOverMiddleRightHandHalfTurn.canPitch());
		assertTrue(indexBentOverMiddleLeftHandHalfTurn.canPitch());
		assertTrue(indexBentOverMiddleRightHandFullTurn.canPitch());
		assertTrue(indexBentOverMiddleLeftHandFullTurn.canPitch());
		assertTrue(indexBentOverMiddleRightHandPitched.canPitch());
		assertTrue(indexBentOverMiddleLeftHandPitched.canPitch());
		assertTrue(indexBentOverMiddleRightHandHalfTurnPitched.canPitch());
		assertTrue(indexBentOverMiddleLeftHandHalfTurnPitched.canPitch());
		assertTrue(indexBentOverMiddleRightHandFullTurnPitched.canPitch());
		assertTrue(indexBentOverMiddleLeftHandFullTurnPitched.canPitch());

	}

	@Override
	public void testPitch() {

		indexMiddleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHand.getSymbol());

		indexMiddleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHand.getSymbol());

		indexMiddleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHandHalfTurn.getSymbol());

		indexMiddleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHandHalfTurn.getSymbol());

		indexMiddleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHandFullTurn.getSymbol());

		indexMiddleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHandFullTurn.getSymbol());

		indexMiddleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHandPitched.getSymbol());

		indexMiddleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHandPitched.getSymbol());

		indexMiddleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());

		indexMiddleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandFullTurnPitched.getSymbol());

		indexMiddleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"), indexMiddleOnCircleRightHand.getSymbol());

		indexMiddleOnCircleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHand.getSymbol());

		indexMiddleOnCircleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleOnCircleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());

		indexMiddleOnCircleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleOnCircleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"), indexMiddleOnCircleRightHandPitched.getSymbol());

		indexMiddleOnCircleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());

		indexMiddleOnCircleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());

		indexMiddleBentRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHand.getSymbol());

		indexMiddleBentLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHand.getSymbol());

		indexMiddleBentRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleBentLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleBentRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleBentLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleBentRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"), indexMiddleBentRightHandPitched.getSymbol());

		indexMiddleBentLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"), indexMiddleBentLeftHandPitched.getSymbol());

		indexMiddleBentRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleBentLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleBentRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleBentLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());

		indexMiddleRaisedKnucklesLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());

		indexMiddleHingedRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHand.getSymbol());

		indexMiddleHingedLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHand.getSymbol());

		indexMiddleHingedRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());

		indexMiddleHingedLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());

		indexMiddleHingedRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedRightHandFullTurn.getSymbol());

		indexMiddleHingedLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());

		indexMiddleHingedRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"), indexMiddleHingedRightHandPitched.getSymbol());

		indexMiddleHingedLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"), indexMiddleHingedLeftHandPitched.getSymbol());

		indexMiddleHingedRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());

		indexMiddleHingedLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());

		indexMiddleHingedRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());

		indexMiddleHingedLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHand.getSymbol());

		indexUpMiddleHingeLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHand.getSymbol());

		indexUpMiddleHingeRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());

		indexUpMiddleHingeRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());

		indexUpMiddleHingeLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());

		indexUpMiddleHingeRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"), indexUpMiddleHingeRightHandPitched.getSymbol());

		indexUpMiddleHingeLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());

		indexUpMiddleHingeRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHand.getSymbol());

		indexHingeMiddleUpLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHand.getSymbol());

		indexHingeMiddleUpRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());

		indexHingeMiddleUpRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());

		indexHingeMiddleUpLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());

		indexHingeMiddleUpRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"), indexHingeMiddleUpRightHandPitched.getSymbol());

		indexHingeMiddleUpLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());

		indexHingeMiddleUpRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHand.getSymbol());

		indexMiddleUnitLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHand.getSymbol());

		indexMiddleUnitRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());

		indexMiddleUnitLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());

		indexMiddleUnitRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitRightHandFullTurn.getSymbol());

		indexMiddleUnitLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());

		indexMiddleUnitRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"), indexMiddleUnitRightHandPitched.getSymbol());

		indexMiddleUnitLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"), indexMiddleUnitLeftHandPitched.getSymbol());

		indexMiddleUnitRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"), indexMiddleUnitIndexBentRightHand.getSymbol());

		indexMiddleUnitIndexBentLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());

		indexMiddleUnitMiddleBentLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHand.getSymbol());

		indexMiddleUnitCupLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHand.getSymbol());

		indexMiddleUnitCupRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());

		indexMiddleUnitCupRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());

		indexMiddleUnitCupLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());

		indexMiddleUnitCupRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"), indexMiddleUnitCupRightHandPitched.getSymbol());

		indexMiddleUnitCupLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());

		indexMiddleUnitCupRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"), indexMiddleUnitHingeRightHand.getSymbol());

		indexMiddleUnitHingeLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"), indexMiddleUnitHingeLeftHand.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());

		indexMiddleUnitHingeRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());

		indexMiddleUnitHingeRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());

		indexMiddleUnitHingeLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHand.getSymbol());

		indexMiddleCrossLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHand.getSymbol());

		indexMiddleCrossRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());

		indexMiddleCrossLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());

		indexMiddleCrossRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossRightHandFullTurn.getSymbol());

		indexMiddleCrossLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());

		indexMiddleCrossRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"), indexMiddleCrossRightHandPitched.getSymbol());

		indexMiddleCrossLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"), indexMiddleCrossLeftHandPitched.getSymbol());

		indexMiddleCrossRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"), indexMiddleCrossOnCircleRightHand.getSymbol());

		indexMiddleCrossOnCircleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());

		middleBentOverIndexRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"), middleBentOverIndexRightHand.getSymbol());

		middleBentOverIndexLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHand.getSymbol());

		middleBentOverIndexRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());

		middleBentOverIndexLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());

		middleBentOverIndexRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());

		middleBentOverIndexLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());

		middleBentOverIndexRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"), middleBentOverIndexRightHandPitched.getSymbol());

		middleBentOverIndexLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"), middleBentOverIndexLeftHandPitched.getSymbol());

		middleBentOverIndexRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());

		middleBentOverIndexLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());

		middleBentOverIndexRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());

		middleBentOverIndexLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());

		indexBentOverMiddleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"), indexBentOverMiddleRightHand.getSymbol());

		indexBentOverMiddleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHand.getSymbol());

		indexBentOverMiddleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());

		indexBentOverMiddleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());

		indexBentOverMiddleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());

		indexBentOverMiddleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());

		indexBentOverMiddleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"), indexBentOverMiddleRightHandPitched.getSymbol());

		indexBentOverMiddleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"), indexBentOverMiddleLeftHandPitched.getSymbol());

		indexBentOverMiddleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.pitch();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());

	}

	@Override
	public void testCanRoll() {

		assertTrue(indexMiddleRightHand.canRoll());
		assertTrue(indexMiddleLeftHand.canRoll());
		assertTrue(indexMiddleRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleRightHandFullTurn.canRoll());
		assertTrue(indexMiddleLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleRightHandPitched.canRoll());
		assertTrue(indexMiddleLeftHandPitched.canRoll());
		assertTrue(indexMiddleRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleOnCircleRightHand.canRoll());
		assertTrue(indexMiddleOnCircleLeftHand.canRoll());
		assertTrue(indexMiddleOnCircleRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleOnCircleRightHandFullTurn.canRoll());
		assertTrue(indexMiddleOnCircleLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleOnCircleRightHandPitched.canRoll());
		assertTrue(indexMiddleOnCircleLeftHandPitched.canRoll());
		assertTrue(indexMiddleOnCircleRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleOnCircleLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleOnCircleRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleOnCircleLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleBentRightHand.canRoll());
		assertTrue(indexMiddleBentLeftHand.canRoll());
		assertTrue(indexMiddleBentRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleBentLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleBentRightHandFullTurn.canRoll());
		assertTrue(indexMiddleBentLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleBentRightHandPitched.canRoll());
		assertTrue(indexMiddleBentLeftHandPitched.canRoll());
		assertTrue(indexMiddleBentRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleBentLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleBentRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleBentLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleRaisedKnucklesRightHand.canRoll());
		assertTrue(indexMiddleRaisedKnucklesLeftHand.canRoll());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurn.canRoll());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleRaisedKnucklesRightHandPitched.canRoll());
		assertTrue(indexMiddleRaisedKnucklesLeftHandPitched.canRoll());
		assertTrue(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleHingedRightHand.canRoll());
		assertTrue(indexMiddleHingedLeftHand.canRoll());
		assertTrue(indexMiddleHingedRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleHingedLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleHingedRightHandFullTurn.canRoll());
		assertTrue(indexMiddleHingedLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleHingedRightHandPitched.canRoll());
		assertTrue(indexMiddleHingedLeftHandPitched.canRoll());
		assertTrue(indexMiddleHingedRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleHingedLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleHingedRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleHingedLeftHandFullTurnPitched.canRoll());

		assertTrue(indexUpMiddleHingeRightHand.canRoll());
		assertTrue(indexUpMiddleHingeLeftHand.canRoll());
		assertTrue(indexUpMiddleHingeRightHandHalfTurn.canRoll());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurn.canRoll());
		assertTrue(indexUpMiddleHingeRightHandFullTurn.canRoll());
		assertTrue(indexUpMiddleHingeLeftHandFullTurn.canRoll());
		assertTrue(indexUpMiddleHingeRightHandPitched.canRoll());
		assertTrue(indexUpMiddleHingeLeftHandPitched.canRoll());
		assertTrue(indexUpMiddleHingeRightHandHalfTurnPitched.canRoll());
		assertTrue(indexUpMiddleHingeLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexUpMiddleHingeRightHandFullTurnPitched.canRoll());
		assertTrue(indexUpMiddleHingeLeftHandFullTurnPitched.canRoll());

		assertTrue(indexHingeMiddleUpRightHand.canRoll());
		assertTrue(indexHingeMiddleUpLeftHand.canRoll());
		assertTrue(indexHingeMiddleUpRightHandHalfTurn.canRoll());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurn.canRoll());
		assertTrue(indexHingeMiddleUpRightHandFullTurn.canRoll());
		assertTrue(indexHingeMiddleUpLeftHandFullTurn.canRoll());
		assertTrue(indexHingeMiddleUpRightHandPitched.canRoll());
		assertTrue(indexHingeMiddleUpLeftHandPitched.canRoll());
		assertTrue(indexHingeMiddleUpRightHandHalfTurnPitched.canRoll());
		assertTrue(indexHingeMiddleUpLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexHingeMiddleUpRightHandFullTurnPitched.canRoll());
		assertTrue(indexHingeMiddleUpLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleUnitRightHand.canRoll());
		assertTrue(indexMiddleUnitLeftHand.canRoll());
		assertTrue(indexMiddleUnitRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitRightHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitRightHandPitched.canRoll());
		assertTrue(indexMiddleUnitLeftHandPitched.canRoll());
		assertTrue(indexMiddleUnitRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleUnitLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleUnitIndexBentRightHand.canRoll());
		assertTrue(indexMiddleUnitIndexBentLeftHand.canRoll());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitIndexBentRightHandPitched.canRoll());
		assertTrue(indexMiddleUnitIndexBentLeftHandPitched.canRoll());
		assertTrue(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitIndexBentRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleUnitMiddleBentRightHand.canRoll());
		assertTrue(indexMiddleUnitMiddleBentLeftHand.canRoll());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitMiddleBentRightHandPitched.canRoll());
		assertTrue(indexMiddleUnitMiddleBentLeftHandPitched.canRoll());
		assertTrue(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleUnitCupRightHand.canRoll());
		assertTrue(indexMiddleUnitCupLeftHand.canRoll());
		assertTrue(indexMiddleUnitCupRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitCupRightHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitCupLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitCupRightHandPitched.canRoll());
		assertTrue(indexMiddleUnitCupLeftHandPitched.canRoll());
		assertTrue(indexMiddleUnitCupRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitCupLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitCupRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleUnitCupLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleUnitHingeRightHand.canRoll());
		assertTrue(indexMiddleUnitHingeLeftHand.canRoll());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleUnitHingeRightHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleUnitHingeRightHandPitched.canRoll());
		assertTrue(indexMiddleUnitHingeLeftHandPitched.canRoll());
		assertTrue(indexMiddleUnitHingeRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitHingeLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleUnitHingeRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleUnitHingeLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleCrossRightHand.canRoll());
		assertTrue(indexMiddleCrossLeftHand.canRoll());
		assertTrue(indexMiddleCrossRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleCrossLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleCrossRightHandFullTurn.canRoll());
		assertTrue(indexMiddleCrossLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleCrossRightHandPitched.canRoll());
		assertTrue(indexMiddleCrossLeftHandPitched.canRoll());
		assertTrue(indexMiddleCrossRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleCrossLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleCrossRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleCrossLeftHandFullTurnPitched.canRoll());

		assertTrue(indexMiddleCrossOnCircleRightHand.canRoll());
		assertTrue(indexMiddleCrossOnCircleLeftHand.canRoll());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurn.canRoll());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurn.canRoll());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurn.canRoll());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurn.canRoll());
		assertTrue(indexMiddleCrossOnCircleRightHandPitched.canRoll());
		assertTrue(indexMiddleCrossOnCircleLeftHandPitched.canRoll());
		assertTrue(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexMiddleCrossOnCircleRightHandFullTurnPitched.canRoll());
		assertTrue(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canRoll());

		assertTrue(middleBentOverIndexRightHand.canRoll());
		assertTrue(middleBentOverIndexLeftHand.canRoll());
		assertTrue(middleBentOverIndexRightHandHalfTurn.canRoll());
		assertTrue(middleBentOverIndexLeftHandHalfTurn.canRoll());
		assertTrue(middleBentOverIndexRightHandFullTurn.canRoll());
		assertTrue(middleBentOverIndexLeftHandFullTurn.canRoll());
		assertTrue(middleBentOverIndexRightHandPitched.canRoll());
		assertTrue(middleBentOverIndexLeftHandPitched.canRoll());
		assertTrue(middleBentOverIndexRightHandHalfTurnPitched.canRoll());
		assertTrue(middleBentOverIndexLeftHandHalfTurnPitched.canRoll());
		assertTrue(middleBentOverIndexRightHandFullTurnPitched.canRoll());
		assertTrue(middleBentOverIndexLeftHandFullTurnPitched.canRoll());

		assertTrue(indexBentOverMiddleRightHand.canRoll());
		assertTrue(indexBentOverMiddleLeftHand.canRoll());
		assertTrue(indexBentOverMiddleRightHandHalfTurn.canRoll());
		assertTrue(indexBentOverMiddleLeftHandHalfTurn.canRoll());
		assertTrue(indexBentOverMiddleRightHandFullTurn.canRoll());
		assertTrue(indexBentOverMiddleLeftHandFullTurn.canRoll());
		assertTrue(indexBentOverMiddleRightHandPitched.canRoll());
		assertTrue(indexBentOverMiddleLeftHandPitched.canRoll());
		assertTrue(indexBentOverMiddleRightHandHalfTurnPitched.canRoll());
		assertTrue(indexBentOverMiddleLeftHandHalfTurnPitched.canRoll());
		assertTrue(indexBentOverMiddleRightHandFullTurnPitched.canRoll());
		assertTrue(indexBentOverMiddleLeftHandFullTurnPitched.canRoll());

	}

	@Override
	public void testRoll() {

		indexMiddleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHand.getSymbol());
		indexMiddleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHand.getSymbol());

		indexMiddleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHand.getSymbol());
		indexMiddleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHand.getSymbol());

		indexMiddleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHandHalfTurn.getSymbol());
		indexMiddleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHandHalfTurn.getSymbol());

		indexMiddleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHandHalfTurn.getSymbol());
		indexMiddleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHandHalfTurn.getSymbol());

		indexMiddleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-01"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-01"), indexMiddleRightHandFullTurn.getSymbol());
		indexMiddleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-01"), indexMiddleRightHandFullTurn.getSymbol());

		indexMiddleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-02-09"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-01-09"), indexMiddleLeftHandFullTurn.getSymbol());
		indexMiddleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-03-09"), indexMiddleLeftHandFullTurn.getSymbol());

		indexMiddleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandPitched.getSymbol());
		indexMiddleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHandPitched.getSymbol());

		indexMiddleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandPitched.getSymbol());
		indexMiddleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHandPitched.getSymbol());

		indexMiddleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());
		indexMiddleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandHalfTurnPitched.getSymbol());

		indexMiddleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-01"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-01"), indexMiddleRightHandFullTurnPitched.getSymbol());
		indexMiddleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-01"), indexMiddleRightHandFullTurnPitched.getSymbol());

		indexMiddleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-05-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-04-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());
		indexMiddleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-001-01-06-09"), indexMiddleLeftHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"), indexMiddleOnCircleRightHand.getSymbol());
		indexMiddleOnCircleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"), indexMiddleOnCircleRightHand.getSymbol());

		indexMiddleOnCircleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"), indexMiddleOnCircleLeftHand.getSymbol());
		indexMiddleOnCircleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHand.getSymbol());

		indexMiddleOnCircleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleOnCircleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"),
				indexMiddleOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"), indexMiddleOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleOnCircleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());
		indexMiddleOnCircleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-01"),
				indexMiddleOnCircleRightHandFullTurn.getSymbol());

		indexMiddleOnCircleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-02-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-01-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleOnCircleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-03-09"), indexMiddleOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleOnCircleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"), indexMiddleOnCircleRightHandPitched.getSymbol());
		indexMiddleOnCircleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"), indexMiddleOnCircleRightHandPitched.getSymbol());

		indexMiddleOnCircleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());
		indexMiddleOnCircleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"), indexMiddleOnCircleLeftHandPitched.getSymbol());

		indexMiddleOnCircleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"),
				indexMiddleOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleOnCircleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-01"),
				indexMiddleOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleOnCircleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-05-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-04-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleOnCircleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-002-01-06-09"),
				indexMiddleOnCircleLeftHandFullTurnPitched.getSymbol());

		indexMiddleBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentRightHand.getSymbol());
		indexMiddleBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHand.getSymbol());

		indexMiddleBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentLeftHand.getSymbol());
		indexMiddleBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHand.getSymbol());

		indexMiddleBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-01"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-01"), indexMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-01"), indexMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-02-09"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-01-09"), indexMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-03-09"), indexMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"), indexMiddleBentRightHandPitched.getSymbol());
		indexMiddleBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"), indexMiddleBentRightHandPitched.getSymbol());

		indexMiddleBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"), indexMiddleBentLeftHandPitched.getSymbol());
		indexMiddleBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"), indexMiddleBentLeftHandPitched.getSymbol());

		indexMiddleBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"),
				indexMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"),
				indexMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-01"),
				indexMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-05-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-04-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-003-01-06-09"),
				indexMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());
		indexMiddleRaisedKnucklesRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"), indexMiddleRaisedKnucklesRightHand.getSymbol());

		indexMiddleRaisedKnucklesLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());
		indexMiddleRaisedKnucklesLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"), indexMiddleRaisedKnucklesLeftHand.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-01"),
				indexMiddleRaisedKnucklesRightHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-02-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-01-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-03-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurn.getSymbol());

		indexMiddleRaisedKnucklesRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesRightHandPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesLeftHandPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-01"),
				indexMiddleRaisedKnucklesRightHandFullTurnPitched.getSymbol());

		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-05-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-04-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());
		indexMiddleRaisedKnucklesLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-004-01-06-09"),
				indexMiddleRaisedKnucklesLeftHandFullTurnPitched.getSymbol());

		indexMiddleHingedRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedRightHand.getSymbol());
		indexMiddleHingedRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHand.getSymbol());

		indexMiddleHingedLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedLeftHand.getSymbol());
		indexMiddleHingedLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHand.getSymbol());

		indexMiddleHingedRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());
		indexMiddleHingedRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedRightHandHalfTurn.getSymbol());

		indexMiddleHingedLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());
		indexMiddleHingedLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedLeftHandHalfTurn.getSymbol());

		indexMiddleHingedRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-01"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-01"), indexMiddleHingedRightHandFullTurn.getSymbol());
		indexMiddleHingedRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-01"), indexMiddleHingedRightHandFullTurn.getSymbol());

		indexMiddleHingedLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-02-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-01-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());
		indexMiddleHingedLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-03-09"), indexMiddleHingedLeftHandFullTurn.getSymbol());

		indexMiddleHingedRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"), indexMiddleHingedRightHandPitched.getSymbol());
		indexMiddleHingedRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"), indexMiddleHingedRightHandPitched.getSymbol());

		indexMiddleHingedLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"), indexMiddleHingedLeftHandPitched.getSymbol());
		indexMiddleHingedLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"), indexMiddleHingedLeftHandPitched.getSymbol());

		indexMiddleHingedRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());
		indexMiddleHingedRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"),
				indexMiddleHingedRightHandHalfTurnPitched.getSymbol());

		indexMiddleHingedLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());
		indexMiddleHingedLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"),
				indexMiddleHingedLeftHandHalfTurnPitched.getSymbol());

		indexMiddleHingedRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());
		indexMiddleHingedRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-01"),
				indexMiddleHingedRightHandFullTurnPitched.getSymbol());

		indexMiddleHingedLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-05-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-04-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());
		indexMiddleHingedLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-005-01-06-09"),
				indexMiddleHingedLeftHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeRightHand.getSymbol());
		indexUpMiddleHingeRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHand.getSymbol());

		indexUpMiddleHingeLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeLeftHand.getSymbol());
		indexUpMiddleHingeLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHand.getSymbol());

		indexUpMiddleHingeRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());
		indexUpMiddleHingeRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeRightHandHalfTurn.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeLeftHandHalfTurn.getSymbol());

		indexUpMiddleHingeRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());
		indexUpMiddleHingeRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-01"), indexUpMiddleHingeRightHandFullTurn.getSymbol());

		indexUpMiddleHingeLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-02-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-01-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());
		indexUpMiddleHingeLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-03-09"), indexUpMiddleHingeLeftHandFullTurn.getSymbol());

		indexUpMiddleHingeRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"), indexUpMiddleHingeRightHandPitched.getSymbol());
		indexUpMiddleHingeRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"), indexUpMiddleHingeRightHandPitched.getSymbol());

		indexUpMiddleHingeLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());
		indexUpMiddleHingeLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"), indexUpMiddleHingeLeftHandPitched.getSymbol());

		indexUpMiddleHingeRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"),
				indexUpMiddleHingeRightHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"),
				indexUpMiddleHingeLeftHandHalfTurnPitched.getSymbol());

		indexUpMiddleHingeRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-01"),
				indexUpMiddleHingeRightHandFullTurnPitched.getSymbol());

		indexUpMiddleHingeLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-05-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-04-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());
		indexUpMiddleHingeLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-006-01-06-09"),
				indexUpMiddleHingeLeftHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpRightHand.getSymbol());
		indexHingeMiddleUpRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHand.getSymbol());

		indexHingeMiddleUpLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpLeftHand.getSymbol());
		indexHingeMiddleUpLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHand.getSymbol());

		indexHingeMiddleUpRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());
		indexHingeMiddleUpRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpRightHandHalfTurn.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpLeftHandHalfTurn.getSymbol());

		indexHingeMiddleUpRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());
		indexHingeMiddleUpRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-01"), indexHingeMiddleUpRightHandFullTurn.getSymbol());

		indexHingeMiddleUpLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-02-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-01-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());
		indexHingeMiddleUpLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-03-09"), indexHingeMiddleUpLeftHandFullTurn.getSymbol());

		indexHingeMiddleUpRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"), indexHingeMiddleUpRightHandPitched.getSymbol());
		indexHingeMiddleUpRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"), indexHingeMiddleUpRightHandPitched.getSymbol());

		indexHingeMiddleUpLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());
		indexHingeMiddleUpLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"), indexHingeMiddleUpLeftHandPitched.getSymbol());

		indexHingeMiddleUpRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"),
				indexHingeMiddleUpRightHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"),
				indexHingeMiddleUpLeftHandHalfTurnPitched.getSymbol());

		indexHingeMiddleUpRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-01"),
				indexHingeMiddleUpRightHandFullTurnPitched.getSymbol());

		indexHingeMiddleUpLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-05-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-04-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());
		indexHingeMiddleUpLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-007-01-06-09"),
				indexHingeMiddleUpLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitRightHand.getSymbol());
		indexMiddleUnitRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHand.getSymbol());

		indexMiddleUnitLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitLeftHand.getSymbol());
		indexMiddleUnitLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHand.getSymbol());

		indexMiddleUnitRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());
		indexMiddleUnitRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitRightHandHalfTurn.getSymbol());

		indexMiddleUnitLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());
		indexMiddleUnitLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitLeftHandHalfTurn.getSymbol());

		indexMiddleUnitRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-01"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-01"), indexMiddleUnitRightHandFullTurn.getSymbol());
		indexMiddleUnitRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-01"), indexMiddleUnitRightHandFullTurn.getSymbol());

		indexMiddleUnitLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-02-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-01-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());
		indexMiddleUnitLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-03-09"), indexMiddleUnitLeftHandFullTurn.getSymbol());

		indexMiddleUnitRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"), indexMiddleUnitRightHandPitched.getSymbol());
		indexMiddleUnitRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"), indexMiddleUnitRightHandPitched.getSymbol());

		indexMiddleUnitLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"), indexMiddleUnitLeftHandPitched.getSymbol());
		indexMiddleUnitLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"), indexMiddleUnitLeftHandPitched.getSymbol());

		indexMiddleUnitRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"),
				indexMiddleUnitRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"),
				indexMiddleUnitLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-01"),
				indexMiddleUnitRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-05-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-04-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-008-01-06-09"),
				indexMiddleUnitLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"), indexMiddleUnitIndexBentRightHand.getSymbol());
		indexMiddleUnitIndexBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"), indexMiddleUnitIndexBentRightHand.getSymbol());

		indexMiddleUnitIndexBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());
		indexMiddleUnitIndexBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"), indexMiddleUnitIndexBentLeftHand.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-01"),
				indexMiddleUnitIndexBentRightHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-02-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-01-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-03-09"),
				indexMiddleUnitIndexBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitIndexBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentRightHandPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentLeftHandPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitIndexBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-01"),
				indexMiddleUnitIndexBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitIndexBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-05-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-04-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitIndexBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-009-01-06-09"),
				indexMiddleUnitIndexBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());
		indexMiddleUnitMiddleBentRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"), indexMiddleUnitMiddleBentRightHand.getSymbol());

		indexMiddleUnitMiddleBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());
		indexMiddleUnitMiddleBentLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"), indexMiddleUnitMiddleBentLeftHand.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-01"),
				indexMiddleUnitMiddleBentRightHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-02-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-01-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-03-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurn.getSymbol());

		indexMiddleUnitMiddleBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentRightHandPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentLeftHandPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-01"),
				indexMiddleUnitMiddleBentRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-05-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-04-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitMiddleBentLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-010-01-06-09"),
				indexMiddleUnitMiddleBentLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupRightHand.getSymbol());
		indexMiddleUnitCupRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHand.getSymbol());

		indexMiddleUnitCupLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupLeftHand.getSymbol());
		indexMiddleUnitCupLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHand.getSymbol());

		indexMiddleUnitCupRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());
		indexMiddleUnitCupRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupRightHandHalfTurn.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupLeftHandHalfTurn.getSymbol());

		indexMiddleUnitCupRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());
		indexMiddleUnitCupRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-01"), indexMiddleUnitCupRightHandFullTurn.getSymbol());

		indexMiddleUnitCupLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-02-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-01-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());
		indexMiddleUnitCupLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-03-09"), indexMiddleUnitCupLeftHandFullTurn.getSymbol());

		indexMiddleUnitCupRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"), indexMiddleUnitCupRightHandPitched.getSymbol());
		indexMiddleUnitCupRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"), indexMiddleUnitCupRightHandPitched.getSymbol());

		indexMiddleUnitCupLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());
		indexMiddleUnitCupLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"), indexMiddleUnitCupLeftHandPitched.getSymbol());

		indexMiddleUnitCupRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"),
				indexMiddleUnitCupRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"),
				indexMiddleUnitCupLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitCupRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-01"),
				indexMiddleUnitCupRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitCupLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-05-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-04-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitCupLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-011-01-06-09"),
				indexMiddleUnitCupLeftHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"), indexMiddleUnitHingeRightHand.getSymbol());
		indexMiddleUnitHingeRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"), indexMiddleUnitHingeRightHand.getSymbol());

		indexMiddleUnitHingeLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"), indexMiddleUnitHingeLeftHand.getSymbol());
		indexMiddleUnitHingeLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"), indexMiddleUnitHingeLeftHand.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeRightHandHalfTurn.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeLeftHandHalfTurn.getSymbol());

		indexMiddleUnitHingeRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());
		indexMiddleUnitHingeRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-01"),
				indexMiddleUnitHingeRightHandFullTurn.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-02-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-01-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-03-09"),
				indexMiddleUnitHingeLeftHandFullTurn.getSymbol());

		indexMiddleUnitHingeRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());
		indexMiddleUnitHingeRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"),
				indexMiddleUnitHingeRightHandPitched.getSymbol());

		indexMiddleUnitHingeLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());
		indexMiddleUnitHingeLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"), indexMiddleUnitHingeLeftHandPitched.getSymbol());

		indexMiddleUnitHingeRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeLeftHandHalfTurnPitched.getSymbol());

		indexMiddleUnitHingeRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-01"),
				indexMiddleUnitHingeRightHandFullTurnPitched.getSymbol());

		indexMiddleUnitHingeLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-05-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-04-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());
		indexMiddleUnitHingeLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-012-01-06-09"),
				indexMiddleUnitHingeLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossRightHand.getSymbol());
		indexMiddleCrossRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHand.getSymbol());

		indexMiddleCrossLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossLeftHand.getSymbol());
		indexMiddleCrossLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHand.getSymbol());

		indexMiddleCrossRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());
		indexMiddleCrossRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossRightHandHalfTurn.getSymbol());

		indexMiddleCrossLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());
		indexMiddleCrossLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossLeftHandHalfTurn.getSymbol());

		indexMiddleCrossRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-01"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-01"), indexMiddleCrossRightHandFullTurn.getSymbol());
		indexMiddleCrossRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-01"), indexMiddleCrossRightHandFullTurn.getSymbol());

		indexMiddleCrossLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-02-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-01-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());
		indexMiddleCrossLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-03-09"), indexMiddleCrossLeftHandFullTurn.getSymbol());

		indexMiddleCrossRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"), indexMiddleCrossRightHandPitched.getSymbol());
		indexMiddleCrossRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"), indexMiddleCrossRightHandPitched.getSymbol());

		indexMiddleCrossLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"), indexMiddleCrossLeftHandPitched.getSymbol());
		indexMiddleCrossLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"), indexMiddleCrossLeftHandPitched.getSymbol());

		indexMiddleCrossRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"),
				indexMiddleCrossRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"),
				indexMiddleCrossLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-01"),
				indexMiddleCrossRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-05-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-04-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-013-01-06-09"),
				indexMiddleCrossLeftHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"), indexMiddleCrossOnCircleRightHand.getSymbol());
		indexMiddleCrossOnCircleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"), indexMiddleCrossOnCircleRightHand.getSymbol());

		indexMiddleCrossOnCircleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());
		indexMiddleCrossOnCircleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"), indexMiddleCrossOnCircleLeftHand.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleRightHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-01"),
				indexMiddleCrossOnCircleRightHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-02-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-01-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-03-09"),
				indexMiddleCrossOnCircleLeftHandFullTurn.getSymbol());

		indexMiddleCrossOnCircleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleRightHandPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleLeftHandPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandHalfTurnPitched.getSymbol());

		indexMiddleCrossOnCircleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-01"),
				indexMiddleCrossOnCircleRightHandFullTurnPitched.getSymbol());

		indexMiddleCrossOnCircleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-05-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-04-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());
		indexMiddleCrossOnCircleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-014-01-06-09"),
				indexMiddleCrossOnCircleLeftHandFullTurnPitched.getSymbol());

		middleBentOverIndexRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"), middleBentOverIndexRightHand.getSymbol());
		middleBentOverIndexRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"), middleBentOverIndexRightHand.getSymbol());

		middleBentOverIndexLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"), middleBentOverIndexLeftHand.getSymbol());
		middleBentOverIndexLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHand.getSymbol());

		middleBentOverIndexRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());
		middleBentOverIndexRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"),
				middleBentOverIndexRightHandHalfTurn.getSymbol());

		middleBentOverIndexLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());
		middleBentOverIndexLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"), middleBentOverIndexLeftHandHalfTurn.getSymbol());

		middleBentOverIndexRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());
		middleBentOverIndexRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-01"),
				middleBentOverIndexRightHandFullTurn.getSymbol());

		middleBentOverIndexLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-02-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-01-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());
		middleBentOverIndexLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-03-09"), middleBentOverIndexLeftHandFullTurn.getSymbol());

		middleBentOverIndexRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"), middleBentOverIndexRightHandPitched.getSymbol());
		middleBentOverIndexRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"), middleBentOverIndexRightHandPitched.getSymbol());

		middleBentOverIndexLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"), middleBentOverIndexLeftHandPitched.getSymbol());
		middleBentOverIndexLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"), middleBentOverIndexLeftHandPitched.getSymbol());

		middleBentOverIndexRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());
		middleBentOverIndexRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexRightHandHalfTurnPitched.getSymbol());

		middleBentOverIndexLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());
		middleBentOverIndexLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"),
				middleBentOverIndexLeftHandHalfTurnPitched.getSymbol());

		middleBentOverIndexRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());
		middleBentOverIndexRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-01"),
				middleBentOverIndexRightHandFullTurnPitched.getSymbol());

		middleBentOverIndexLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-05-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-04-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());
		middleBentOverIndexLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-015-01-06-09"),
				middleBentOverIndexLeftHandFullTurnPitched.getSymbol());

		indexBentOverMiddleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"), indexBentOverMiddleRightHand.getSymbol());
		indexBentOverMiddleRightHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"), indexBentOverMiddleRightHand.getSymbol());

		indexBentOverMiddleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"), indexBentOverMiddleLeftHand.getSymbol());
		indexBentOverMiddleLeftHand.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHand.getSymbol());

		indexBentOverMiddleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());
		indexBentOverMiddleRightHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"),
				indexBentOverMiddleRightHandHalfTurn.getSymbol());

		indexBentOverMiddleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());
		indexBentOverMiddleLeftHandHalfTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"), indexBentOverMiddleLeftHandHalfTurn.getSymbol());

		indexBentOverMiddleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());
		indexBentOverMiddleRightHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-01"),
				indexBentOverMiddleRightHandFullTurn.getSymbol());

		indexBentOverMiddleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-02-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-01-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());
		indexBentOverMiddleLeftHandFullTurn.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-03-09"), indexBentOverMiddleLeftHandFullTurn.getSymbol());

		indexBentOverMiddleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"), indexBentOverMiddleRightHandPitched.getSymbol());
		indexBentOverMiddleRightHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"), indexBentOverMiddleRightHandPitched.getSymbol());

		indexBentOverMiddleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"), indexBentOverMiddleLeftHandPitched.getSymbol());
		indexBentOverMiddleLeftHandPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"), indexBentOverMiddleLeftHandPitched.getSymbol());

		indexBentOverMiddleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleRightHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleRightHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandHalfTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"),
				indexBentOverMiddleLeftHandHalfTurnPitched.getSymbol());

		indexBentOverMiddleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());
		indexBentOverMiddleRightHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-01"),
				indexBentOverMiddleRightHandFullTurnPitched.getSymbol());

		indexBentOverMiddleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-05-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-04-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());
		indexBentOverMiddleLeftHandFullTurnPitched.roll();
		assertEquals(symbolFactory.createSymbol("01-02-016-01-06-09"),
				indexBentOverMiddleLeftHandFullTurnPitched.getSymbol());

	}

	@Override
	public void testCanSwitchArrowHead() {

		assertFalse(indexMiddleRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleOnCircleRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleOnCircleLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleBentRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleBentLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleBentRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleBentLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleBentRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleBentLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleBentRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleBentLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleBentRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleBentLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleBentRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleBentLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleRaisedKnucklesRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleHingedRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleHingedLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleHingedRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleHingedLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleHingedRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleHingedLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleHingedRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleHingedLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleHingedRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleHingedLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleHingedRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleHingedLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexUpMiddleHingeRightHand.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeLeftHand.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeRightHandPitched.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexUpMiddleHingeLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexHingeMiddleUpRightHand.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpLeftHand.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpRightHandPitched.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexHingeMiddleUpLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleUnitRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleUnitIndexBentRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleUnitMiddleBentRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleUnitCupRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitCupLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleUnitHingeRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleCrossRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleCrossLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleCrossRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexMiddleCrossOnCircleRightHand.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleLeftHand.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleRightHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(middleBentOverIndexRightHand.canSwitchArrowHead());
		assertFalse(middleBentOverIndexLeftHand.canSwitchArrowHead());
		assertFalse(middleBentOverIndexRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(middleBentOverIndexLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(middleBentOverIndexRightHandFullTurn.canSwitchArrowHead());
		assertFalse(middleBentOverIndexLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(middleBentOverIndexRightHandPitched.canSwitchArrowHead());
		assertFalse(middleBentOverIndexLeftHandPitched.canSwitchArrowHead());
		assertFalse(middleBentOverIndexRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(middleBentOverIndexLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(middleBentOverIndexRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(middleBentOverIndexLeftHandFullTurnPitched.canSwitchArrowHead());

		assertFalse(indexBentOverMiddleRightHand.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleLeftHand.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleRightHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleLeftHandHalfTurn.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleRightHandFullTurn.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleLeftHandFullTurn.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleRightHandPitched.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleLeftHandPitched.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleRightHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleLeftHandHalfTurnPitched.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleRightHandFullTurnPitched.canSwitchArrowHead());
		assertFalse(indexBentOverMiddleLeftHandFullTurnPitched.canSwitchArrowHead());

	}

	@Override
	public void testSwitchArrowHead() {

	}

	@Override
	public void testCanSwitchToNormalArrows() {

		assertFalse(indexMiddleRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleOnCircleRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleOnCircleLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleBentRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleBentLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleRaisedKnucklesRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleHingedRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleHingedLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexUpMiddleHingeRightHand.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeLeftHand.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexUpMiddleHingeLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexHingeMiddleUpRightHand.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpLeftHand.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexHingeMiddleUpLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleUnitRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleUnitIndexBentRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleUnitMiddleBentRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleUnitCupRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitCupLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleUnitHingeRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleCrossRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexMiddleCrossOnCircleRightHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHand.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(middleBentOverIndexRightHand.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexLeftHand.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexRightHandPitched.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(middleBentOverIndexLeftHandFullTurnPitched.canSwitchToNormalArrows());

		assertFalse(indexBentOverMiddleRightHand.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleLeftHand.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleRightHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleLeftHandHalfTurn.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleRightHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleLeftHandFullTurn.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleRightHandPitched.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleLeftHandPitched.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleRightHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleLeftHandHalfTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleRightHandFullTurnPitched.canSwitchToNormalArrows());
		assertFalse(indexBentOverMiddleLeftHandFullTurnPitched.canSwitchToNormalArrows());

	}

	@Override
	public void testSwitchToNormalArrows() {

	}

	@Override
	public void testCanSwitchToAlternatingArrows() {

		assertFalse(indexMiddleRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleOnCircleRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleOnCircleLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleBentRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleBentLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleRaisedKnucklesRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleHingedRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleHingedLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexUpMiddleHingeRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexUpMiddleHingeLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexHingeMiddleUpRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexHingeMiddleUpLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleUnitRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleUnitIndexBentRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleUnitMiddleBentRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleUnitCupRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitCupLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleUnitHingeRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleCrossRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexMiddleCrossOnCircleRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(middleBentOverIndexRightHand.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexLeftHand.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(middleBentOverIndexLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

		assertFalse(indexBentOverMiddleRightHand.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleLeftHand.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleRightHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleLeftHandHalfTurn.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleRightHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleLeftHandFullTurn.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleRightHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleLeftHandPitched.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleRightHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleLeftHandHalfTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleRightHandFullTurnPitched.canSwitchToAlternatingArrows());
		assertFalse(indexBentOverMiddleLeftHandFullTurnPitched.canSwitchToAlternatingArrows());

	}

	@Override
	public void testSwitchToAlternatingArrows() {

	}

	@Override
	public void testCanSwitchStartingPoint() {

		assertFalse(indexMiddleRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleOnCircleRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleOnCircleLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleBentRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleBentLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleBentRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleBentLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleBentRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleBentLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleBentRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleBentLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleBentRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleBentLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleBentRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleBentLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleRaisedKnucklesRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleRaisedKnucklesLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleHingedRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleHingedLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexUpMiddleHingeRightHand.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeLeftHand.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexUpMiddleHingeLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexHingeMiddleUpRightHand.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpLeftHand.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexHingeMiddleUpLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleUnitRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleUnitIndexBentRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitIndexBentLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleUnitMiddleBentRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitMiddleBentLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleUnitCupRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitCupLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleUnitHingeRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleUnitHingeLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleCrossRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexMiddleCrossOnCircleRightHand.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleLeftHand.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexMiddleCrossOnCircleLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(middleBentOverIndexRightHand.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexLeftHand.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexRightHandPitched.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexLeftHandPitched.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(middleBentOverIndexLeftHandFullTurnPitched.canSwitchStartingPoint());

		assertFalse(indexBentOverMiddleRightHand.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleLeftHand.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleRightHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleLeftHandHalfTurn.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleRightHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleLeftHandFullTurn.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleRightHandPitched.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleLeftHandPitched.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleRightHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleLeftHandHalfTurnPitched.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleRightHandFullTurnPitched.canSwitchStartingPoint());
		assertFalse(indexBentOverMiddleLeftHandFullTurnPitched.canSwitchStartingPoint());

	}

	@Override
	public void testSwitchStartingPoint() {

	}

}
